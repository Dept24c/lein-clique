<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
    "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" >
<svg contentScriptType="text/ecmascript" width="595px"
     xmlns:xlink="http://www.w3.org/1999/xlink" zoomAndPan="magnify"
     contentStyleType="text/css" viewBox="-2648 -2681 5255 5282" height="598px"
     preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg"
     version="1.1">
    <g id="edges">
        <path fill="none" stroke-width="1"
              d="M 1455.550415,-123.207062 L 1434.034790,-320.542175"
              class="-&gt;ProbeChannel c/emitter-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1455.550415,-123.207062 L 862.979248,322.759125"
              class="-&gt;ProbeChannel log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1455.550415,-123.207062 L 1543.348999,-46.874550"
              class="-&gt;ProbeChannel g/propagate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1455.550415,-123.207062 L 1476.416992,-150.337738"
              class="-&gt;ProbeChannel c/receiver-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -810.544556,-1629.041748 L -656.234070,-1342.177490"
              class="timer user/timer-" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -810.544556,-1629.041748 L -1016.698059,-1612.863403"
              class="timer clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -810.544556,-1629.041748 L -679.537964,-1660.815186"
              class="timer clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -810.544556,-1629.041748 L -853.501770,-1867.185913"
              class="timer clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L 44.476891,1780.755005"
              class="outliers t/minutes" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L -120.225143,1404.250000"
              class="outliers t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L 603.939209,1017.905701"
              class="outliers clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L 443.707855,1343.557861"
              class="outliers var/create-variance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L 150.101288,1686.489624"
              class="outliers avg/moving-average" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L 263.622742,1621.582031"
              class="outliers var/std-dev" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 255.080551,1655.575562 L 283.692566,1645.311890"
              class="outliers t/seconds" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -502.777740,518.480347 L -553.408630,532.191223"
              class="capture-timings context/assoc-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -502.777740,518.480347 L 597.832458,1000.011963"
              class="capture-timings clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -502.777740,518.480347 L -411.533264,545.859741"
              class="capture-timings context/with-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -502.777740,518.480347 L -549.078125,466.320068"
              class="capture-timings t/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -502.777740,518.480347 L -491.048798,478.951263"
              class="capture-timings t/mark-error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -502.777740,518.480347 L -916.225586,942.662415"
              class="capture-timings t/mark-return" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -564.982727,549.715698"
              class="executor context/assoc-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -169.554810,1025.586060"
              class="executor r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L 539.591675,757.467529"
              class="executor p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L 446.308075,104.835518"
              class="executor r/async-result?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L 315.124023,844.648254"
              class="executor r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -696.180237,697.190674"
              class="executor r/expiring-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -228.357651,989.568604"
              class="executor r/subscribe" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -404.450836,562.372253"
              class="executor context/with-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -488.762695,479.426483"
              class="executor t/mark-error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -912.843750,947.894104"
              class="executor t/mark-return" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L 996.137695,1426.750488"
              class="executor Integer/MAX_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -388.803558,328.816284"
              class="executor t/mark-waiting" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -295.166443,529.811462"
              class="executor Thread/interrupted" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -253.658676,452.498749"
              class="executor pr/probe-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -449.393677,711.577942"
              class="executor Thread/currentThread" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -344.096832,620.286011"
              class="executor pr/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -534.677429,740.626953"
              class="executor t/mark-enter" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -528.864197,807.953918 L -395.386566,621.278198"
              class="executor TimeUnit/MILLISECONDS" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 513.082397,-1746.468384"
              class="compare-and-trigger clojure.core/hash-map"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 923.267517,-1406.439453"
              class="compare-and-trigger clojure.core/with-meta"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -1016.850342,-1609.438232"
              class="compare-and-trigger clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -1014.124695,-1082.624512"
              class="compare-and-trigger clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 856.283447,317.917328"
              class="compare-and-trigger log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -652.272827,-1661.046387"
              class="compare-and-trigger clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -842.587830,-1876.906250"
              class="compare-and-trigger clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -276.437042,-1376.467896"
              class="compare-and-trigger clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -433.518921,-910.520813"
              class="compare-and-trigger clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L -1190.203857,-363.553833"
              class="compare-and-trigger clojure.core/when-let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 862.741211,-667.436462"
              class="compare-and-trigger user/error-to-listeners"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 140.127609,271.973938"
              class="compare-and-trigger l/with-exclusive-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 745.925110,-741.347412"
              class="compare-and-trigger user/enqueue-to-listeners"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 664.275818,-513.399841"
              class="compare-and-trigger clojure.core/aset" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 141.096527,-814.601807"
              class="compare-and-trigger user/set-state" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 404.247955,-387.956482"
              class="compare-and-trigger clojure.core/case" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 755.930176,-616.623230"
              class="compare-and-trigger clojure.core/unchecked-inc"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 579.151611,-514.497864"
              class="compare-and-trigger clojure.core/object-array"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 604.519714,-432.247559"
              class="compare-and-trigger user/result-seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 164.187805,-48.918755"
              class="compare-and-trigger clojure.core/loop" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 219.043579,-145.397491"
              class="compare-and-trigger clojure.core/int" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 803.658875,-509.718628"
              class="compare-and-trigger user/defer-within-transaction"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 841.116699,-586.607178"
              class="compare-and-trigger clojure.core/keyword?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 663.226746,-652.265503"
              class="compare-and-trigger user/update-state" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 1093.358643,-927.863586"
              class="compare-and-trigger user/ResultState" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1372.386353,-1206.209839 L 571.455688,-360.627472"
              class="compare-and-trigger user/ResultCallback"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -806.084473,-2.665035"
              class="task-fn-body potemkin/fast-bound-fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -1253.460083,-592.643799"
              class="task-fn-body clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -1030.546143,-1597.768433"
              class="task-fn-body clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -1027.973511,-1067.901123"
              class="task-fn-body clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -669.093262,-1650.476440"
              class="task-fn-body clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -857.293579,-1867.024658"
              class="task-fn-body clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -297.465393,-1365.841187"
              class="task-fn-body clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -455.693329,-897.027588"
              class="task-fn-body clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -1079.754639,205.222031"
              class="task-fn-body t/enqueued-timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -980.199097,188.318832"
              class="task-fn-body ex/execute" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -899.548340,152.014954"
              class="task-fn-body java.lang.System/currentTimeMillis"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -86.583611,-80.278366"
              class="task-fn-body clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -967.020935,-33.313835"
              class="task-fn-body user/enqueue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1019.195374,-139.851700 L -830.695618,-140.974274"
              class="task-fn-body user/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -580.918701,535.549072"
              class="fn-body context/assoc-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L 492.742950,-1742.786011"
              class="fn-body clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -1259.562744,-591.082031"
              class="fn-body clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -1031.979004,-1597.830811"
              class="fn-body clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -1029.883057,-1068.013794"
              class="fn-body clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -669.450012,-1650.564087"
              class="fn-body clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -858.159058,-1867.133057"
              class="fn-body clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -296.588196,-1365.366089"
              class="fn-body clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -454.079102,-895.990173"
              class="fn-body clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -903.885864,175.113770"
              class="fn-body java.lang.System/currentTimeMillis"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -85.044815,-72.949493"
              class="fn-body clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -412.115845,549.407776"
              class="fn-body context/with-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -572.306274,457.205231"
              class="fn-body t/timer" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -501.027161,466.576630"
              class="fn-body t/mark-error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -934.122437,941.286865"
              class="fn-body t/mark-return" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -287.607849,162.563339"
              class="fn-body user/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -398.479767,318.683685"
              class="fn-body t/mark-waiting" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -967.148621,-8.230716"
              class="fn-body user/enqueue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -824.147949,-129.205795"
              class="fn-body user/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1233.287476,521.493591 L -404.256805,185.479919"
              class="fn-body user/async-result?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -155.468323,1018.999329"
              class="read-node* r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -1247.273193,-599.017334"
              class="read-node* clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -25.785263,60.300411"
              class="read-node* user/ResultChannel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -1023.112854,-1599.973389"
              class="read-node* clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -1018.461853,-1071.752075"
              class="read-node* clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 54.132027,12.744055"
              class="read-node* user/read-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -660.730835,-1651.117188"
              class="read-node* clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -850.187988,-1868.220947"
              class="read-node* clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -287.476013,-1364.206787"
              class="read-node* clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -441.148987,-895.699463"
              class="read-node* clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 324.031494,832.210266"
              class="read-node* r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 18.582565,52.050705"
              class="read-node* r/listeners" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -33.695400,-366.544678"
              class="read-node* clojure.core/identical?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -255.865250,1360.445190"
              class="read-node* t/invoke-in" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 142.847961,960.441101"
              class="read-node* r/success" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 482.339569,343.182373"
              class="read-node* u/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -63.161316,-69.057152"
              class="read-node* clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -213.405853,983.128601"
              class="read-node* r/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 69.034637,-69.098961"
              class="read-node* user/SuccessResult" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -56.505707,-170.662369"
              class="read-node* clojure.core/and" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L 22.073765,-75.671783"
              class="read-node* clojure.core/instance?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 0.019029,-0.007369 L -58.963585,36.662106"
              class="read-node* r/enqueue-to-listeners" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -713.541260,-1531.175049 L -674.041870,-1455.609253"
              class="read-channel* g/read-node*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -713.541260,-1531.175049 L -1017.086487,-1608.319702"
              class="read-channel* clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -713.541260,-1531.175049 L -670.652527,-1650.934692"
              class="read-channel* clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -713.541260,-1531.175049 L -850.706787,-1867.997437"
              class="read-channel* clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -713.541260,-1531.175049 L -677.078247,-1494.942749"
              class="read-channel* user/emitter-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 308.782288,-129.454941"
              class="bridge-in-order log/warn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 559.178223,743.976501"
              class="bridge-in-order p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 1048.546021,-149.151138"
              class="bridge-in-order g/edge" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 336.929047,833.642761"
              class="bridge-in-order r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 1017.986877,-54.740849"
              class="bridge-in-order g/terminal-propagator" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 1257.144897,688.497925"
              class="bridge-in-order r/error-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 991.027527,-95.771561"
              class="bridge-in-order g/consume" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 799.703796,42.194130"
              class="bridge-in-order p/restart" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 753.669556,334.824341"
              class="bridge-in-order p/complete" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 857.979797,59.650909 L 869.380371,-14.705517"
              class="bridge-in-order r/defer-within-transaction"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 503.664001,-1740.133179"
              class="check-for-drained clojure.core/hash-map"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 900.019226,-1402.836548"
              class="check-for-drained clojure.core/with-meta"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -1017.192444,-1607.926758"
              class="check-for-drained clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -1014.116028,-1082.430786"
              class="check-for-drained clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -652.969910,-1658.825928"
              class="check-for-drained clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -843.480652,-1874.671265"
              class="check-for-drained clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 491.380463,-1435.260376"
              class="check-for-drained clojure.core/doseq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -276.814056,-1374.380859"
              class="check-for-drained clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -433.670990,-911.307617"
              class="check-for-drained clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 706.525330,-960.768127"
              class="check-for-drained q/drained?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -1190.655884,-364.743408"
              class="check-for-drained clojure.core/when-let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 135.608643,269.452026"
              class="check-for-drained l/with-exclusive-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 186.388977,-622.546631"
              class="check-for-drained user/NodeState" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L -65.063751,-91.176682"
              class="check-for-drained clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 333.883209,-829.709961"
              class="check-for-drained user/set-state!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 608.906921,-1143.944946 L 855.803894,-864.940918"
              class="check-for-drained q/drained-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 958.731445,849.038940 L 968.239258,850.445251"
              class="persistent-queue PersistentQueue/EMPTY"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L -145.939880,1025.060547"
              class="-&gt;Node r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 863.567322,323.603363"
              class="-&gt;Node log/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 716.249634,-172.552917"
              class="-&gt;Node q/cancel-receive" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 301.894775,-678.122559"
              class="-&gt;Node l/release" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 88.221802,-213.725677"
              class="-&gt;Node q/queue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L -9.038237,481.079498"
              class="-&gt;Node l/with-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 471.020416,92.451462"
              class="-&gt;Node r/async-result?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 1605.685791,215.357574"
              class="-&gt;Node l/release-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 851.168823,-214.147369"
              class="-&gt;Node q/receive" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 773.775391,-312.573547"
              class="-&gt;Node q/error-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 615.544067,-163.805267"
              class="-&gt;Node q/transactional-copy" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 6.545909,-255.884094"
              class="-&gt;Node q/transactional-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 144.334229,277.981689"
              class="-&gt;Node l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 640.579956,-249.962494"
              class="-&gt;Node q/dispatch-message" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 779.763000,-139.427246"
              class="-&gt;Node l/release-exclusive" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 732.972168,-245.803558"
              class="-&gt;Node q/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 1675.482300,112.799423"
              class="-&gt;Node l/acquire-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L -204.548355,989.319275"
              class="-&gt;Node r/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 988.414795,-448.648682"
              class="-&gt;Node q/drain" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 654.359497,-93.172417"
              class="-&gt;Node l/acquire" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 1456.443970,823.096985"
              class="-&gt;Node q/closed?" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 869.387878,-344.577332"
              class="-&gt;Node l/try-acquire-exclusive" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 884.841187,-32.794720"
              class="-&gt;Node r/defer-within-transaction" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 532.393127,-173.298950"
              class="-&gt;Node l/try-acquire" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 877.843079,-848.699097"
              class="-&gt;Node q/drained-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1940.567749,-369.236267 L 909.965149,-282.546478"
              class="-&gt;Node l/acquire-exclusive" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -886.744873,-1729.932739 L -1019.835266,-1620.652344"
              class="lazy-channel-seq clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -886.744873,-1729.932739 L -679.349060,-1668.114136"
              class="lazy-channel-seq clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -886.744873,-1729.932739 L -858.780823,-1867.245117"
              class="lazy-channel-seq clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -886.744873,-1729.932739 L -825.253418,-1561.301270"
              class="lazy-channel-seq user/channel-&gt;lazy-seq"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1036.270264,-1598.943481"
              class="make-timing clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1035.725342,-1070.155518"
              class="make-timing clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1252.130859,379.011719"
              class="make-timing clojure.core/neg?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -673.475586,-1652.320923"
              class="make-timing clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -469.242920,-22.176712"
              class="make-timing clojure.core/when-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -861.916748,-1868.281250"
              class="make-timing clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -949.862122,-68.422401"
              class="make-timing clojure.core/assoc" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -300.437286,-1368.184326"
              class="make-timing clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -458.692810,-900.073364"
              class="make-timing clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1895.129639,-491.830750"
              class="make-timing clojure.core/=" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -235.853790,-348.781097"
              class="make-timing clojure.core/if-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -297.409088,-218.284988"
              class="make-timing user/make-record" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -616.405884,-5.268822"
              class="make-timing clojure.core/or" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1205.110596,127.068146"
              class="make-timing clojure.core/doall" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -880.845459,19.713537"
              class="make-timing user/timing" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1407.169678,407.145569"
              class="make-timing clojure.core/long" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1059.258301,-35.643227"
              class="make-timing clojure.core/-" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1150.922729,52.816525"
              class="make-timing trace-context/context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1094.798218,123.569504"
              class="make-timing clojure.core/map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1749.603638,30.249317 L -1006.310181,107.234261"
              class="make-timing java.lang.Long/MIN_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -602.968750,1309.889404 L -590.844604,1327.433228"
              class="now System/currentTimeMillis" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -602.968750,1309.889404 L -605.453613,1298.902222"
              class="now q/now" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1544.773071,636.740723 L 1555.332031,619.279297"
              class="error-value g/error-value" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1544.773071,636.740723 L 1530.432617,635.151428"
              class="error-value r/error-value" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1544.773071,636.740723 L 1540.411011,650.189331"
              class="error-value ch/error-value" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L 494.796570,-1741.485962"
              class="assoc-context clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L 896.628784,-1410.109375"
              class="assoc-context clojure.core/with-meta" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -1016.993347,-1608.709351"
              class="assoc-context clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -1014.331970,-1084.406006"
              class="assoc-context clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L 386.501648,-922.387451"
              class="assoc-context user/context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -652.785706,-1659.301880"
              class="assoc-context clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -843.445862,-1874.740967"
              class="assoc-context clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -276.437622,-1376.462280"
              class="assoc-context clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -435.160858,-915.171753"
              class="assoc-context clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L 203.632553,-1110.814209"
              class="assoc-context user/assoc-record" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -215.857483,-364.625122"
              class="assoc-context clojure.core/if-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L -277.252350,-233.119995"
              class="assoc-context user/make-record" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 276.279327,-1319.165649 L 303.139740,-888.048584"
              class="assoc-context user/Context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -553.300415,1323.088867 L -570.546753,1332.335327"
              class="channel-&gt;seq System/currentTimeMillis"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -553.300415,1323.088867 L -545.726501,1314.889526"
              class="channel-&gt;seq g/drain" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1265.958862,-592.460327"
              class="pipeline clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1035.887329,-1598.782471"
              class="pipeline clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1034.181030,-1069.287354"
              class="pipeline clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1249.855103,397.611786"
              class="pipeline clojure.core/neg?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -903.157959,494.544830"
              class="pipeline user/start-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 838.865967,336.552368"
              class="pipeline log/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -672.255493,-1651.624268"
              class="pipeline clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -465.715698,-13.445400"
              class="pipeline clojure.core/when-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -861.425842,-1868.063110"
              class="pipeline clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -298.214844,-1366.315063"
              class="pipeline clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1619.098633,225.647736"
              class="pipeline user/_" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -455.663605,-897.005493"
              class="pipeline clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 315.719757,849.340454"
              class="pipeline r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -972.230347,1113.028564"
              class="pipeline context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -45.474873,-371.222473"
              class="pipeline clojure.core/identical?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1091.413452,229.530029"
              class="pipeline t/enqueued-timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -971.033691,479.184967"
              class="pipeline potemkin/fast-bound-fn*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1836.938110,-377.720612"
              class="pipeline clojure.core/str" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -232.439041,-342.556000"
              class="pipeline clojure.core/if-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -719.898682,696.598816"
              class="pipeline r/expiring-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 481.032776,357.160522"
              class="pipeline u/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -988.131470,212.425903"
              class="pipeline ex/execute" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 1251.118530,703.918457"
              class="pipeline r/error-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -83.732452,-70.880753"
              class="pipeline clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -872.028503,643.901428"
              class="pipeline clojure.core/comp" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -612.539734,3.959257"
              class="pipeline clojure.core/or" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -569.984253,463.670105"
              class="pipeline t/timer" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 382.323395,-370.562195"
              class="pipeline clojure.core/case" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -311.402069,14.936340"
              class="pipeline user/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -634.905396,309.970947"
              class="pipeline user/IPipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -627.148193,390.895447"
              class="pipeline user/run" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1406.260620,428.627625"
              class="pipeline clojure.core/long" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -850.478577,544.890259"
              class="pipeline user/gen-timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 142.498199,-31.365789"
              class="pipeline clojure.core/loop" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 383.892792,55.535866"
              class="pipeline r/result" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -799.884338,453.507568"
              class="pipeline clojure.core/identity" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L 197.285324,-127.869843"
              class="pipeline clojure.core/int" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -921.512878,-359.159515"
              class="pipeline r/timed-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -703.501038,393.315277"
              class="pipeline user/run-finally" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1621.956421,109.658104"
              class="pipeline clojure.core/reify" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -208.327148,-149.179123"
              class="pipeline user/try*" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -743.143738,539.742859"
              class="pipeline user/implicit?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -970.205505,592.241638"
              class="pipeline user/invoke" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -1117.738525,440.572693"
              class="pipeline user/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -778.602295,362.765503"
              class="pipeline user/on-success" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2349.848633,1662.302612 L -915.621826,358.214813"
              class="pipeline lamina.core.utils/retry-exception?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 837.619080,304.590637 L 845.207031,318.823669"
              class="lazy-seq-&gt;channel log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 147.099380,767.822693 L -126.179268,1383.663574"
              class="aggregate t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 147.099380,767.822693 L 195.681458,445.331879"
              class="aggregate l/lock" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 147.099380,767.822693 L 598.201965,999.233521"
              class="aggregate clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 147.099380,767.822693 L 20.698280,1655.884155"
              class="aggregate t/period" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 147.099380,767.822693 L 131.622818,296.719940"
              class="aggregate l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -862.283752,1417.042969 L -596.368469,1342.719116"
              class="timer- System/currentTimeMillis" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -862.283752,1417.042969 L -898.046204,1413.700195"
              class="timer- Long/MIN_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -862.283752,1417.042969 L -850.197693,1392.866943"
              class="timer- p/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -862.283752,1417.042969 L -955.037537,1121.202271"
              class="timer- context/timer" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -862.283752,1417.042969 L -910.505554,1474.927734"
              class="timer- System/nanoTime" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1979.830200,-1534.510986 L 1990.190796,-1529.595093"
              class="format-timing str/trim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -1254.014404,-617.783936"
              class="expand-multi-arities clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -1027.665405,-1598.091064"
              class="expand-multi-arities clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -1022.888855,-1094.892090"
              class="expand-multi-arities clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -674.133972,-1652.768921"
              class="expand-multi-arities clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -858.202026,-1867.139893"
              class="expand-multi-arities clojure.core/list"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -304.163605,-1375.551392"
              class="expand-multi-arities clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -954.756531,-1264.554321 L -651.056519,-730.702087"
              class="expand-multi-arities clojure.core/list*"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -1020.444824,-1602.189453"
              class="run-pipeline clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -1018.489929,-1092.075562"
              class="run-pipeline clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -670.243286,-1650.795166"
              class="run-pipeline clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -853.542664,-1867.178589"
              class="run-pipeline clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -304.354614,-1377.420898"
              class="run-pipeline clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -455.351105,-919.736511"
              class="run-pipeline clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -763.874634,-1361.494751 L -526.492249,-715.140625"
              class="run-pipeline user/pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 994.463013,845.945984"
              class="-&gt;TransactionalEventQueue PersistentQueue/EMPTY"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 1122.703979,780.153748"
              class="-&gt;TransactionalEventQueue r/success-result"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 623.507507,1000.064453"
              class="-&gt;TransactionalEventQueue clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 466.693878,107.346329"
              class="-&gt;TransactionalEventQueue r/async-result?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 343.095459,844.600830"
              class="-&gt;TransactionalEventQueue r/result-channel"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 1205.937378,644.773315"
              class="-&gt;TransactionalEventQueue r/claim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 1199.146484,720.782776"
              class="-&gt;TransactionalEventQueue r/error!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 504.620361,360.117249"
              class="-&gt;TransactionalEventQueue u/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 1252.340210,706.990662"
              class="-&gt;TransactionalEventQueue r/error-result"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1060.561157,810.970886 L 1029.419067,729.907776"
              class="-&gt;TransactionalEventQueue r/add-listener"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 515.168457,-1752.605957"
              class="update-state clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 917.532898,-1424.234253"
              class="update-state clojure.core/with-meta" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -1016.667236,-1612.350220"
              class="update-state clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -1014.671692,-1085.840088"
              class="update-state clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -651.935242,-1664.399292"
              class="update-state clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -445.807007,-33.081093"
              class="update-state clojure.core/when-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -842.048218,-1879.655884"
              class="update-state clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 613.042236,991.828003"
              class="update-state clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -276.734375,-1381.109131"
              class="update-state clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -434.907501,-914.705200"
              class="update-state clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -25.949078,-391.185547"
              class="update-state clojure.core/identical?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 210.574570,-1105.504639"
              class="update-state user/assoc-record" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 459.368530,-505.781860"
              class="update-state clojure.core/ref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 313.996094,-1222.207275"
              class="update-state clojure.core/if-let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -64.505440,-90.800026"
              class="update-state clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 51.691174,-1382.824219"
              class="update-state clojure.core/dosync" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 399.997986,-391.348877"
              class="update-state clojure.core/case" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 475.418457,-625.298462"
              class="update-state user/in-transaction?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L -52.496841,-195.144226"
              class="update-state clojure.core/and" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 553.190186,-620.400879"
              class="update-state clojure.core/dec" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 520.310120,-715.064697"
              class="update-state clojure.core/ref-set" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 405.650604,-554.487671"
              class="update-state clojure.core/inc" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 1083.350586,-931.975891"
              class="update-state user/ResultState" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1078.064331,-1699.534424 L 598.937134,-761.424377"
              class="update-state clojure.core/ensure" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2054.805908,-1419.268677 L 2009.081421,-1511.062378"
              class="parse-string-query str/trim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2054.805908,-1419.268677 L 2068.299316,-1405.609863"
              class="parse-string-query Pattern/quote" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2054.805908,-1419.268677 L 2016.697388,-1403.408813"
              class="parse-string-query str/split-lines" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2054.805908,-1419.268677 L 2056.239746,-1364.124146"
              class="parse-string-query Pattern/compile" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2054.805908,-1419.268677 L 2064.921631,-1434.713135"
              class="parse-string-query c/comparators" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 960.049133,1141.169556 L 944.654236,1129.718018"
              class="distributor g/distributing-propagator" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 960.049133,1141.169556 L 623.710754,1010.687195"
              class="distributor clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 960.049133,1141.169556 L 1397.858154,879.564087"
              class="distributor g/closed?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 960.049133,1141.169556 L 880.594971,1167.176514"
              class="distributor g/join" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 960.049133,1141.169556 L 970.864746,1124.850586"
              class="distributor g/node" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1054.570557,2364.584229 L -1062.826660,2341.392578"
              class="select-probes c/cancel-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1054.570557,2364.584229 L -1137.104248,2238.354004"
              class="select-probes str/replace" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1054.570557,2364.584229 L -986.999451,2339.314697"
              class="select-probes c/receive-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1054.570557,2364.584229 L -1037.974854,2381.807373"
              class="select-probes c/on-closed" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1054.570557,2364.584229 L -1076.506592,2371.169922"
              class="select-probes c/channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1054.570557,2364.584229 L -1036.439453,2349.409912"
              class="select-probes c/siphon" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L 487.281372,-1752.724854"
              class="defexecutor clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L -1016.722961,-1613.144287"
              class="defexecutor clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L -651.960815,-1665.006958"
              class="defexecutor clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L -842.521973,-1877.130371"
              class="defexecutor clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L -286.472992,-1391.354614"
              class="defexecutor clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L -61.377590,-1461.408936"
              class="defexecutor clojure.core/merge" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -198.954987,-1693.926147 L -11.528393,-1431.684448"
              class="defexecutor user/executor" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -1018.939697,-1619.432739"
              class="siphon-&gt;&gt; clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -1019.942017,-1093.273682"
              class="siphon-&gt;&gt; clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -656.861694,-1674.779053"
              class="siphon-&gt;&gt; clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -842.861938,-1885.835083"
              class="siphon-&gt;&gt; clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -290.726563,-1391.901123"
              class="siphon-&gt;&gt; clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -445.695770,-922.162354"
              class="siphon-&gt;&gt; clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -234.654572,-2073.308105"
              class="siphon-&gt;&gt; user/channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L -350.084167,-2063.119385"
              class="siphon-&gt;&gt; clojure.core/-&gt;&gt;"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -308.707550,-2084.093994 L 69.978828,-1955.698853"
              class="siphon-&gt;&gt; user/siphon" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1268.301514,-616.272034"
              class="defer-within-transaction clojure.core/fn"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1039.734131,-1601.111084"
              class="defer-within-transaction clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1041.927490,-1079.672363"
              class="defer-within-transaction clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -677.127869,-1655.708984"
              class="defer-within-transaction clojure.core/seq"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -864.666138,-1869.978394"
              class="defer-within-transaction clojure.core/list"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -303.767761,-1373.867065"
              class="defer-within-transaction clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -461.290131,-909.378235"
              class="defer-within-transaction clojure.core/let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1123.705322,-551.281677"
              class="defer-within-transaction clojure.tools.logging/error"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1377.512207,-255.241135"
              class="defer-within-transaction user/result-channel"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1100.144043,-677.434082"
              class="defer-within-transaction lamina.core.result/success"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1048.014893,-658.149170"
              class="defer-within-transaction lamina.core.utils/in-transaction?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1357.387085,-687.981079"
              class="defer-within-transaction clojure.core/agent"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1043.487305,-542.498535"
              class="defer-within-transaction clojure.core/send"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1554.333374,-997.070496 L -1346.535522,-758.832642"
              class="defer-within-transaction lamina.core.utils/error"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L 488.733490,-1760.231201"
              class="instrumented-fn clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -1249.463989,-614.417847"
              class="instrumented-fn clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -1017.047607,-1615.059692"
              class="instrumented-fn clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -1016.504578,-1089.736816"
              class="instrumented-fn clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -652.463379,-1667.934204"
              class="instrumented-fn clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -841.991760,-1881.328125"
              class="instrumented-fn clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L 478.664520,-1460.079102"
              class="instrumented-fn clojure.core/doseq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -280.907715,-1388.230469"
              class="instrumented-fn clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -439.765686,-920.036011"
              class="instrumented-fn clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L 374.213837,-1202.956665"
              class="instrumented-fn user/task-fn-body" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L -306.397644,-791.126038"
              class="instrumented-fn user/probe-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L 96.316162,-1946.208740"
              class="instrumented-fn user/siphon" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 195.425873,-1908.358765 L 256.322632,-1140.696533"
              class="instrumented-fn user/fn-body" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -1033.184326,-1597.998413"
              class="def-result-channel clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -1031.631104,-1068.351563"
              class="def-result-channel clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -670.811157,-1650.992554"
              class="def-result-channel clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -859.295105,-1867.359985"
              class="def-result-channel clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -1327.765015,247.992737"
              class="def-result-channel clojure.core/boolean"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L 597.638611,1000.477661"
              class="def-result-channel clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -298.177490,-1366.289795"
              class="def-result-channel clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -456.167664,-897.396667"
              class="def-result-channel clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -639.966858,221.730347"
              class="def-result-channel user/success" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -268.170532,1364.125732"
              class="def-result-channel t/invoke-in" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -1374.071411,-227.624008"
              class="def-result-channel user/result-channel"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -314.231262,8.932681"
              class="def-result-channel user/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -670.945374,159.750076"
              class="def-result-channel user/result-callback"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -750.145447,230.702194"
              class="def-result-channel user/result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -819.724243,220.680145"
              class="def-result-channel user/isRealized" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -546.519226,176.993378"
              class="def-result-channel user/deftype+" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1367.792725,223.674957 L -1118.749023,421.993988"
              class="def-result-channel user/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 558.503174,769.911072"
              class="defer-onto-queue p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 338.111603,855.979492"
              class="defer-onto-queue r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 156.612854,981.968628"
              class="defer-onto-queue r/success" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 782.162231,1378.765381"
              class="defer-onto-queue t/invoke-at" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 995.252380,1430.025635"
              class="defer-onto-queue Integer/MAX_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 816.452393,1385.096191"
              class="defer-onto-queue t/advance-until" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 795.946106,1401.422729 L 770.446289,1411.177124"
              class="defer-onto-queue lamina.core.channel/channel"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 506.733185,-1741.046875"
              class="close-node! clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 896.925110,-1408.640747"
              class="close-node! clojure.core/with-meta" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -1016.816284,-1609.650146"
              class="close-node! clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -1014.277771,-1084.087036"
              class="close-node! clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -652.299988,-1660.927734"
              class="close-node! clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -842.758728,-1876.379517"
              class="close-node! clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -276.368469,-1377.514648"
              class="close-node! clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -434.313873,-913.401733"
              class="close-node! clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 711.738098,-962.345764"
              class="close-node! q/drained?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 185.373734,-623.296143"
              class="close-node! user/NodeState" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -65.527115,-91.460800"
              class="close-node! clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L -592.778564,-15.865286"
              class="close-node! clojure.core/or" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 332.341553,-830.881348"
              class="close-node! user/set-state!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 455.623474,-783.954041"
              class="close-node! q/close" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 860.041504,-867.517822"
              class="close-node! q/drained-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 673.485718,-1350.959473 L 391.280762,-729.676636"
              class="close-node! clojure.core/nil?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1039.864990,-1601.223999"
              class="def-query-operator clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1039.761230,-1074.144653"
              class="def-query-operator clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -676.354004,-1654.766724"
              class="def-query-operator clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -864.954834,-1870.212769"
              class="def-query-operator clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1327.130859,247.039017"
              class="def-query-operator clojure.core/boolean"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1485.578613,-201.933319"
              class="def-query-operator user/pre-aggregate?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1310.180298,-111.415672"
              class="def-query-operator user/pre-aggregate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -302.577972,-1371.065186"
              class="def-query-operator clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1622.382690,203.008530"
              class="def-query-operator user/_" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -460.612213,-903.818542"
              class="def-query-operator clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1322.921997,-190.221069"
              class="def-query-operator user/distribute?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1910.479980,-497.465240"
              class="def-query-operator clojure.core/=" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1217.501099,-358.929810"
              class="def-query-operator clojure.core/when-let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1847.348999,-389.088531"
              class="def-query-operator clojure.core/str" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1379.889893,-429.606567"
              class="def-query-operator user/periodic?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1432.043579,-364.080658"
              class="def-query-operator clojure.core/namespace"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1474.349976,-105.795494"
              class="def-query-operator user/getName" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1215.267090,-134.979584"
              class="def-query-operator user/getNamespace" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1225.481934,-203.297440"
              class="def-query-operator user/aggregate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1626.736084,87.980110"
              class="def-query-operator clojure.core/reify" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1330.057129,-289.378662"
              class="def-query-operator user/transform" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1439.913452,-283.810303"
              class="def-query-operator user/intra-aggregate"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2139.385254,-342.414001 L -1518.460571,-325.471985"
              class="def-query-operator user/operators" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 1421.222412,-342.731567"
              class="sympathetic-probe-channel c/emitter-node"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 736.897583,-536.411682"
              class="sympathetic-probe-channel g/node*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 1256.741089,-441.672546"
              class="sympathetic-probe-channel g/cancel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 1477.946533,-173.556244"
              class="sympathetic-probe-channel c/receiver-node"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 1406.213989,-403.619751"
              class="sympathetic-probe-channel c/channel*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 1382.198853,-381.491516"
              class="sympathetic-probe-channel g/on-state-changed"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1350.039795,-394.862366 L 1146.433960,-265.073181"
              class="sympathetic-probe-channel g/link" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1426.823730,-374.167694 L 1430.530273,-348.317963"
              class="probe-channel- c/emitter-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1426.823730,-374.167694 L 1422.981812,-392.087341"
              class="probe-channel- c/channel*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1426.823730,-374.167694 L 1409.099609,-375.257538"
              class="probe-channel- g/on-state-changed" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1120.541138,2235.802002 L -1131.671509,2231.590820"
              class="clojure-ns str/replace" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 182.043945,348.363647 L 195.165009,417.732025"
              class="zip-all l/lock" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 182.043945,348.363647 L 139.740494,293.792236"
              class="zip-all l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 182.043945,348.363647 L 198.804230,354.103271"
              class="zip-all System/arraycopy" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1104.509888,-232.381805 L 1065.516235,-171.292740"
              class="receive-all g/edge" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1104.509888,-232.381805 L 1123.885254,-248.571060"
              class="receive-all g/link" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1104.509888,-232.381805 L 1092.488281,-238.747375"
              class="receive-all g/callback-propagator" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 663.064758,1001.579407 L 624.617065,1004.546448"
              class="context clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L -1017.966797,-1605.851563"
              class="enqueue-and-release clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L -1014.178528,-1083.324219"
              class="enqueue-and-release clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L -655.307556,-1654.998413"
              class="enqueue-and-release clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L -845.730103,-1871.434814"
              class="enqueue-and-release clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L 279.536957,-691.763000"
              class="enqueue-and-release l/release" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L -280.686707,-1367.788086"
              class="enqueue-and-release clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L -38.119923,-1013.016541"
              class="enqueue-and-release q/enqueue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -98.184814,-1176.959473 L 288.184723,-1213.472534"
              class="enqueue-and-release clojure.core/if-let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -1249.021729,-613.899109"
              class="time* clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -1032.362061,-1597.872559"
              class="time* clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -1032.129395,-1068.491089"
              class="time* clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -672.138611,-1651.565796"
              class="time* clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -859.289734,-1867.358643"
              class="time* clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -301.321045,-1369.192627"
              class="time* clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -460.747467,-904.245667"
              class="time* clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -1367.954224,-254.119034"
              class="time* user/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -842.859436,-398.082611"
              class="time* pr/probe-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -806.514832,-446.645874"
              class="time* user/capture-timings" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1142.623657,-700.228699 L -976.270813,-382.276001"
              class="time* user/print-timing-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -48.302559,2580.819580 L -57.963310,2576.104980"
              class="render-dot-string ImageIO/read" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -48.302559,2580.819580 L -38.858730,2575.681885"
              class="render-dot-string io/input-stream" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -174.282608,1621.323120 L 21.541182,1779.123779"
              class="moving-quantiles t/minutes" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -174.282608,1621.323120 L -134.453354,1410.217529"
              class="moving-quantiles t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -174.282608,1621.323120 L -207.190109,1615.297241"
              class="moving-quantiles sample/moving-sampler"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -174.282608,1621.323120 L -173.518112,1604.719116"
              class="moving-quantiles math/quantiles" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L -152.206161,1019.911621"
              class="-&gt;DistributingPropagator r/result-callback"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L 838.138672,334.268707"
              class="-&gt;DistributingPropagator log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L 600.244019,996.267456"
              class="-&gt;DistributingPropagator clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L -8.435131,490.611206"
              class="-&gt;DistributingPropagator l/with-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L 126.964294,296.082977"
              class="-&gt;DistributingPropagator l/with-exclusive-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L 43.661049,454.957764"
              class="-&gt;DistributingPropagator n/closed-result"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 59.547062,510.520630 L -209.466888,984.633484"
              class="-&gt;DistributingPropagator r/subscribe"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 1869.693604,1047.491699"
              class="trace-router c/transform-stream" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 1975.694580,975.511169"
              class="trace-router c/*stream-generator*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 1846.197144,1004.559265"
              class="trace-router time/with-task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 1791.330200,754.668335"
              class="trace-router cache/router" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 2003.296387,779.049255"
              class="trace-router cache/inner-cache" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 2012.963013,836.174316"
              class="trace-router q/parse-descriptor" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 2059.636230,746.108032"
              class="trace-router cache/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 2064.655273,845.400024"
              class="trace-router time/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 1969.880493,917.915344"
              class="trace-router time/with-period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2030.609253,905.753906 L 1797.645264,674.581665"
              class="trace-router time/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -1017.413635,-1616.313721"
              class="split clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -1017.953308,-1091.540161"
              class="split clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -653.336731,-1670.226440"
              class="split clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -842.001709,-1881.604492"
              class="split clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L 474.823975,-1456.483154"
              class="split clojure.core/doseq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -286.872986,-1391.463867"
              class="split clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -443.394562,-921.692688"
              class="split clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L -215.253021,-2058.436279"
              class="split user/channel" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -152.569855,-1913.201904 L 69.415794,-1948.976074"
              class="split user/siphon" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 424.230682,68.600502 L 446.938354,87.649887"
              class="probe-result r/async-result?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 424.230682,68.600502 L 407.360962,56.570415"
              class="probe-result r/result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 1126.941406,762.663208"
              class="-&gt;EventQueue r/success-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 467.883209,106.216812"
              class="-&gt;EventQueue r/async-result?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 342.530487,841.267273"
              class="-&gt;EventQueue r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 1201.155396,634.361755"
              class="-&gt;EventQueue r/claim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 1198.045776,707.554688"
              class="-&gt;EventQueue r/error!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 506.130920,357.828094"
              class="-&gt;EventQueue u/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 144.200302,287.829712"
              class="-&gt;EventQueue l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 1251.161987,696.557556"
              class="-&gt;EventQueue r/error-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1033.511353,635.870361 L 1025.964233,702.926819"
              class="-&gt;EventQueue r/add-listener" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L 487.641296,-1750.552612"
              class="task clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L -1016.659973,-1612.136475"
              class="task clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L -1015.693970,-1088.376831"
              class="task clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L -651.940491,-1663.637695"
              class="task clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L -842.465942,-1877.333008"
              class="task clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L -279.376373,-1386.583130"
              class="task clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L 185.169479,-1292.686035"
              class="task user/task" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L 47.134617,-1592.669312"
              class="task user/default-executor" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 41.471279,-1639.986816 L 99.442986,-1504.903687"
              class="task trace/instrumented-fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 861.097229,320.716553"
              class="bridge log/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 1076.356689,110.896843"
              class="bridge n/upstream-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 1030.986450,-48.975906"
              class="bridge g/terminal-propagator" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 1020.270813,97.720367"
              class="bridge n/downstream-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 1051.989258,137.906448"
              class="bridge n/link" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 1048.058960,81.319069"
              class="bridge n/on-state-changed" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1049.295898,109.111046 L 1022.571472,127.645279"
              class="bridge g/bridge" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -1025.619019,-1598.705200"
              class="with-exclusive-lock clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -1014.308533,-1079.527710"
              class="with-exclusive-lock clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -669.146973,-1650.489014"
              class="with-exclusive-lock clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -855.252441,-1866.982788"
              class="with-exclusive-lock clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -302.162201,-1370.370728"
              class="with-exclusive-lock clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -460.446899,-913.165466"
              class="with-exclusive-lock clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -822.466248,-725.163086"
              class="with-exclusive-lock user/acquire-exclusive"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -812.052368,-1044.744507 L -742.495361,-698.114868"
              class="with-exclusive-lock user/release-exclusive"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -980.832092,1091.199219 L -970.316650,1099.299805"
              class="add-to-last-sub-timing context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1611.850220,477.682983 L 1567.551025,594.213013"
              class="-&gt;Channel g/error-value" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1611.850220,477.682983 L 1643.324463,393.981781"
              class="-&gt;Channel q/messages" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1611.850220,477.682983 L 1555.478271,-23.776642"
              class="-&gt;Channel g/propagate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1611.850220,477.682983 L 1608.727173,441.616089"
              class="-&gt;Channel g/queue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1611.850220,477.682983 L 1416.253662,859.919922"
              class="-&gt;Channel g/closed?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1611.850220,477.682983 L 1581.795410,482.054413"
              class="-&gt;Channel g/split" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -1036.738770,-1599.158936"
              class="with-task-queue clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -1033.703979,-1094.732666"
              class="with-task-queue clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -677.824280,-1656.726929"
              class="with-task-queue clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -862.910034,-1868.795044"
              class="with-task-queue clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -304.360901,-1377.662354"
              class="with-task-queue clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -1024.089600,-1198.616577"
              class="with-task-queue clojure.core/binding" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1150.708984,-1362.940063 L -976.818359,-852.797546"
              class="with-task-queue lamina.time.queue/*task-queue*"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1177.446777,-1509.725586 L -1042.150513,-1603.777100"
              class="defn-instrumented clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1177.446777,-1509.725586 L -679.335205,-1660.069702"
              class="defn-instrumented clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1177.446777,-1509.725586 L -865.151489,-1870.379883"
              class="defn-instrumented clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1177.446777,-1509.725586 L -1103.488037,-1311.141602"
              class="defn-instrumented user/instrumented-fn"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1177.446777,-1509.725586 L -1290.847412,-1265.979980"
              class="defn-instrumented clojure.core/defn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1202.656494,611.189697 L 1208.480591,621.929077"
              class="consumption r/claim" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L 487.572052,-1750.845459"
              class="bound-task clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L -1016.655762,-1611.897827"
              class="bound-task clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L -1015.969666,-1088.879761"
              class="bound-task clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L -651.972595,-1663.054199"
              class="bound-task clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L -842.735352,-1876.447510"
              class="bound-task clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L -281.489319,-1388.734375"
              class="bound-task clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L 35.377922,-1582.755005"
              class="bound-task user/default-executor" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -91.588852,-1620.469238 L 93.244316,-1499.696289"
              class="bound-task trace/instrumented-fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1038.388550,-1600.097900"
              class="def-query-comparator clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1039.906372,-1074.367188"
              class="def-query-comparator clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -675.840088,-1654.223755"
              class="def-query-comparator clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -863.695068,-1869.276489"
              class="def-query-comparator clojure.core/list"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -302.840454,-1371.556641"
              class="def-query-comparator clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -461.107849,-905.747131"
              class="def-query-comparator clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1887.519897,-513.486633"
              class="def-query-comparator clojure.core/=" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1214.664063,-367.632568"
              class="def-query-comparator clojure.core/when-let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1825.952881,-403.073944"
              class="def-query-comparator clojure.core/str" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1613.102661,-650.274841"
              class="def-query-comparator clojure.core/*ns*"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1641.101685,-690.569885 L -1066.629272,-296.845490"
              class="def-query-comparator user/comparators" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -1024.759033,-1599.070190"
              class="node* clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -1019.700989,-1070.704224"
              class="node* clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -663.282349,-1650.368042"
              class="node* clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -451.066467,-36.108345"
              class="node* clojure.core/when-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -852.179016,-1867.491333"
              class="node* clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -291.572662,-1363.958252"
              class="node* clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L 60.282639,-213.128082"
              class="node* q/queue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -446.148499,-894.309021"
              class="node* clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -321.850342,-130.735214"
              class="node* clojure.core/pr-str" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -1189.672363,-357.011780"
              class="node* clojure.core/when-let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -1819.609253,-389.758667"
              class="node* clojure.core/str" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -21.403782,-254.206833"
              class="node* q/transactional-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -297.536011,-222.081314"
              class="node* user/make-record" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L 165.943542,-603.877625"
              class="node* user/NodeState" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -439.742706,604.328674"
              class="node* l/asymmetric-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -389.782318,-231.584259 L -333.351440,-78.176605"
              class="node* clojure.core/ifn?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -507.787903,-1654.807739 L -1016.702332,-1612.916626"
              class="dosync-yielding clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -507.787903,-1654.807739 L -651.956543,-1663.292480"
              class="dosync-yielding clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -507.787903,-1654.807739 L -844.246094,-1873.337769"
              class="dosync-yielding clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -507.787903,-1654.807739 L 25.819733,-1385.013184"
              class="dosync-yielding clojure.core/dosync" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -507.787903,-1654.807739 L -460.994934,-1566.574219"
              class="dosync-yielding java.lang.Thread/sleep"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -1255.563843,-618.391846"
              class="wait-stage clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -1032.963135,-1597.959595"
              class="wait-stage clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -1038.742798,-1072.797852"
              class="wait-stage clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -673.929321,-1652.623779"
              class="wait-stage clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -860.166931,-1867.602051"
              class="wait-stage clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -303.089172,-1372.071167"
              class="wait-stage clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1134.424561,-990.915833 L -918.132263,-383.781372"
              class="wait-stage r/timed-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1270.135254,1328.900635 L 623.229431,1011.785889"
              class="query-seqs clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1270.135254,1328.900635 L 1262.473389,1305.305054"
              class="query-seqs time/invoke-at" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1270.135254,1328.900635 L 1451.235840,1246.576416"
              class="query-seqs time/advance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1270.135254,1328.900635 L 1022.131287,1426.870728"
              class="query-seqs Integer/MAX_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1270.135254,1328.900635 L 1378.077026,1290.074951"
              class="query-seqs time/non-realtime-task-queue"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1270.135254,1328.900635 L 1236.657349,1315.156372"
              class="query-seqs time/now" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 497.331970,-1740.473755"
              class="read-from-queue clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 901.820618,-1401.140015"
              class="read-from-queue clojure.core/with-meta"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -1021.119568,-1601.517578"
              class="read-from-queue clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -1016.154724,-1074.608887"
              class="read-from-queue clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -658.678772,-1652.140625"
              class="read-from-queue clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -848.397461,-1869.199219"
              class="read-from-queue clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -285.151520,-1364.911987"
              class="read-from-queue clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -437.117706,-898.687500"
              class="read-from-queue clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -21.010044,-381.436676"
              class="read-from-queue clojure.core/identical?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 130.636414,268.737396"
              class="read-from-queue l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 173.262573,-598.350281"
              class="read-from-queue user/NodeState" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L -65.639366,-91.525963"
              class="read-from-queue clojure.core/when" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 176.291107,-293.464203"
              class="read-from-queue user/ensure-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 379.565918,-379.461548"
              class="read-from-queue clojure.core/case" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 125.400589,-286.618103"
              class="read-from-queue user/check-for-drained"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 80.134995,-92.951828"
              class="read-from-queue user/SuccessResult" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 105.831871,-390.071167 L 29.581306,-102.644379"
              class="read-from-queue clojure.core/instance?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2518.806396,327.799164 L -2527.268555,318.397461"
              class="floor Calendar/getInstance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2518.806396,327.799164 L -2528.195313,336.256805"
              class="floor TimeZone/getTimeZone" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -1245.978760,-603.533386"
              class="with-instrumentation clojure.core/fn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -1028.124512,-1597.998657"
              class="with-instrumentation clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -1023.307434,-1068.748535"
              class="with-instrumentation clojure.core/vector"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -668.072449,-1650.279541"
              class="with-instrumentation clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -855.786133,-1866.964966"
              class="with-instrumentation clojure.core/list"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L 601.147766,995.350098"
              class="with-instrumentation clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -298.130066,-1366.258057"
              class="with-instrumentation clojure.core/apply"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -457.748749,-898.901672"
              class="with-instrumentation clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -1362.203735,-248.728836"
              class="with-instrumentation user/result-channel"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -833.329224,-402.140137"
              class="with-instrumentation pr/probe-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -837.007568,-558.131348 L -799.934082,-451.438354"
              class="with-instrumentation user/capture-timings"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1038.765137,-1600.356323"
              class="def-query-lookup clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1040.854858,-1076.115601"
              class="def-query-lookup clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -676.301697,-1654.708740"
              class="def-query-lookup clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -863.975769,-1869.466553"
              class="def-query-lookup clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -303.252808,-1372.442017"
              class="def-query-lookup clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -461.300415,-907.275818"
              class="def-query-lookup clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1889.169678,-515.393250"
              class="def-query-lookup clojure.core/=" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1212.376343,-370.009644"
              class="def-query-lookup clojure.core/when-let"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1826.655884,-403.497345"
              class="def-query-lookup clojure.core/str" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1603.827148,-652.718567"
              class="def-query-lookup clojure.core/*ns*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1587.646118,-828.005371 L -1103.979126,-464.741760"
              class="def-query-lookup user/lookups" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 121.365807,1337.692261 L -118.220222,1393.295166"
              class="periodically t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 121.365807,1337.692261 L 599.074463,1013.485413"
              class="periodically clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 121.365807,1337.692261 L 128.203140,1353.974854"
              class="periodically t/invoke-repeatedly" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L 283.578827,-141.279984"
              class="transform-message log/warn" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -1022.830933,-1600.158447"
              class="transform-message clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -1017.150818,-1073.183594"
              class="transform-message clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -661.449951,-1650.851929"
              class="transform-message clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -850.555542,-1868.060059"
              class="transform-message clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -289.948334,-1363.911987"
              class="transform-message clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -441.883575,-895.363647"
              class="transform-message clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -226.782013,-365.435638"
              class="transform-message clojure.core/if-not" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -299.438141,-7.822035"
              class="transform-message user/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -68.934326,-195.422821"
              class="transform-message clojure.core/and" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -263.565033,-473.558655 L -200.503311,-171.924362"
              class="transform-message user/try*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2270.826416,-1538.446655 L -2270.754639,-1527.692749"
              class="parse-descriptor p/parse-string-query" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2270.826416,-1538.446655 L -2261.854980,-1544.392334"
              class="parse-descriptor s/parse-struct-query" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -293.773407,697.227356 L -135.016068,1382.821045"
              class="moving-sampler t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -293.773407,697.227356 L -161.952408,577.680420"
              class="moving-sampler t/now" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -293.773407,697.227356 L -298.696655,682.394531"
              class="moving-sampler t/hours" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -293.773407,697.227356 L -428.247009,624.932983"
              class="moving-sampler l/asymmetric-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -955.646118,2319.329346 L -963.096863,2325.489746"
              class="on-new-probe c/receive-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2171.705811,1279.746948 L -2178.144531,1271.555664"
              class="closed-channel g/close" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L -1018.591492,-1604.663940"
              class="set-state! clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L -1014.476929,-1085.101929"
              class="set-state! clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L -658.327332,-1652.360718"
              class="set-state! clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L -847.778870,-1869.622192"
              class="set-state! clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L -298.098572,-1366.237061"
              class="set-state! clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L -444.762634,-922.020325"
              class="set-state! clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L 185.380753,-1100.738281"
              class="set-state! user/assoc-record" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -386.716217,-1232.560791 L 116.932755,-819.239929"
              class="set-state! user/set-state" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1847.402710,1064.302490"
              class="query-streams c/transform-stream" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1955.287476,994.127441"
              class="query-streams c/*stream-generator*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1830.333862,1024.720581"
              class="query-streams time/with-task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1476.779541,1235.108887"
              class="query-streams time/advance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1947.026367,931.280579"
              class="query-streams time/with-period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1403.909302,1279.356567"
              class="query-streams time/non-realtime-task-queue"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1814.568237,1085.357422 L 1715.548828,1042.246094"
              class="query-streams c/*query*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -1023.395874,-1599.797119"
              class="with-lock clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -1015.154053,-1087.215454"
              class="with-lock clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -668.991760,-1650.453369"
              class="with-lock clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -854.322693,-1867.062744"
              class="with-lock clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -303.377777,-1372.746826"
              class="with-lock clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -457.974731,-917.357849"
              class="with-lock clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -747.286560,-1013.414124"
              class="with-lock user/release" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -772.856262,-1186.645386 L -777.176270,-866.219116"
              class="with-lock user/acquire" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -187.994781,1388.074829 L -145.704147,1394.391968"
              class="timed-result t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -187.994781,1388.074829 L -244.716751,1376.908203"
              class="timed-result t/invoke-in" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -877.515869,1348.719238 L -596.877563,1339.414429"
              class="enqueued-timer- System/currentTimeMillis"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -877.515869,1348.719238 L -905.320923,1400.085449"
              class="enqueued-timer- Long/MIN_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -877.515869,1348.719238 L -854.128906,1370.745972"
              class="enqueued-timer- p/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -877.515869,1348.719238 L -954.728516,1121.101440"
              class="enqueued-timer- context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -877.515869,1348.719238 L -859.354919,1315.883789"
              class="enqueued-timer- ex/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -877.515869,1348.719238 L -915.366394,1472.297974"
              class="enqueued-timer- System/nanoTime" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -1019.337524,-1620.008911"
              class="sink-&gt;&gt; clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -1020.940186,-1093.927612"
              class="sink-&gt;&gt; clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -659.157715,-1676.366699"
              class="sink-&gt;&gt; clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -842.821289,-1885.724243"
              class="sink-&gt;&gt; clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -294.101105,-1391.397583"
              class="sink-&gt;&gt; clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -447.601929,-922.256104"
              class="sink-&gt;&gt; clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -234.521576,-2068.508301"
              class="sink-&gt;&gt; user/channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -375.837708,-2052.316650"
              class="sink-&gt;&gt; clojure.core/-&gt;&gt;" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -468.558014,-2021.056763 L -173.219101,-1218.950684"
              class="sink-&gt;&gt; user/receive-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 618.007751,1046.768677 L 613.120239,1019.405457"
              class="wait-for-message clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 291.705505,520.818237 L 543.175964,747.434570"
              class="zip p/run-pipeline" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 291.705505,520.818237 L 207.912201,441.135620"
              class="zip l/lock" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 291.705505,520.818237 L 602.963928,993.927795"
              class="zip clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 291.705505,520.818237 L 327.507324,831.348450"
              class="zip r/result-channel" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 291.705505,520.818237 L 138.990112,294.335175"
              class="zip l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 291.705505,520.818237 L 218.221115,371.205139"
              class="zip System/arraycopy" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 9.305731,1644.288696 L 13.866863,1656.614624"
              class="partition-every-op t/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2454.008057,-38.951225 L -2457.261230,-30.894764"
              class="sample sample/sampler" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -878.186157,-1653.992065 L -1017.162964,-1615.504517"
              class="trace clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -878.186157,-1653.992065 L -679.916504,-1663.447998"
              class="trace clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -878.186157,-1653.992065 L -857.349792,-1867.030029"
              class="trace clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -878.186157,-1653.992065 L -745.563477,-1340.568604"
              class="trace user/trace*" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 360.467224,19.911442 L 346.508118,20.841705"
              class="pipelined-client lock/lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 360.467224,19.911442 L 385.050415,39.671017"
              class="pipelined-client r/result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 360.467224,19.911442 L 357.915894,6.218780"
              class="pipelined-client lock/with-exclusive-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1220.942261,-452.263763 L 1230.461914,-450.500519"
              class="cancel-callback g/cancel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.894409,762.203674 L 1149.119873,772.055664"
              class="dispatch-consumption r/success-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.894409,762.203674 L 1213.947266,726.806519"
              class="dispatch-consumption r/error!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.894409,762.203674 L 1256.690063,711.836365"
              class="dispatch-consumption r/error-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.894409,762.203674 L 1216.197876,777.832336"
              class="dispatch-consumption r/success!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 568.236816,729.122192 L 560.127930,744.434509"
              class="drop-while* p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L 494.646210,-1741.564819"
              class="ensure-queue clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L 898.543274,-1404.825928"
              class="ensure-queue clojure.core/with-meta" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -1019.153076,-1603.786743"
              class="ensure-queue clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -1014.367188,-1079.208740"
              class="ensure-queue clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -656.660217,-1653.625610"
              class="ensure-queue clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -846.724365,-1870.465698"
              class="ensure-queue clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -282.810822,-1366.117554"
              class="ensure-queue clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L 73.386299,-226.526489"
              class="ensure-queue q/queue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -433.370270,-907.264954"
              class="ensure-queue clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L -6.531511,-269.036102"
              class="ensure-queue q/transactional-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L 170.797806,-623.920044"
              class="ensure-queue user/NodeState" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 32.386429,-874.121948 L 310.903870,-821.761658"
              class="ensure-queue user/set-state!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -54.942974,519.222412 L -31.849356,496.496185"
              class="-&gt;ExponentiallyDecayingSampler l/with-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -54.942974,519.222412 L -139.098038,561.938843"
              class="-&gt;ExponentiallyDecayingSampler t/now"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -54.942974,519.222412 L 122.505341,293.729401"
              class="-&gt;ExponentiallyDecayingSampler l/with-exclusive-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -54.942974,519.222412 L 9.394239,1164.885010"
              class="-&gt;ExponentiallyDecayingSampler Math/exp"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1461.614624,-182.623749 L 1450.990967,-186.269241"
              class="render-propagation g/render-propagation"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1461.614624,-182.623749 L 1474.586914,-170.845886"
              class="render-propagation c/receiver-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1032.112915,-112.170891 L 1051.267822,-147.207825"
              class="channel-&gt;lazy-seq g/edge" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1032.112915,-112.170891 L 1030.151978,-76.861404"
              class="channel-&gt;lazy-seq g/terminal-propagator"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1032.112915,-112.170891 L 1013.909851,-108.890160"
              class="channel-&gt;lazy-seq g/consume" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 1972.439087,973.596680"
              class="aggregating-trace-router c/*stream-generator*"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 1944.142700,669.305725"
              class="aggregating-trace-router c/distributable-chain"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 1900.302246,619.202026"
              class="aggregating-trace-router c/non-distributable-chain"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 2013.656494,769.704041"
              class="aggregating-trace-router cache/inner-cache"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 2019.736450,813.030457"
              class="aggregating-trace-router q/parse-descriptor"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 2059.481689,746.079041"
              class="aggregating-trace-router cache/subscribe"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 2066.617432,820.097961"
              class="aggregating-trace-router time/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2052.463623,782.359009 L 1964.153442,909.175537"
              class="aggregating-trace-router time/with-period"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -976.323303,1469.416626 L -922.462952,1421.682983"
              class="-&gt;EnqueuedTimer Long/MIN_VALUE" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -976.323303,1469.416626 L -975.262817,1441.328003"
              class="-&gt;EnqueuedTimer ex/trace-error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -976.323303,1469.416626 L -932.926331,1481.833130"
              class="-&gt;EnqueuedTimer System/nanoTime" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -976.323303,1469.416626 L -960.231018,1518.568970"
              class="-&gt;EnqueuedTimer p/error-probe-channel"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -976.323303,1469.416626 L -993.479126,1456.361938"
              class="-&gt;EnqueuedTimer ex/trace-return" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -928.876099,-1798.732788 L -1023.961426,-1624.064209"
              class="transform-fn-bodies clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -928.876099,-1798.732788 L -678.394165,-1670.494995"
              class="transform-fn-bodies clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -928.876099,-1798.732788 L -865.273499,-1870.486816"
              class="transform-fn-bodies clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 462.036072,248.708252 L 466.011658,257.596008"
              class="enqueue u/enqueue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 468.634918,339.586182 L 481.058899,345.381073"
              class="error u/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -796.784607,-1757.970215 L -1018.783936,-1619.189209"
              class="enable-unchecked-math clojure.core/concat"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -796.784607,-1757.970215 L -677.308594,-1672.274780"
              class="enable-unchecked-math clojure.core/seq"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -796.784607,-1757.970215 L -849.914978,-1868.348755"
              class="enable-unchecked-math clojure.core/list"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -796.784607,-1757.970215 L -643.374329,-1432.908569"
              class="enable-unchecked-math clojure.core/*unchecked-math*"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 216.380051,413.746643 L 207.900909,421.828735"
              class="result-channel l/lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L 490.620422,-1744.786011"
              class="with-context clojure.core/hash-map" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L 897.156738,-1416.437988"
              class="with-context clojure.core/with-meta" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L -1016.655579,-1611.660156"
              class="with-context clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L -1015.037170,-1086.921143"
              class="with-context clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L -651.960449,-1663.228760"
              class="with-context clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L -842.364319,-1877.735107"
              class="with-context clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L -277.206055,-1382.690674"
              class="with-context clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L -436.921356,-917.615845"
              class="with-context clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L 302.913055,-1228.767334"
              class="with-context clojure.core/if-let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L 365.064178,-1023.919067"
              class="with-context user/stacks" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 323.980988,-1601.325195 L 414.645020,-1101.755859"
              class="with-context user/LinkedList" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 470.094574,1292.693726 L 604.501892,1018.197205"
              class="variance clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 470.094574,1292.693726 L 457.134644,1319.016846"
              class="variance var/create-variance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 470.094574,1292.693726 L 459.570068,1284.400269"
              class="variance var/variance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1625.499146,372.112610 L 1635.187866,375.844971"
              class="node-data q/messages" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -214.569580,1166.292114 L -163.078293,1045.714233"
              class="idle-result r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -214.569580,1166.292114 L -570.208984,1333.008179"
              class="idle-result System/currentTimeMillis" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -214.569580,1166.292114 L -136.592316,1383.285034"
              class="idle-result t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -214.569580,1166.292114 L 317.055603,852.374756"
              class="idle-result r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -214.569580,1166.292114 L -216.226669,1010.809143"
              class="idle-result r/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 49.271141,1835.292847 L 37.127712,1801.100830"
              class="merge-group-by t/minutes" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 49.271141,1835.292847 L 21.265778,1683.512085"
              class="merge-group-by t/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 49.271141,1835.292847 L 24.153530,1855.136841"
              class="merge-group-by q/transform-stream" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 49.271141,1835.292847 L 49.152847,1853.567993"
              class="merge-group-by q/periodic-chain?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2227.712158,946.453247 L -2231.469482,933.611816"
              class="analyze-timings stats/sum" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2227.712158,946.453247 L -2214.155029,944.503418"
              class="analyze-timings stats/moving-quantiles"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2227.712158,946.453247 L -2229.178711,959.563721"
              class="analyze-timings stats/rate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -1030.195923,-1597.775635"
              class="with-period clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -1027.813354,-1095.897461"
              class="with-period clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -676.554749,-1654.995483"
              class="with-period clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -860.231689,-1867.622437"
              class="with-period clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -304.357910,-1377.527954"
              class="with-period clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -1016.101013,-1201.515747"
              class="with-period clojure.core/binding" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1022.332214,-1358.141113 L -836.862854,-815.559814"
              class="with-period lamina.time/*period*" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 645.238831,1052.748169 L 618.941101,1016.910706"
              class="channel-&gt;lazy-seq- clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 602.024658,969.479492 L 607.405823,992.006714"
              class="topic-channel-cache clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2012.943115,-1546.611572 L 2008.466431,-1536.413086"
              class="format-duration str/trim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -1024.487183,-1599.200073"
              class="trace* clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -1015.867493,-1075.102051"
              class="trace* clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -666.079224,-1650.115723"
              class="trace* clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -853.471252,-1867.191406"
              class="trace* clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -298.966034,-1366.861084"
              class="trace* clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -461.263458,-906.845520"
              class="trace* clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -956.455811,-34.028660"
              class="trace* user/enqueue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -325.560638,-782.320313"
              class="trace* user/probe-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -674.102234,-885.251343 L -814.061279,-154.807526"
              class="trace* user/probe-enabled?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -1017.963501,-1617.677612"
              class="join-&gt;&gt; clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -1019.703430,-1093.098633"
              class="join-&gt;&gt; clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -655.706055,-1673.676514"
              class="join-&gt;&gt; clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -841.997620,-1881.508911"
              class="join-&gt;&gt; clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -293.640869,-1391.516724"
              class="join-&gt;&gt; clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -446.887024,-922.251526"
              class="join-&gt;&gt; clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -231.265427,-2061.990234"
              class="join-&gt;&gt; user/channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -367.012787,-2043.512451"
              class="join-&gt;&gt; clojure.core/-&gt;&gt;" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -415.646790,-1898.129395 L -249.256760,-1215.451782"
              class="join-&gt;&gt; user/join" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 510.738068,-2653.542236 L 503.845673,-2660.192383"
              class="filter* g/downstream-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -931.193176,1515.639648 L -924.569946,1498.720825"
              class="-&gt;Timer System/nanoTime" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -931.193176,1515.639648 L -944.178345,1524.180664"
              class="-&gt;Timer p/error-probe-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1166.875488,2240.032227 L -1156.739380,2233.891113"
              class="clojure-fn str/replace" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 706.594055,952.208008 L 622.890381,998.813110"
              class="view-image clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 706.594055,952.208008 L 713.937012,943.529541"
              class="view-image java.awt.EventQueue/invokeLater"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 648.155151,1025.002808 L 623.095703,1012.051453"
              class="-&gt;DistilledTiming clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -824.439697,-1699.917847 L -1017.781982,-1617.270874"
              class="channel-seq clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -824.439697,-1699.917847 L -679.588318,-1667.199585"
              class="channel-seq clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -824.439697,-1699.917847 L -853.583679,-1867.171265"
              class="channel-seq clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -824.439697,-1699.917847 L -729.168640,-1457.492920"
              class="channel-seq user/channel-&gt;seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2596.902344,-388.616974 L 2589.727051,-383.717346"
              class="-&gt;sorted-double-array Arrays/sort" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1144.995850,763.886475"
              class="sample-graph r/success-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1648.376709,366.878174"
              class="sample-graph q/messages" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1612.041748,231.831802"
              class="sample-graph l/release-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1558.411865,-24.431095"
              class="sample-graph g/propagate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1610.636719,414.019745"
              class="sample-graph g/queue" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1666.497314,138.886642"
              class="sample-graph l/acquire-all" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1479.867554,278.996033"
              class="sample-graph g/node?" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1602.245972,184.392166"
              class="sample-graph g/read-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1649.470215,243.993088 L 1432.223022,180.495972"
              class="sample-graph r/success-value" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 626.227539,956.596497 L 614.895874,992.280212"
              class="invoke-repeatedly clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L -1017.886902,-1606.026001"
              class="channel* clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L -1016.136536,-1089.162231"
              class="channel* clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L -659.706299,-1651.575562"
              class="channel* clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L -848.252319,-1869.294067"
              class="channel* clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L 711.659546,-547.403931"
              class="channel* g/node*" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L -304.355743,-1378.356445"
              class="channel* clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -527.615845,-1385.544800 L -449.657166,-922.064697"
              class="channel* clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -957.596130,-1729.225708 L -1023.260803,-1623.656006"
              class="enqueued-timer clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -957.596130,-1729.225708 L -679.596069,-1667.165283"
              class="enqueued-timer clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -957.596130,-1729.225708 L -863.776672,-1869.330811"
              class="enqueued-timer clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -957.596130,-1729.225708 L -860.171265,-1424.320923"
              class="enqueued-timer user/enqueued-timer-" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 6.391939,1832.150879 L 25.338882,1799.972290"
              class="group-by-op t/minutes" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 6.391939,1832.150879 L 17.665348,1683.704346"
              class="group-by-op t/period" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 6.391939,1832.150879 L 10.238540,1850.125610"
              class="group-by-op q/transform-stream" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 6.391939,1832.150879 L 38.289555,1858.626343"
              class="group-by-op q/periodic-chain?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -909.249390,-1592.876587 L -1016.821655,-1609.615479"
              class="deftoken clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -909.249390,-1592.876587 L -679.368347,-1660.181152"
              class="deftoken clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -909.249390,-1592.876587 L -858.532227,-1867.196777"
              class="deftoken clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -909.249390,-1592.876587 L -876.050964,-1294.007690"
              class="deftoken user/token" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 906.179138,2430.269775 L 908.268677,2438.702881"
              class="receive g/receive" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2494.202637,-759.610779 L 2502.884277,-759.266174"
              class="sum-op lamina.stats/sum" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 208.310226,891.579407 L 316.038940,850.268982"
              class="drained-result r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 208.310226,891.579407 L 153.424667,963.177856"
              class="drained-result r/success" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 208.310226,891.579407 L 200.011597,880.099487"
              class="drained-result g/drained-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2154.683350,-964.203491 L 2146.702148,-960.767883"
              class="ground g/ground" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -321.857391,1320.320679 L -568.920776,1337.953857"
              class="check-idle System/currentTimeMillis" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -321.857391,1320.320679 L -269.121094,1365.137939"
              class="check-idle t/invoke-in" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -321.857391,1320.320679 L 133.660706,982.626343"
              class="check-idle r/success" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1433.339233,856.221680 L 1421.405762,864.441406"
              class="closed? g/closed?" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1433.339233,856.221680 L 1441.898193,846.551819"
              class="closed? q/closed?" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 823.669861,339.479156 L 838.365967,335.141174"
              class="thread-factory log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1532.229370,-95.056664 L 1548.964111,-50.784660"
              class="-&gt;SympatheticProbeChannel g/propagate"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1532.229370,-95.056664 L 1493.073975,-150.031799"
              class="-&gt;SympatheticProbeChannel c/receiver-node"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1532.229370,-95.056664 L 1520.051270,-89.738052"
              class="-&gt;SympatheticProbeChannel c/split-receiver"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 162.794113,932.624451 L 316.716827,851.767029"
              class="closed-result r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 162.794113,932.624451 L 150.430145,961.424194"
              class="closed-result r/success" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 162.794113,932.624451 L 151.392700,923.730835"
              class="closed-result g/closed-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -154.593170,817.852783 L -157.385620,1018.840454"
              class="subscribe r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -154.593170,817.852783 L 315.133209,844.464478"
              class="subscribe r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -154.593170,817.852783 L -211.807159,983.576416"
              class="subscribe r/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -154.593170,817.852783 L -388.708160,560.244080"
              class="subscribe context/with-context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -154.593170,817.852783 L -152.563705,790.137939"
              class="subscribe context/context" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -199.924530,1030.826538 L -171.564316,1032.174438"
              class="on-realized r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -199.924530,1030.826538 L -210.280518,1009.413391"
              class="on-realized r/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1130.430298,2204.400146 L -1137.179810,2214.869629"
              class="message-str str/replace" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1504.234619,-2103.513672 L 1494.185791,-2107.417236"
              class="sum Double/longBitsToDouble" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1504.234619,-2103.513672 L 1507.152832,-2093.223145"
              class="sum Double/doubleToRawLongBits" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 590.668518,2527.135986 L 592.122803,2535.701904"
              class="transactional? g/transactional?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 575.746948,818.598083 L 558.304138,769.984192"
              class="reductions* p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 575.746948,818.598083 L 608.089600,991.861328"
              class="reductions* clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2453.956787,508.585693 L 2448.683838,501.678406"
              class="rate-op lamina.stats/rate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 951.465332,-444.522705 L 960.819519,-446.674194"
              class="drain-queue q/drain" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -939.255005,1002.291992 L -956.623169,1094.087524"
              class="handle-redirect context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -939.255005,1002.291992 L -929.612305,966.213196"
              class="handle-redirect t/mark-return" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -981.549438,-2671.437500 L -989.695618,-2668.410645"
              class="instrument clojure.core/unquote" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 658.699585,964.557739 L 621.300415,996.526855"
              class="dependent-topic-channel-cache clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -1020.258362,-1602.392212"
              class="handle-request clojure.core/concat" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -1014.118408,-1082.490479"
              class="handle-request clojure.core/vector" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -661.282715,-1650.909668"
              class="handle-request clojure.core/seq" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -849.738831,-1868.435181"
              class="handle-request clojure.core/list" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -298.046722,-1366.202881"
              class="handle-request clojure.core/apply" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -448.879883,-922.173157"
              class="handle-request clojure.core/let" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -42.171669,-392.496124"
              class="handle-request clojure.core/identical?"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -469.231628,-1105.472290 L -215.233719,-690.512817"
              class="handle-request clojure.core/cond" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -184.382248,1091.027954 L -163.437149,1045.555054"
              class="close-on-idle r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -184.382248,1091.027954 L -134.230499,1382.662720"
              class="close-on-idle t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -184.382248,1091.027954 L -211.874344,1010.066467"
              class="close-on-idle r/subscribe" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 772.627686,539.071350 L 846.811035,344.261200"
              class="channel-cache log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 772.627686,539.071350 L 615.250000,992.397888"
              class="channel-cache clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 640.427795,983.742371 L 621.939087,997.332092"
              class="watch-channel clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 237.194580,1161.493286 L -144.269135,1037.177002"
              class="join r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 237.194580,1161.493286 L 489.520294,364.645782"
              class="join u/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 237.194580,1161.493286 L -203.216415,1001.587891"
              class="join r/subscribe" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 237.194580,1161.493286 L 853.291382,1171.308594"
              class="join g/join" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 237.194580,1161.493286 L 227.448318,1140.962158"
              class="join ch/join" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 237.194580,1161.493286 L 435.046143,1442.002930"
              class="join r/siphon-result" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 75.817223,1694.350830 L 38.330864,1775.206787"
              class="moving-average t/minutes" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 75.817223,1694.350830 L 31.582207,1675.285645"
              class="moving-average t/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 75.817223,1694.350830 L 12.534614,1192.705933"
              class="moving-average Math/exp" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 75.817223,1694.350830 L 122.700233,1691.341309"
              class="moving-average avg/moving-average" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 646.388489,815.890869 L 1121.297729,775.130981"
              class="reduce* r/success-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 646.388489,815.890869 L 565.386047,764.324951"
              class="reduce* p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 646.388489,815.890869 L 613.249451,991.865417"
              class="reduce* clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 646.388489,815.890869 L 343.051239,843.966125"
              class="reduce* r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 165.504501,1416.816650 L -117.890465,1397.416382"
              class="distribute-aggregate t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 165.504501,1416.816650 L 546.480103,768.875183"
              class="distribute-aggregate p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 165.504501,1416.816650 L 600.374573,1015.123047"
              class="distribute-aggregate clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 165.504501,1416.816650 L 141.157394,1378.683105"
              class="distribute-aggregate t/invoke-repeatedly"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 165.504501,1416.816650 L 25.752439,1657.635742"
              class="distribute-aggregate t/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 165.504501,1416.816650 L 184.123108,1403.669922"
              class="distribute-aggregate dist/facets" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 9.940950,1154.496094 L 10.298301,1164.824463"
              class="priority Math/exp" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -223.840607,1385.971069 L -145.767624,1394.874023"
              class="expiring-result t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -223.840607,1385.971069 L -245.198135,1378.710205"
              class="expiring-result t/invoke-in" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -177.539169,999.703125 L -164.803650,1020.846619"
              class="on-event r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -177.539169,999.703125 L -202.414551,997.849976"
              class="on-event r/subscribe" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -960.969177,1555.691895 L -958.803101,1545.564453"
              class="dummy-timer p/error-probe-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1571.684204,164.440109 L 1580.600830,168.101410"
              class="read-channel g/read-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2638.892578,-714.972229 L -2633.590088,-708.088684"
              class="parse-lookup str/split" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 481.208954,297.550262 L 476.339935,283.594330"
              class="-&gt;Message u/enqueue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 481.208954,297.550262 L 490.566315,337.664978"
              class="-&gt;Message u/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1989.349976,-1502.285889 L 1995.350830,-1511.764893"
              class="parser str/trim" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2333.613525,1113.026001 L 2343.645996,1105.310181"
              class="view-propagation core/view-image" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2333.613525,1113.026001 L 2341.218506,1123.108276"
              class="view-propagation g/node-frame" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2450.130127,-742.823303 L -2453.821289,-750.689819"
              class="release-named-channel cache/release" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 756.565918,380.692352 L 839.372009,337.636292"
              class="receive-in-order log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 756.565918,380.692352 L 560.225281,744.486572"
              class="receive-in-order p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 756.565918,380.692352 L 751.971313,361.529480"
              class="receive-in-order p/complete" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 705.555420,-920.216003 L 709.486633,-934.889954"
              class="drained? q/drained?" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 705.555420,-920.216003 L 700.192444,-910.451355"
              class="drained? g/drained?" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 311.015503,817.922119 L 321.382751,833.582581"
              class="error-result r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 119.185722,255.055222 L 125.602074,269.879333"
              class="close-and-clear l/with-exclusive-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -59.771503,1535.739136 L -125.422653,1408.893555"
              class="bridge-accumulate t/task-queue" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -59.771503,1535.739136 L 11.649302,1657.664429"
              class="bridge-accumulate t/period" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2556.425293,325.819061 L -2547.036377,317.361633"
              class="add Calendar/getInstance" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2556.425293,325.819061 L -2547.963135,335.220978"
              class="add TimeZone/getTimeZone" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 535.566711,731.080017 L 545.547363,745.337646"
              class="drop* p/run-pipeline" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 501.176270,819.528076 L 544.600098,767.550720"
              class="partition- p/run-pipeline" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 501.176270,819.528076 L 603.559570,993.556946"
              class="partition- clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 501.176270,819.528076 L 342.956879,843.185974"
              class="partition- r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -191.435410,952.691956 L -163.027817,1019.942505"
              class="on-error r/result-callback" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -191.435410,952.691956 L -209.486191,984.622559"
              class="on-error r/subscribe" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -191.435410,952.691956 L -190.602081,937.206909"
              class="on-error g/on-error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 572.632202,1004.124573 L 596.669434,1005.072144"
              class="persistent-connection clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -356.202881,2495.861816 L -350.404358,2502.332764"
              class="num-cores Runtime/getRuntime" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1395.474609,172.416245 L 1405.002197,174.113312"
              class="trace-descriptor r/success-value" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 462.051453,848.892334 L 543.706848,766.736450"
              class="last* p/run-pipeline" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 462.051453,848.892334 L 601.025879,995.464294"
              class="last* clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 462.051453,848.892334 L 343.105591,845.639099"
              class="last* r/result-channel" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2370.779297,1118.035034 L 2363.174072,1107.952148"
              class="view-graph core/view-image" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2370.779297,1118.035034 L 2360.746826,1125.750488"
              class="view-graph g/node-frame" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 107.534943,200.049301 L 127.316170,269.266388"
              class="-&gt;ResultChannel l/with-exclusive-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 107.534943,200.049301 L 103.701180,185.400421"
              class="-&gt;ResultChannel codes/error-code-&gt;exception"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1537.623535,-17.725491 L 1545.062988,-26.842163"
              class="-&gt;SplicedChannel g/propagate" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -465.612610,621.617188 L -454.456940,620.140686"
              class="split-node l/asymmetric-lock" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -280.306396,1359.099487 L -269.969879,1366.243896"
              class="with-timeout t/invoke-in" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1232.964478,2499.499512 L -1226.634155,2505.454590"
              class="print-timing-result t/format-timing" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 483.083191,376.637451 L 488.316162,364.202820"
              class="force-error u/error" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1839.241821,-2016.502563 L -1840.721436,-2007.939453"
              class="in-transaction? clojure.lang.LockingTransaction/isRunning"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -444.048218,593.381897 L -442.508789,604.437500"
              class="distributing-propagator l/asymmetric-lock"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1161.578247,2206.332764 L -1153.694580,2215.853516"
              class="escape-string str/replace" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1253.837524,660.300781 L 1226.765015,642.058960"
              class="-&gt;DrainedQueue r/claim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1253.837524,660.300781 L 1219.711304,702.282959"
              class="-&gt;DrainedQueue r/error!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1253.837524,660.300781 L 1260.996582,686.802185"
              class="-&gt;DrainedQueue r/error-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 898.449402,-2453.977051 L 890.279846,-2456.937500"
              class="on-closed g/on-closed" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2210.395020,1254.468384 L -2200.353516,1257.055786"
              class="close g/close" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2475.818604,-1203.350098 L -2473.227051,-1195.056030"
              class="connect g/connect" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2049.677979,-1327.481689 L 2052.509521,-1336.740967"
              class="token Pattern/compile" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 172.544952,426.239624 L 184.060593,428.635925"
              class="queue l/lock" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -1784.622070,1717.386597 L -1777.500488,1712.409180"
              class="mimic g/mimic" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1982.409546,-1387.743652 L 1991.158203,-1391.956055"
              class="indent str/split-lines" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 219.292725,2590.747559 L 220.832336,2582.196533"
              class="on-drained g/on-drained" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.850708,678.150574 L 1217.265015,648.075806"
              class="-&gt;ErrorQueue r/claim" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.850708,678.150574 L 1215.068115,699.787537"
              class="-&gt;ErrorQueue r/error!" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1221.850708,678.150574 L 1252.216187,693.878784"
              class="-&gt;ErrorQueue r/error-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 590.903870,1138.311401 L 608.596985,1019.470947"
              class="executor-channel clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 590.903870,1138.311401 L 586.748657,1152.852173"
              class="executor-channel trace/instrument" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -932.549805,1113.434204 L -945.523560,1110.715210"
              class="add-to-trace-counter context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -239.226379,1597.650146 L -231.743958,1603.846313"
              class="moving-sample sample/moving-sampler" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 569.546936,1185.901367 L 575.015442,1177.880615"
              class="pmap* trace/instrument" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -947.299866,1082.879395 L -953.190979,1095.211060"
              class="add-sub-timing context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 466.588013,1479.835205 L 478.668091,1473.573730"
              class="siphon ch/siphon" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 466.588013,1479.835205 L 467.773071,1493.007080"
              class="siphon g/siphon" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 466.588013,1479.835205 L 452.419495,1463.904663"
              class="siphon r/siphon-result" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2292.428223,-1151.470093 L -2289.963135,-1143.137939"
              class="lerp-array Array/getLength" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 580.076843,954.901733 L 603.429810,993.634216"
              class="param clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1442.703735,285.090057 L 1452.290161,283.755768"
              class="edge-descriptor g/node?" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2574.719727,379.007629 L 2582.187988,383.448792"
              class="gen-frame javax.swing.WindowConstants/HIDE_ON_CLOSE"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 95.421280,148.590042 L 97.364494,158.137817"
              class="-&gt;ErrorResult codes/error-code-&gt;exception"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 873.639587,311.116150 L 862.104980,321.708405"
              class="-&gt;CallbackPropagator log/error" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 470.395905,-2666.787354 L 479.894287,-2668.057617"
              class="map* g/downstream-node" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 2515.216553,34.879528 L 2515.493896,43.564419"
              class="tracing? lamina.core.context/timer" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 565.804565,1030.132324 L 598.372986,1012.336609"
              class="-&gt;NonRealTimeTaskQueue clojure.core/deref"
              stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1179.447144,-2230.841797 L 1181.018677,-2239.387451"
              class="getter q/query-lookup" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2433.345215,761.567383 L -2425.918213,757.057068"
              class="named-channel cache/get-or-create" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 564.472168,979.034180 L 598.525513,998.638611"
              class="cyclic-tree-seq clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 1934.792236,1769.046021 L 1927.019531,1765.162964"
              class="-&gt;Variance Math/sqrt" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -916.735657,928.402466 L -921.008728,939.606934"
              class="resume-pipeline t/mark-return" stroke-opacity="1.0"
              stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M -2171.862061,1241.167847 L -2178.251221,1249.459473"
              class="force-close g/close" stroke-opacity="1.0" stroke="#999999"/>
        <path fill="none" stroke-width="1"
              d="M 590.460205,1043.816528 L 604.113586,1017.999512"
              class="wait-for-result clojure.core/deref" stroke-opacity="1.0"
              stroke="#999999"/>
    </g>
    <g id="arrows">
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ProbeChannel c/emitter-node"
                  points="1433.709595,-323.524506 1435.526001,-320.704773 1432.543579,-320.379578"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ProbeChannel log/error"
                  points="860.582275,324.563110 862.077271,321.560608 863.881226,323.957642"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ProbeChannel g/propagate"
                  points="1545.613037,-44.906219 1542.364868,-45.742554 1544.333130,-48.006546"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ProbeChannel c/receiver-node"
                  points="1478.245972,-152.715744 1477.605957,-149.423264 1475.228027,-151.252213"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="timer user/timer-"
                  points="-654.812866,-1339.535522 -657.555054,-1341.466919 -654.913086,-1342.888062"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer clojure.core/concat"
                  points="-1019.688843,-1612.628662 -1016.815430,-1614.358765 -1016.580688,-1611.368042"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer clojure.core/seq"
                  points="-676.622437,-1661.522339 -679.184387,-1659.357422 -679.891541,-1662.272949"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer clojure.core/list"
                  points="-854.034302,-1870.138184 -852.025574,-1867.452148 -854.977966,-1866.919678"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="outliers t/minutes"
                  points="41.898045,1782.287842 43.710480,1779.465576 45.243301,1782.044434"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="outliers t/task-queue"
                  points="-122.717850,1402.580811 -119.390518,1403.003662 -121.059769,1405.496338"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="outliers clojure.core/deref"
                  points="605.379089,1015.273804 605.255127,1018.625610 602.623291,1017.185791"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="outliers var/create-variance"
                  points="445.259888,1340.990601 444.991516,1344.333862 442.424194,1342.781860"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="outliers avg/moving-average"
                  points="147.223465,1687.337158 149.677567,1685.050659 150.525009,1687.928589"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="outliers var/std-dev"
                  points="264.353882,1618.672485 265.077515,1621.947632 262.167969,1621.216431"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="outliers t/seconds"
                  points="286.516388,1644.298950 284.199036,1646.723755 283.186096,1643.900024"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="capture-timings context/assoc-context"
                  points="-556.304382,532.975403 -553.800720,530.743347 -553.016541,533.639099"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="capture-timings clojure.core/deref"
                  points="600.580872,1001.214478 597.231201,1001.386169 598.433716,998.637756"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="capture-timings context/with-context"
                  points="-408.659821,546.721985 -411.964386,547.296448 -411.102142,544.423035"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="capture-timings t/timer"
                  points="-551.069702,464.076477 -547.956299,465.324310 -550.199951,467.315826"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="capture-timings t/mark-error"
                  points="-490.195435,476.075195 -489.610779,479.377960 -492.486816,478.524567"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="capture-timings t/mark-return"
                  points="-918.319580,944.810730 -917.299744,941.615417 -915.151428,943.709412"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor context/assoc-context"
                  points="-565.398254,546.744629 -563.497192,549.507935 -566.468262,549.923462"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor r/result-callback"
                  points="-166.988800,1027.140259 -170.331924,1026.869019 -168.777695,1024.303101"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor p/run-pipeline"
                  points="542.588318,757.325928 539.662476,758.965881 539.520874,755.969177"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor r/async-result?"
                  points="448.741516,103.080971 447.185364,106.052231 445.430786,103.618805"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor r/result-channel"
                  points="318.121185,844.778564 315.058868,846.146851 315.189178,843.149658"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor r/expiring-result"
                  points="-698.681763,695.534668 -695.352234,695.939941 -697.008240,698.441406"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="executor r/subscribe"
                  points="-225.790131,991.120300 -229.133514,990.852356 -227.581787,988.284851"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor context/with-context"
                  points="-403.095062,559.696045 -403.112762,563.050110 -405.788910,561.694397"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor t/mark-error"
                  points="-488.399200,476.448578 -487.273743,479.608246 -490.251648,479.244720"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor t/mark-return"
                  points="-915.662415,948.921326 -913.357361,946.484802 -912.330139,949.303406"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor Integer/MAX_VALUE"
                  points="998.917542,1427.878418 995.573730,1428.140381 996.701660,1425.360596"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor t/mark-waiting"
                  points="-387.961823,325.936768 -387.363800,329.237152 -390.243317,328.395416"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor Thread/interrupted"
                  points="-293.236572,527.514587 -294.018005,530.776367 -296.314880,528.846558"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor pr/probe-channel"
                  points="-251.822098,450.126617 -252.472610,453.417053 -254.844742,451.580444"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor Thread/currentThread"
                  points="-447.485107,709.263367 -448.236389,712.532227 -450.550964,710.623657"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor pr/probe-enabled?"
                  points="-341.992096,618.148193 -343.027954,621.338379 -345.165710,619.233643"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor t/mark-enter"
                  points="-534.935547,737.638062 -533.182983,740.497925 -536.171875,740.755981"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor TimeUnit/MILLISECONDS"
                  points="-393.641632,618.837830 -394.166382,622.150635 -396.606750,620.405762"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/hash-map"
                  points="510.542664,-1748.065186 513.880798,-1747.738281 512.283997,-1745.198486"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/with-meta"
                  points="920.527466,-1407.661011 923.878296,-1407.809448 922.656738,-1405.069458"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/concat"
                  points="-1019.808533,-1609.937500 -1016.600708,-1610.917358 -1017.099976,-1607.959106"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/vector"
                  points="-1017.120667,-1082.469360 -1014.202271,-1084.122559 -1014.047119,-1081.126465"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger log/error"
                  points="855.321289,320.758850 854.862671,317.436218 857.704224,318.398438"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/seq"
                  points="-655.199829,-1661.703979 -651.944031,-1662.509888 -652.601624,-1659.582886"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/list"
                  points="-845.459045,-1877.775635 -842.153137,-1878.341919 -843.022522,-1875.470581"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/apply"
                  points="-279.421173,-1376.776001 -276.282959,-1377.959961 -276.591125,-1374.975830"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/let"
                  points="-436.479523,-910.036072 -433.761292,-912.001099 -433.276550,-909.040527"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/when-let"
                  points="-1193.053711,-362.616699 -1190.672363,-364.978760 -1189.735352,-362.128906"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/error-to-listeners"
                  points="860.679626,-665.257080 861.651489,-668.467285 863.830933,-666.405640"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger l/with-exclusive-lock"
                  points="138.206650,274.278290 138.975449,271.013458 141.279770,272.934418"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/enqueue-to-listeners"
                  points="743.515930,-739.559692 745.031250,-742.552002 746.818970,-740.142822"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/aset"
                  points="662.131470,-511.301819 663.226807,-514.472046 665.324829,-512.327637"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/set-state"
                  points="138.237640,-813.692566 140.641891,-816.031250 141.551163,-813.172363"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/case"
                  points="401.956696,-386.019958 403.279694,-389.102112 405.216217,-386.810852"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/unchecked-inc"
                  points="753.762085,-614.549683 754.893433,-617.707275 756.966919,-615.539185"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/object-array"
                  points="576.890503,-512.526123 578.165771,-515.628418 580.137451,-513.367310"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/result-seq"
                  points="602.406799,-430.117859 603.454895,-433.304016 605.584534,-431.191101"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/loop"
                  points="162.021332,-46.843567 163.150208,-50.001991 165.225403,-47.835518"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/int"
                  points="216.835541,-143.366592 218.028137,-146.501511 220.059021,-144.293472"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/defer-within-transaction"
                  points="801.761414,-507.394897 802.497009,-510.667358 804.820740,-508.769897"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger clojure.core/keyword?"
                  points="839.163940,-584.329712 839.977966,-587.583557 842.255432,-585.630798"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/update-state"
                  points="660.862488,-650.418762 662.303345,-653.447632 664.150146,-651.083374"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/ResultState"
                  points="1091.234741,-925.744873 1092.299316,-928.925537 1094.417969,-926.801636"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="compare-and-trigger user/ResultCallback"
                  points="569.392639,-358.449432 570.366638,-361.658997 572.544739,-359.595947"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body potemkin/fast-bound-fn"
                  points="-803.561951,-1.041198 -806.896362,-1.403770 -805.272583,-3.926299"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/fn"
                  points="-1254.838623,-595.308289 -1252.127808,-593.333069 -1254.792358,-591.954529"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/concat"
                  points="-1030.569458,-1600.768433 -1029.046143,-1597.780151 -1032.046143,-1597.756714"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/vector"
                  points="-1028.001953,-1070.901001 -1026.473633,-1067.915283 -1029.473389,-1067.886963"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/seq"
                  points="-668.415894,-1653.399048 -667.632019,-1650.137817 -670.554504,-1650.815063"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/list"
                  points="-857.013611,-1870.011475 -855.800110,-1866.884644 -858.787048,-1867.164673"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/apply"
                  points="-295.943451,-1368.426514 -296.172760,-1365.080200 -298.758026,-1366.602173"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/let"
                  points="-453.902252,-899.434204 -454.489990,-896.132019 -456.896667,-897.923157"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body t/enqueued-timer"
                  points="-1080.273193,208.176865 -1081.232056,204.962753 -1078.277222,205.481308"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body ex/execute"
                  points="-979.845093,191.297867 -981.688599,188.495834 -978.709595,188.141830"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body java.lang.System/currentTimeMillis"
                  points="-898.410461,154.790771 -900.936218,152.583908 -898.160461,151.445999"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body clojure.core/when"
                  points="-83.589706,-80.087120 -86.679230,-78.781418 -86.487991,-81.775314"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body user/enqueue"
                  points="-965.701538,-30.619574 -968.368042,-32.654110 -965.673828,-33.973560"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task-fn-body user/probe-enabled?"
                  points="-827.695679,-140.992142 -830.686707,-139.474304 -830.704529,-142.474243"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body context/assoc-context"
                  points="-577.919373,535.613708 -580.950989,537.048706 -580.886414,534.049438"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/hash-map"
                  points="494.561676,-1745.171875 493.935883,-1741.876709 491.550018,-1743.695313"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/fn"
                  points="-1259.633545,-594.081177 -1258.063110,-591.117432 -1261.062378,-591.046631"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/concat"
                  points="-1031.695313,-1600.817383 -1030.485718,-1597.688965 -1033.472290,-1597.972656"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/vector"
                  points="-1029.502197,-1070.989502 -1028.395142,-1067.823364 -1031.370972,-1068.204224"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/seq"
                  points="-668.696228,-1653.467896 -667.998108,-1650.187256 -670.901917,-1650.940918"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/list"
                  points="-857.693604,-1870.096680 -856.677246,-1866.900391 -859.640869,-1867.365723"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/apply"
                  points="-295.254211,-1368.053223 -295.244629,-1364.699097 -297.931763,-1366.033081"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/let"
                  points="-452.633942,-898.619141 -452.764618,-895.267578 -455.393585,-896.712769"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body java.lang.System/currentTimeMillis"
                  points="-901.818481,172.939835 -902.798889,176.147461 -904.972839,174.080078"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body clojure.core/when"
                  points="-82.380653,-74.328720 -84.355202,-71.617416 -85.734428,-74.281570"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body context/with-context"
                  points="-409.117584,549.509705 -412.166809,550.906921 -412.064880,547.908630"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="fn-body t/timer"
                  points="-569.320374,456.914795 -572.161072,458.698181 -572.451477,455.712280"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="fn-body t/mark-error"
                  points="-498.035583,466.352295 -500.914978,468.072418 -501.139343,465.080841"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body t/mark-return"
                  points="-932.381348,943.729919 -935.343994,942.157410 -932.900879,940.416321"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body user/run-pipeline"
                  points="-284.803101,161.498810 -287.075592,163.965729 -288.140106,161.160950"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body t/mark-waiting"
                  points="-395.564575,317.975464 -398.125641,320.141296 -398.833893,317.226074"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="fn-body user/enqueue"
                  points="-965.801819,-10.911407 -965.808289,-7.557312 -968.488953,-8.904119"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body user/probe-enabled?"
                  points="-822.551086,-131.745468 -822.878113,-128.407364 -825.417786,-130.004227"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="fn-body user/async-result?"
                  points="-401.476501,184.353027 -403.693359,186.870071 -404.820251,184.089767"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* r/result-callback"
                  points="-155.920853,1021.964966 -156.951157,1018.773071 -153.985489,1019.225586"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/fn"
                  points="-1249.977539,-600.316101 -1246.623779,-600.369507 -1247.922607,-597.665161"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* user/ResultChannel"
                  points="-26.965401,63.058540 -27.164328,59.710342 -24.406199,60.890480"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/concat"
                  points="-1024.729004,-1602.500854 -1021.849121,-1600.781494 -1024.376587,-1599.165283"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/vector"
                  points="-1020.528442,-1073.926758 -1017.374512,-1072.785400 -1019.549194,-1070.718750"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* user/read-node"
                  points="57.052052,13.432142 53.787983,14.204066 54.476070,11.284043"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/seq"
                  points="-661.845459,-1653.902344 -659.338196,-1651.674438 -662.123474,-1650.559937"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/list"
                  points="-851.430664,-1870.951538 -848.822693,-1868.842285 -851.553284,-1867.599609"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/apply"
                  points="-288.094666,-1367.142334 -286.008240,-1364.516113 -288.943787,-1363.897461"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/let"
                  points="-442.474548,-898.390686 -439.803345,-896.362244 -442.494629,-895.036682"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* r/result-channel"
                  points="325.119904,835.005859 322.633698,832.754456 325.429291,831.666077"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* r/listeners"
                  points="19.590197,54.876423 17.169706,52.554520 19.995424,51.546890"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/identical?"
                  points="-33.970181,-369.532074 -32.201706,-366.682068 -35.189095,-366.407288"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* t/invoke-in"
                  points="-256.419769,1363.393555 -257.339386,1360.167969 -254.391098,1360.722412"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="read-node* r/success"
                  points="143.289246,963.408447 141.364273,960.661743 144.331650,960.220459"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="read-node* u/error"
                  points="484.783936,344.921631 481.469940,344.404572 483.209198,341.960175"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/when"
                  points="-65.186478,-71.270454 -62.054665,-70.069733 -64.267967,-68.044571"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* r/subscribe"
                  points="-214.042282,986.060303 -214.871704,982.810364 -211.940002,983.446838"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* user/SuccessResult"
                  points="71.154785,-71.221443 70.095879,-68.038887 67.973396,-70.159035"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/and"
                  points="-57.448978,-173.510223 -55.081783,-171.134003 -57.929630,-170.190735"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* clojure.core/instance?"
                  points="22.913273,-78.551933 23.513836,-75.252029 20.633694,-76.091537"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-node* r/enqueue-to-listeners"
                  points="-61.511353,38.246048 -59.755558,35.388222 -58.171612,37.935989"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-channel* g/read-node*"
                  points="-672.652100,-1452.950562 -675.371216,-1454.914429 -672.712524,-1456.304077"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-channel* clojure.core/concat"
                  points="-1019.994080,-1609.058594 -1016.717041,-1609.773438 -1017.455933,-1606.865967"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-channel* clojure.core/seq"
                  points="-669.641052,-1653.759033 -669.240356,-1650.428955 -672.064697,-1651.440430"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-channel* clojure.core/list"
                  points="-851.838257,-1870.775879 -849.317566,-1868.563232 -852.096008,-1867.431641"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-channel* user/emitter-node"
                  points="-674.950195,-1492.828125 -678.135559,-1493.878784 -676.020935,-1496.006714"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order log/warn"
                  points="305.945740,-130.431656 309.270630,-130.873215 308.293945,-128.036667"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order p/run-pipeline"
                  points="557.977722,746.725830 557.803528,743.376282 560.552917,744.576721"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order g/edge"
                  points="1050.568359,-151.367004 1049.653931,-148.139969 1047.438110,-150.162308"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order r/result-channel"
                  points="335.253723,836.131409 335.684723,832.805115 338.173370,834.480408"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order g/terminal-propagator"
                  points="1020.427307,-56.485580 1018.859253,-53.520615 1017.114502,-55.961082"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order r/error-result"
                  points="1258.752563,691.030701 1255.878540,689.301819 1258.411255,687.694031"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order g/consume"
                  points="992.978455,-98.050575 992.167053,-94.796097 989.888000,-96.747025"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order p/restart"
                  points="796.829956,41.333260 800.134216,40.757214 799.273376,43.631046"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order p/complete"
                  points="752.606201,337.629547 752.266968,334.292664 755.072144,335.356018"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-in-order r/defer-within-transaction"
                  points="869.835083,-17.670864 870.863037,-14.478188 867.897705,-14.932846"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/hash-map"
                  points="503.142487,-1743.087524 505.141174,-1740.393921 502.186829,-1739.872437"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/with-meta"
                  points="902.260986,-1404.830200 901.016052,-1401.715698 899.022400,-1403.957397"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/concat"
                  points="-1020.077332,-1608.749878 -1016.780884,-1609.369141 -1017.604004,-1606.484375"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/vector"
                  points="-1017.113831,-1082.317139 -1014.172852,-1083.929688 -1014.059204,-1080.931885"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/seq"
                  points="-655.747559,-1659.959351 -652.403198,-1660.214722 -653.536621,-1657.437134"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/list"
                  points="-846.160583,-1876.019653 -842.806519,-1876.011230 -844.154785,-1873.331299"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/doseq"
                  points="490.258057,-1438.042480 492.771515,-1435.821533 489.989410,-1434.699219"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/apply"
                  points="-279.717407,-1375.136230 -276.436371,-1375.832520 -277.191742,-1372.929199"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/let"
                  points="-436.598999,-910.654236 -433.997650,-912.771606 -433.344330,-909.843628"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained q/drained?"
                  points="707.936218,-958.120667 705.201599,-960.062683 707.849060,-961.473572"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/when-let"
                  points="-1193.408936,-363.551392 -1191.251953,-366.119904 -1190.059814,-363.366913"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained l/with-exclusive-lock"
                  points="134.656036,272.296753 134.186279,268.975739 137.031006,269.928314"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained user/NodeState"
                  points="184.500214,-620.215820 185.223587,-623.491028 187.554367,-621.602234"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained clojure.core/when"
                  points="-66.681252,-88.650085 -66.327049,-91.985428 -63.800453,-90.367935"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained user/set-state!"
                  points="331.907410,-827.452515 332.754456,-830.697876 335.011963,-828.722046"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-for-drained q/drained-queue"
                  points="857.791992,-862.694275 854.680542,-863.946838 856.927246,-865.934998"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="persistent-queue PersistentQueue/EMPTY"
                  points="971.206970,850.884216 968.019775,851.929077 968.458740,848.961426"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node r/result-callback"
                  points="-148.434219,1026.727417 -146.773285,1023.813354 -145.106476,1026.307739"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node log/error"
                  points="861.044312,325.226440 862.755798,322.341858 864.378845,324.864868"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node q/cancel-receive"
                  points="713.287598,-172.077072 716.011719,-174.033936 716.487549,-171.071899"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node l/release"
                  points="298.946686,-678.678284 302.172638,-679.596619 301.616913,-676.648499"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node q/queue"
                  points="85.232323,-213.474701 88.096313,-215.220413 88.347290,-212.230942"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/with-lock"
                  points="-11.788073,482.278839 -9.637903,479.704590 -8.438570,482.454407"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node r/async-result?"
                  points="468.158356,93.350639 470.570831,91.020424 471.470001,93.882500"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/release-all"
                  points="1604.194702,217.960709 1604.384277,214.611969 1606.987305,216.103180"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node q/receive"
                  points="848.198792,-213.724548 850.957397,-215.632401 851.380249,-212.662338"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node q/error-queue"
                  points="770.778931,-312.428040 773.702637,-314.071777 773.848145,-311.075317"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node q/transactional-copy"
                  points="612.579468,-163.345642 615.314270,-165.287552 615.773865,-162.322983"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node q/transactional-queue"
                  points="3.551048,-255.708572 6.458145,-257.381531 6.633673,-254.386658"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/with-exclusive-lock"
                  points="141.511856,278.998627 143.825745,276.570496 144.842712,279.392883"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node q/dispatch-message"
                  points="637.592468,-249.688385 640.442932,-251.456223 640.716980,-248.468765"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/release-exclusive"
                  points="776.820129,-138.844620 779.471680,-140.898682 780.054321,-137.955811"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node q/error"
                  points="729.987732,-245.498505 732.819641,-247.295776 733.124695,-244.311340"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/acquire-all"
                  points="1674.036621,115.428146 1674.167969,112.076614 1676.796631,113.522232"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node r/subscribe"
                  points="-207.082825,990.924438 -205.350922,988.052063 -203.745789,990.586487"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node q/drain"
                  points="985.425171,-448.898041 988.539490,-450.143494 988.290100,-447.153870"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node l/acquire"
                  points="651.426331,-92.542854 654.044739,-94.639015 654.674255,-91.705818"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Node q/closed?"
                  points="1455.315308,825.876587 1455.054199,822.532654 1457.833740,823.661316"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/try-acquire-exclusive"
                  points="866.388672,-344.508270 869.353333,-346.076935 869.422424,-343.077728"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node r/defer-within-transaction"
                  points="881.982788,-31.883810 884.385742,-34.223900 885.296631,-31.365538"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/try-acquire"
                  points="529.421753,-172.885498 532.186401,-174.784637 532.599854,-171.813263"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node q/drained-queue"
                  points="875.108521,-849.932800 878.459961,-850.066406 877.226196,-847.331787"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Node l/acquire-exclusive"
                  points="906.975708,-282.295044 909.839417,-284.041199 910.090881,-281.051758"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="lazy-channel-seq clojure.core/concat"
                  points="-1022.153809,-1618.748535 -1020.787170,-1621.811646 -1018.883362,-1619.493042"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="lazy-channel-seq clojure.core/seq"
                  points="-676.474060,-1667.257202 -679.777527,-1666.676636 -678.920593,-1669.551636"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="lazy-channel-seq clojure.core/list"
                  points="-858.182129,-1870.184692 -857.310974,-1866.945801 -860.250671,-1867.544434"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="lazy-channel-seq user/channel-&gt;lazy-seq"
                  points="-824.225647,-1558.482788 -826.662659,-1560.787354 -823.844177,-1561.815186"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/concat"
                  points="-1035.067017,-1601.691650 -1034.896240,-1598.341797 -1037.644287,-1599.545166"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/vector"
                  points="-1034.092651,-1072.672363 -1034.466919,-1069.339111 -1036.983765,-1070.971924"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/neg?"
                  points="-1249.674438,380.733856 -1252.991943,380.239960 -1251.269775,377.783478"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/seq"
                  points="-671.859192,-1654.848267 -672.211914,-1651.512695 -674.739258,-1653.129150"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/when-not"
                  points="-466.245422,-22.299450 -469.181549,-20.677967 -469.304291,-23.675457"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/list"
                  points="-860.646118,-1870.998901 -860.557922,-1867.645874 -863.275574,-1868.916626"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/assoc"
                  points="-946.884705,-68.789757 -949.678467,-66.933693 -950.045776,-69.911110"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/apply"
                  points="-298.278503,-1370.267456 -299.395691,-1367.104980 -301.478882,-1369.263672"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/let"
                  points="-456.259003,-901.827393 -457.815826,-898.856445 -459.569794,-901.290283"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/="
                  points="-1895.935181,-494.720581 -1893.684692,-492.233521 -1896.574585,-491.427979"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/if-not"
                  points="-232.943619,-349.509796 -235.489456,-347.326019 -236.218124,-350.236176"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing user/make-record"
                  points="-294.452057,-218.791061 -297.156036,-216.806488 -297.662140,-219.763489"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/or"
                  points="-613.407410,-5.362806 -616.358887,-3.769558 -616.452881,-6.768086"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/doall"
                  points="-1202.156860,127.593353 -1205.373169,128.544983 -1204.848022,125.591309"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing user/timing"
                  points="-877.845703,19.677158 -880.827271,21.213427 -880.863647,18.213648"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/long"
                  points="-1405.152344,409.365967 -1408.279907,408.154266 -1406.059448,406.136871"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/-"
                  points="-1056.271851,-35.928276 -1059.115723,-34.150013 -1059.400879,-37.136440"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing trace-context/context"
                  points="-1147.924805,52.929531 -1150.979248,54.315460 -1150.866211,51.317589"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing clojure.core/map"
                  points="-1091.828247,123.992775 -1095.009888,125.054497 -1094.586548,122.084511"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="make-timing java.lang.Long/MIN_VALUE"
                  points="-1003.326111,107.543327 -1006.464722,108.726280 -1006.155640,105.742241"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="now System/currentTimeMillis"
                  points="-589.139038,1329.901245 -592.078613,1328.286011 -589.610596,1326.580444"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="now q/now"
                  points="-606.115417,1295.976074 -603.990540,1298.571289 -606.916687,1299.233154"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="error-value g/error-value"
                  points="1556.884399,616.712158 1556.615601,620.055481 1554.048462,618.503113"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="error-value r/error-value"
                  points="1527.450928,634.820923 1530.597900,633.660583 1530.267334,636.642273"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="error-value ch/error-value"
                  points="1539.485474,653.042969 1538.984131,649.726563 1541.837891,650.652100"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/hash-map"
                  points="496.175232,-1744.150391 496.128784,-1740.796631 493.464355,-1742.175293"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/with-meta"
                  points="899.597046,-1410.544556 896.846375,-1408.625244 896.411194,-1411.593506"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/concat"
                  points="-1019.920898,-1609.364868 -1016.665649,-1610.173096 -1017.321045,-1607.245605"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/vector"
                  points="-1017.283569,-1083.869141 -1014.600403,-1085.881836 -1014.063538,-1082.930176"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context user/context"
                  points="387.304626,-919.496887 385.056366,-921.985962 387.946930,-922.788940"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/seq"
                  points="-655.602844,-1660.333252 -652.270020,-1660.710449 -653.301392,-1657.893311"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/list"
                  points="-846.133240,-1876.074341 -842.779175,-1876.084717 -844.112549,-1873.397217"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/apply"
                  points="-279.421631,-1376.771606 -276.282959,-1377.954346 -276.592285,-1374.970215"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/let"
                  points="-437.769592,-913.690369 -435.901550,-916.476135 -434.420166,-913.867371"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context user/assoc-record"
                  points="202.644852,-1107.981445 202.216187,-1111.308105 205.048920,-1110.320313"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context clojure.core/if-not"
                  points="-217.232254,-361.958649 -217.190720,-365.312500 -214.524246,-363.937744"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context user/make-record"
                  points="-278.614655,-230.447144 -278.588776,-233.801147 -275.915924,-232.438843"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="assoc-context user/Context"
                  points="303.326294,-885.054382 301.642639,-887.955322 304.636841,-888.141846"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-&gt;seq System/currentTimeMillis"
                  points="-573.190674,1333.752930 -571.255554,1331.013306 -569.837952,1333.657349"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-&gt;seq g/drain"
                  points="-543.690918,1312.685791 -544.624634,1315.907349 -546.828369,1313.871704"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/fn"
                  points="-1264.659058,-595.164124 -1264.606934,-591.810425 -1267.310791,-593.110229"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/concat"
                  points="-1034.766113,-1601.565186 -1034.495972,-1598.221924 -1037.278687,-1599.343018"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/vector"
                  points="-1032.879272,-1071.990112 -1032.829590,-1068.636475 -1035.532471,-1069.938232"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/neg?"
                  points="-1247.886353,395.348206 -1248.723267,398.596191 -1250.986938,396.627380"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/start-pipeline"
                  points="-900.823547,492.660522 -902.215820,495.712036 -904.100098,493.377625"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline log/error"
                  points="841.636108,335.400665 839.441833,337.937439 838.290100,335.167297"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/seq"
                  points="-670.900513,-1654.300903 -670.917175,-1650.946777 -673.593811,-1652.301758"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/when-not"
                  points="-463.474060,-15.439132 -464.718842,-12.324571 -466.712555,-14.566230"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/list"
                  points="-860.260376,-1870.827515 -860.043640,-1867.480347 -862.808044,-1868.645874"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/apply"
                  points="-296.532318,-1368.798706 -296.972961,-1365.473755 -299.456726,-1367.156372"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline user/_"
                  points="-1617.738525,222.973755 -1617.761597,226.327789 -1620.435669,224.967682"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/let"
                  points="-453.878906,-899.416870 -454.457916,-896.113159 -456.869293,-897.897827"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline r/result-channel"
                  points="318.589264,848.465271 316.157349,850.775208 315.282166,847.905701"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline context/timer"
                  points="-969.443665,1111.917480 -971.674805,1114.421875 -972.785889,1111.635254"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/identical?"
                  points="-43.225483,-373.207489 -44.482368,-370.097778 -46.467377,-372.347168"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline t/enqueued-timer"
                  points="-1089.433594,227.276016 -1090.286499,230.519897 -1092.540405,228.540161"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline potemkin/fast-bound-fn*"
                  points="-968.756958,477.231354 -970.056885,480.323334 -972.010498,478.046600"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/str"
                  points="-1836.206543,-380.630066 -1835.483398,-377.354858 -1838.392822,-378.086365"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/if-not"
                  points="-230.260605,-344.618622 -231.407730,-341.466797 -233.470352,-343.645203"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline r/expiring-result"
                  points="-717.317688,695.069641 -719.134094,697.889343 -720.663269,695.308289"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline u/error"
                  points="483.757172,355.904449 481.660797,358.522736 480.404755,355.798309"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline ex/execute"
                  points="-986.077698,210.239151 -987.038086,213.452805 -989.224854,211.399002"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline r/error-result"
                  points="1254.017578,703.146851 1251.504272,705.367981 1250.732788,702.468933"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/when"
                  points="-81.349518,-72.703285 -82.821190,-69.689285 -84.643715,-72.072220"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/comp"
                  points="-869.558289,642.199158 -871.177368,645.136536 -872.879639,642.666321"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/or"
                  points="-610.369690,1.887828 -611.504028,5.044290 -613.575439,2.874225"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline t/timer"
                  points="-567.495911,461.994354 -569.146362,464.914276 -570.822144,462.425934"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/case"
                  points="384.730255,-372.353027 383.218811,-369.358765 381.427979,-371.765625"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline user/error"
                  points="-309.068756,13.050686 -310.459229,16.102993 -312.344910,13.769689"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/IPipeline"
                  points="-632.549744,308.113342 -633.976624,311.148804 -635.834167,308.793091"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline user/run"
                  points="-624.734375,389.113983 -626.257446,392.102356 -628.038940,389.688538"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/long"
                  points="-1404.437988,426.244751 -1405.069214,429.538910 -1407.452026,427.716339"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/gen-timer"
                  points="-848.073120,543.097595 -849.582214,546.093018 -851.374939,543.687500"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/loop"
                  points="144.979507,-33.051952 143.341278,-30.125139 141.655121,-32.606441"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline r/result"
                  points="386.479126,54.015732 384.652863,56.829041 383.132721,54.242691"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/identity"
                  points="-797.518677,451.662659 -798.961853,454.690399 -800.806824,452.324738"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/int"
                  points="199.739761,-129.594864 198.147842,-126.642624 196.422806,-129.097061"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline r/timed-result"
                  points="-919.781677,-361.609589 -920.287842,-358.293915 -922.737915,-360.025116"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/run-finally"
                  points="-701.124939,391.483795 -702.585327,394.503326 -704.416748,392.127228"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline clojure.core/reify"
                  points="-1620.682983,106.941788 -1620.598267,110.294823 -1623.314575,109.021385"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline user/try*"
                  points="-206.036682,-151.116592 -207.358414,-148.033890 -209.295883,-150.324356"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/implicit?"
                  points="-740.684509,538.024658 -742.284668,540.972473 -744.002808,538.513245"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="pipeline user/invoke"
                  points="-967.834961,590.403015 -969.286194,593.426941 -971.124817,591.056335"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/subscribe"
                  points="-1115.608276,438.460358 -1116.682373,441.637817 -1118.794678,439.507568"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline user/on-success"
                  points="-776.290527,360.853516 -777.646301,363.921387 -779.558289,361.609619"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipeline lamina.core.utils/retry-exception?"
                  points="-913.402222,356.196594 -914.612732,359.324615 -916.630920,357.105011"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="lazy-seq-&gt;channel log/error"
                  points="846.618347,321.470978 843.883362,319.529327 846.530701,318.118011"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregate t/task-queue"
                  points="-127.396088,1386.405640 -127.550339,1383.055176 -124.808197,1384.271973"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="aggregate l/lock"
                  points="196.128357,442.365356 197.164719,445.555328 194.198196,445.108429"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregate clojure.core/deref"
                  points="600.871277,1000.602783 597.517334,1000.568176 598.886597,997.898865"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="aggregate t/period"
                  points="20.275539,1658.854248 19.213247,1655.672729 22.183313,1656.095581"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregate l/with-exclusive-lock"
                  points="131.524323,293.721558 133.122009,296.670685 130.123627,296.769196"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer- System/currentTimeMillis"
                  points="-593.479248,1341.911621 -595.964722,1344.163696 -596.772217,1341.274536"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer- Long/MIN_VALUE"
                  points="-901.033203,1413.421021 -897.906616,1412.206665 -898.185791,1415.193726"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer- p/probe-enabled?"
                  points="-848.856201,1390.183594 -848.856018,1393.537720 -851.539368,1392.196167"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="timer- context/timer"
                  points="-955.935059,1118.339722 -953.606262,1120.753540 -956.468811,1121.651001"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timer- System/nanoTime"
                  points="-912.425720,1477.232666 -911.658020,1473.967651 -909.353088,1475.887817"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="format-timing str/trim"
                  points="1992.901123,-1528.309082 1989.547729,-1528.239868 1990.833862,-1530.950317"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/fn"
                  points="-1255.274170,-615.061279 -1255.375732,-618.413818 -1252.653076,-617.154053"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/concat"
                  points="-1028.306152,-1601.021851 -1026.199951,-1598.411377 -1029.130859,-1597.770752"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/vector"
                  points="-1024.006836,-1092.108154 -1024.280762,-1095.451050 -1021.496887,-1094.333130"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/seq"
                  points="-672.376465,-1655.200195 -672.918335,-1651.890137 -675.349609,-1653.647705"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/list"
                  points="-857.727356,-1870.102051 -856.720947,-1866.902588 -859.683105,-1867.377197"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/apply"
                  points="-301.206329,-1376.055908 -303.911346,-1374.072754 -304.415863,-1377.030029"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expand-multi-arities clojure.core/list*"
                  points="-649.573120,-728.094543 -652.360291,-729.960388 -649.752747,-731.443787"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline clojure.core/concat"
                  points="-1022.632751,-1604.242065 -1019.418579,-1603.283447 -1021.471069,-1601.095459"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline clojure.core/vector"
                  points="-1020.550537,-1089.895264 -1019.580139,-1093.105835 -1017.399719,-1091.045288"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline clojure.core/seq"
                  points="-669.319519,-1653.649414 -668.816162,-1650.333252 -671.670410,-1651.257080"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline clojure.core/list"
                  points="-854.066406,-1870.132446 -852.065674,-1867.440430 -855.019653,-1866.916748"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline clojure.core/apply"
                  points="-301.356415,-1377.524902 -304.302643,-1375.921753 -304.406586,-1378.920044"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline clojure.core/let"
                  points="-453.633362,-917.276978 -456.580872,-918.877625 -454.121338,-920.595398"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="run-pipeline user/pipeline"
                  points="-525.458008,-712.324524 -527.900269,-714.623474 -525.084229,-715.657776"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue PersistentQueue/EMPTY"
                  points="991.811340,847.349060 993.761475,844.620178 995.164551,847.271790"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/success-result"
                  points="1125.391724,778.820923 1123.370361,781.497559 1122.037598,778.809937"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue clojure.core/deref"
                  points="620.754150,1001.255676 622.911865,998.687805 624.103149,1001.441101"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/async-result?"
                  points="464.758942,105.053749 467.840179,106.378845 465.547577,108.313812"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/result-channel"
                  points="340.098755,844.741333 343.025238,843.102478 343.165680,846.099182"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/claim"
                  points="1207.912598,642.515259 1207.066406,645.760864 1204.808350,643.785767"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/error!"
                  points="1201.660889,719.146423 1199.964600,722.039978 1198.328369,719.525574"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue u/error"
                  points="502.290283,358.227600 505.565186,358.952209 503.675537,361.282288"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/error-result"
                  points="1254.977539,705.560730 1253.055176,708.309326 1251.625244,705.671997"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;TransactionalEventQueue r/add-listener"
                  points="1028.343262,727.107300 1030.819336,729.369873 1028.018799,730.445679"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/hash-map"
                  points="512.181702,-1752.887451 515.309265,-1754.099365 515.027649,-1751.112549"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/with-meta"
                  points="916.021729,-1421.642578 916.237122,-1424.989868 918.828674,-1423.478638"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/concat"
                  points="-1019.664673,-1612.225464 -1016.729614,-1613.848877 -1016.604858,-1610.851563"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/vector"
                  points="-1017.550476,-1084.995850 -1015.093811,-1087.279419 -1014.249573,-1084.400757"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/seq"
                  points="-654.934631,-1664.338379 -651.965698,-1665.898926 -651.904785,-1662.899658"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/when-not"
                  points="-447.831482,-30.867176 -446.913971,-34.093338 -444.700043,-32.068848"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/list"
                  points="-845.035095,-1879.936157 -841.908142,-1881.149292 -842.188293,-1878.162476"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/deref"
                  points="612.531433,994.784180 611.564148,991.572632 614.520325,992.083374"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/apply"
                  points="-279.654785,-1380.422729 -277.077576,-1382.569336 -276.391174,-1379.648926"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/let"
                  points="-437.570526,-913.323792 -435.598206,-916.036743 -434.216797,-913.373657"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/identical?"
                  points="-27.883785,-388.892761 -27.095474,-392.152893 -24.802681,-390.218201"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state user/assoc-record"
                  points="208.099289,-1103.809692 209.727066,-1106.742310 211.422073,-1104.266968"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/ref"
                  points="457.988098,-503.118347 458.036774,-506.472076 460.700287,-505.091644"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/if-let"
                  points="311.451782,-1220.617798 313.201355,-1223.479492 314.790833,-1220.935059"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/when"
                  points="-66.242577,-88.354141 -65.728378,-91.668594 -63.282497,-89.931458"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/dosync"
                  points="48.824547,-1381.939697 51.248894,-1384.257568 52.133453,-1381.390869"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/case"
                  points="398.617432,-388.685425 398.666260,-392.039154 401.329712,-390.658600"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state user/in-transaction?"
                  points="473.950653,-622.682007 474.110260,-626.032349 476.726654,-624.564575"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/and"
                  points="-54.299156,-192.745956 -53.695972,-196.045380 -51.297710,-194.243073"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/dec"
                  points="551.877991,-617.703064 551.841309,-621.056946 554.539063,-619.744812"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/ref-set"
                  points="518.831299,-712.454529 519.005005,-715.804077 521.615234,-714.325317"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/inc"
                  points="404.131470,-551.900757 404.357147,-555.247253 406.944061,-553.728088"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state user/ResultState"
                  points="1083.371216,-928.975952 1081.850586,-931.965576 1084.850586,-931.986206"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="update-state clojure.core/ensure"
                  points="597.572571,-758.752686 597.601257,-762.106628 600.273010,-760.742126"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-string-query str/trim"
                  points="2007.743774,-1513.747681 2010.424072,-1511.731201 2007.738770,-1510.393555"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-string-query Pattern/quote"
                  points="2070.407471,-1403.475708 2067.232178,-1404.555664 2069.366455,-1406.664063"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-string-query str/split-lines"
                  points="2013.927734,-1402.256226 2016.121094,-1404.793701 2017.273682,-1402.023926"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-string-query Pattern/compile"
                  points="2056.317871,-1361.125244 2054.740234,-1364.085205 2057.739258,-1364.163086"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-string-query c/comparators"
                  points="2066.565430,-1437.222656 2066.176514,-1433.891235 2063.666748,-1435.535034"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distributor g/distributing-propagator"
                  points="942.247192,1127.927490 945.549500,1128.514526 943.758972,1130.921509"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distributor clojure.core/deref"
                  points="620.913879,1009.602112 624.253296,1009.288757 623.168213,1012.085632"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distributor g/closed?"
                  points="1400.433472,878.025269 1398.627563,880.851746 1397.088745,878.276428"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="distributor g/join"
                  points="877.743835,1168.109741 880.128357,1165.750977 881.061584,1168.602051"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="distributor g/node"
                  points="972.522095,1122.349976 972.115051,1125.679199 969.614441,1124.021973"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="select-probes c/cancel-callback"
                  points="-1063.832764,2338.566406 -1061.413574,2340.889404 -1064.239746,2341.895752"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="select-probes str/replace"
                  points="-1138.745972,2235.843262 -1135.848755,2237.533203 -1138.359741,2239.174805"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="select-probes c/receive-all"
                  points="-984.189514,2338.263916 -986.474060,2340.719727 -987.524841,2337.909668"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="select-probes c/on-closed"
                  points="-1035.893311,2383.967529 -1039.055054,2382.848145 -1036.894653,2380.766602"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="select-probes c/channel"
                  points="-1079.379883,2372.032471 -1076.937866,2369.733154 -1076.075317,2372.606689"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="select-probes c/siphon"
                  points="-1034.138916,2347.484375 -1035.476685,2350.560303 -1037.402222,2348.259521"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor clojure.core/hash-map"
                  points="490.270416,-1752.980957 487.409424,-1751.230347 487.153320,-1754.219360"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor clojure.core/concat"
                  points="-1019.708435,-1612.849365 -1016.870422,-1614.636963 -1016.575500,-1611.651611"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor clojure.core/seq"
                  points="-654.954712,-1664.815796 -652.056396,-1666.503906 -651.865234,-1663.510010"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor clojure.core/list"
                  points="-845.407349,-1877.951782 -842.111267,-1878.572998 -842.932678,-1875.687744"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor clojure.core/apply"
                  points="-287.306580,-1388.472778 -287.913940,-1391.771362 -285.032043,-1390.937866"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor clojure.core/merge"
                  points="-59.849915,-1458.827026 -62.668541,-1460.645142 -60.086639,-1462.172729"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defexecutor user/executor"
                  points="-9.783993,-1429.243652 -12.748749,-1430.812256 -10.308037,-1432.556641"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/concat"
                  points="-1021.450134,-1617.790283 -1019.760925,-1620.687988 -1018.118469,-1618.177490"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/vector"
                  points="-1021.691406,-1090.836548 -1021.160583,-1094.148438 -1018.723450,-1092.398926"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/seq"
                  points="-658.805420,-1672.493896 -658.004272,-1675.750854 -655.719116,-1673.807251"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/list"
                  points="-845.674438,-1884.791138 -843.383911,-1887.241333 -842.339966,-1884.428833"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/apply"
                  points="-290.648651,-1388.902222 -292.226044,-1391.862183 -289.227081,-1391.940063"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/let"
                  points="-446.047028,-919.182983 -447.185455,-922.338013 -444.206085,-921.986694"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; user/channel"
                  points="-231.685898,-2072.875732 -234.870773,-2071.823730 -234.438370,-2074.792480"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; clojure.core/-&gt;&gt;"
                  points="-352.759979,-2061.762939 -350.762390,-2064.457275 -349.405945,-2061.781494"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon-&gt;&gt; user/siphon"
                  points="72.819962,-1954.735596 69.497177,-1954.278320 70.460480,-1957.119385"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/fn"
                  points="-1266.499756,-613.873291 -1269.500854,-615.371155 -1267.102173,-617.172913"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/concat"
                  points="-1037.788696,-1603.394653 -1038.592285,-1600.138306 -1040.875977,-1602.083862"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/vector"
                  points="-1038.965698,-1080.149902 -1041.688721,-1078.191528 -1042.166260,-1081.153198"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/seq"
                  points="-674.728821,-1657.510254 -676.227234,-1654.509521 -678.028503,-1656.908447"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/list"
                  points="-862.806335,-1872.332275 -863.489136,-1869.048462 -865.843140,-1870.908325"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/apply"
                  points="-300.895325,-1374.732544 -303.335022,-1372.430786 -304.200500,-1375.303345"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/let"
                  points="-458.299744,-909.138367 -461.410095,-907.883057 -461.170166,-910.873413"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.tools.logging/error"
                  points="-1121.620972,-549.124023 -1124.784180,-550.239502 -1122.626465,-552.323853"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction user/result-channel"
                  points="-1376.816650,-252.322876 -1378.971313,-254.893341 -1376.053101,-255.588928"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction lamina.core.result/success"
                  points="-1097.690796,-675.707520 -1101.007324,-676.207397 -1099.280762,-678.660767"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction lamina.core.utils/in-transaction?"
                  points="-1045.521851,-656.480408 -1048.849243,-656.902649 -1047.180542,-659.395691"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/agent"
                  points="-1355.774902,-685.451050 -1358.652100,-687.175049 -1356.122070,-688.787109"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction clojure.core/send"
                  points="-1041.246216,-540.504272 -1044.484497,-541.377930 -1042.490112,-543.619141"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-within-transaction lamina.core.utils/error"
                  points="-1344.563599,-756.571838 -1347.665894,-757.846680 -1345.405151,-759.818604"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/hash-map"
                  points="491.411377,-1758.878784 488.057281,-1758.892212 489.409698,-1761.570190"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/fn"
                  points="-1251.698853,-612.416443 -1250.464722,-615.535278 -1248.463257,-613.300415"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/concat"
                  points="-1019.963501,-1614.354370 -1017.400269,-1616.517700 -1016.694946,-1613.601685"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/vector"
                  points="-1018.990601,-1088.057617 -1017.344177,-1090.979858 -1015.664978,-1088.493774"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/seq"
                  points="-655.349609,-1667.115845 -652.872559,-1669.377319 -652.054199,-1666.491089"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/list"
                  points="-844.990723,-1881.250000 -842.030823,-1882.827637 -841.952698,-1879.828613"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/doseq"
                  points="480.266968,-1457.542969 477.396423,-1459.277832 479.932617,-1460.880371"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/apply"
                  points="-282.933868,-1386.018066 -282.013916,-1389.243530 -279.801514,-1387.217407"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn clojure.core/let"
                  points="-441.387665,-917.512329 -441.027557,-920.846985 -438.503815,-919.225037"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn user/task-fn-body"
                  points="374.950897,-1200.048584 372.759827,-1202.588135 375.667847,-1203.325195"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn user/probe-channel"
                  points="-307.626862,-788.389404 -307.765961,-791.740662 -305.029327,-790.511414"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn user/siphon"
                  points="93.513588,-1947.279053 96.851311,-1947.609985 95.781013,-1944.807495"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrumented-fn user/fn-body"
                  points="256.559875,-1137.705933 254.827332,-1140.577881 257.817932,-1140.815186"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/concat"
                  points="-1032.642456,-1600.949097 -1031.708984,-1597.727417 -1034.659668,-1598.269409"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/vector"
                  points="-1030.875732,-1071.254883 -1030.179443,-1067.973877 -1033.082764,-1068.729248"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/seq"
                  points="-669.765686,-1653.804565 -669.405212,-1650.469849 -672.217102,-1651.515259"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/list"
                  points="-858.586243,-1870.275024 -857.837585,-1867.005493 -860.752625,-1867.714478"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/boolean"
                  points="-1325.201172,249.550385 -1328.543823,249.274704 -1326.986206,246.710770"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/deref"
                  points="600.428589,1001.580383 597.087280,1001.872681 598.189941,999.082642"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/apply"
                  points="-296.502960,-1368.778931 -296.932922,-1365.452515 -299.422058,-1367.127075"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel clojure.core/let"
                  points="-454.274933,-899.724243 -455.003876,-896.450317 -457.331451,-898.343018"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/success"
                  points="-636.966858,221.722336 -639.962830,223.230347 -639.970886,220.230347"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel t/invoke-in"
                  points="-266.088226,1366.285400 -269.250336,1365.166870 -267.090729,1363.084595"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/result-channel"
                  points="-1374.113037,-230.623718 -1372.571533,-227.644882 -1375.571289,-227.603134"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/error"
                  points="-311.291687,8.333525 -313.931671,10.402461 -314.530853,7.462901"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/result-callback"
                  points="-667.957886,159.476013 -670.808350,161.243805 -671.082397,158.256348"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/result"
                  points="-747.145630,230.736328 -750.162537,232.202103 -750.128357,229.202286"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/isRealized"
                  points="-816.724243,220.663757 -819.716064,222.180130 -819.732422,219.180161"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/deftype+"
                  points="-543.524109,176.823135 -546.434082,178.490967 -546.604370,175.495789"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-result-channel user/subscribe"
                  points="-1116.402222,423.862823 -1119.683472,423.167389 -1117.814575,420.820587"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue p/run-pipeline"
                  points="557.447327,767.103027 559.907227,769.383179 557.099121,770.438965"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue r/result-channel"
                  points="336.182861,853.681641 339.260498,855.015137 336.962708,856.943848"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue r/success"
                  points="154.104507,980.322937 157.435684,980.714478 155.790024,983.222778"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue t/invoke-at"
                  points="780.602966,1376.202393 783.443726,1377.985718 780.880737,1379.545044"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue Integer/MAX_VALUE"
                  points="998.221985,1430.451782 995.039307,1431.510376 995.465454,1428.540894"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue t/advance-until"
                  points="818.799377,1383.227539 817.386719,1386.269653 815.518066,1383.922729"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defer-onto-queue lamina.core.channel/channel"
                  points="767.644348,1412.249023 769.910339,1409.776123 770.982239,1412.578125"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/hash-map"
                  points="505.553986,-1743.805420 508.112457,-1741.636475 505.353912,-1740.457275"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/with-meta"
                  points="899.829895,-1409.390625 897.300049,-1407.188354 896.550171,-1410.093140"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/concat"
                  points="-1019.781738,-1610.104004 -1016.589355,-1611.132935 -1017.043213,-1608.167358"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/vector"
                  points="-1017.240967,-1083.618530 -1014.512024,-1085.568604 -1014.043518,-1082.605469"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/seq"
                  points="-655.221252,-1661.610718 -651.958496,-1662.388306 -652.641479,-1659.467163"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/list"
                  points="-845.593384,-1877.361816 -842.267578,-1877.796875 -843.249878,-1874.962158"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/apply"
                  points="-279.367310,-1377.598511 -276.326538,-1379.014038 -276.410400,-1376.015259"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/let"
                  points="-437.104095,-912.299622 -434.864929,-914.796875 -433.762817,-912.006592"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! q/drained?"
                  points="712.031982,-959.360168 710.245300,-962.198853 713.230896,-962.492676"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! user/NodeState"
                  points="183.702515,-620.804749 184.128036,-624.131775 186.619431,-622.460510"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/when"
                  points="-67.045326,-88.873322 -66.820854,-92.219902 -64.233376,-90.701698"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/or"
                  points="-594.843079,-13.688599 -593.866882,-16.897520 -591.690247,-14.833052"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! user/set-state!"
                  points="330.696106,-828.372864 331.087311,-831.704041 333.595795,-830.058655"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="close-node! q/close"
                  points="454.547455,-781.153687 454.223267,-784.492065 457.023682,-783.416016"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! q/drained-queue"
                  points="861.121582,-864.718933 858.642090,-866.977783 861.440918,-868.057861"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-node! clojure.core/nil?"
                  points="390.040039,-726.945190 389.915039,-730.296997 392.646484,-729.056274"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/concat"
                  points="-1037.891479,-1603.483398 -1038.735229,-1600.237183 -1040.994751,-1602.210815"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/vector"
                  points="-1037.263672,-1075.806641 -1038.930298,-1072.895874 -1040.592163,-1075.393433"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/seq"
                  points="-674.120789,-1656.769897 -675.352417,-1653.650146 -677.355591,-1655.883301"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/list"
                  points="-863.033142,-1872.516479 -863.802979,-1869.251953 -866.106689,-1871.173584"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/boolean"
                  points="-1324.702759,248.801041 -1328.011841,248.253021 -1326.249878,245.825012"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/pre-aggregate?"
                  points="-1482.645508,-201.303116 -1485.893677,-200.466797 -1485.263550,-203.399841"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/pre-aggregate"
                  points="-1307.290405,-110.610596 -1310.582886,-109.970695 -1309.777710,-112.860649"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/apply"
                  points="-299.960480,-1372.531128 -301.845032,-1369.756470 -303.310913,-1372.373901"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/_"
                  points="-1620.318848,205.185822 -1623.471313,204.040451 -1621.294067,201.976608"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/let"
                  points="-457.767090,-904.770020 -460.136475,-902.395996 -461.087952,-905.241089"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/distribute?"
                  points="-1319.972778,-189.671326 -1323.196899,-188.746475 -1322.647095,-191.695663"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/="
                  points="-1907.996094,-499.147705 -1909.638794,-496.223328 -1911.321167,-498.707153"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/when-let"
                  points="-1214.501587,-358.983551 -1217.474243,-357.430054 -1217.527954,-360.429565"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/str"
                  points="-1844.386597,-389.562012 -1847.112305,-387.607330 -1847.585693,-390.569733"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/periodic?"
                  points="-1376.909424,-429.948730 -1379.718872,-428.116364 -1380.060913,-431.096771"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/namespace"
                  points="-1429.045044,-364.172516 -1431.997681,-362.581360 -1432.089478,-365.579956"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/getName"
                  points="-1471.523560,-104.789856 -1474.852783,-104.382278 -1473.847168,-107.208710"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/getNamespace"
                  points="-1212.339966,-134.322540 -1215.595581,-133.516006 -1214.938599,-136.443161"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/aggregate"
                  points="-1222.516113,-202.845978 -1225.707642,-201.814529 -1225.256226,-204.780350"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator clojure.core/reify"
                  points="-1624.438477,89.909081 -1627.700562,89.128922 -1625.771606,86.831299"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/transform"
                  points="-1327.063477,-289.182495 -1330.155273,-287.881866 -1329.958984,-290.875458"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/intra-aggregate"
                  points="-1436.923828,-283.559845 -1440.038696,-282.315552 -1439.788208,-285.305054"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-operator user/operators"
                  points="-1515.461670,-325.390167 -1518.501465,-323.972534 -1518.419678,-326.971436"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel c/emitter-node"
                  points="1423.642700,-340.959015 1420.336182,-341.521393 1422.108643,-343.941742"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel g/node*"
                  points="733.974426,-537.086487 737.234985,-537.873230 736.560181,-534.950134"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel g/cancel"
                  points="1254.059692,-443.017914 1257.413818,-443.013275 1256.068359,-440.331818"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel c/receiver-node"
                  points="1479.447754,-170.958862 1476.647827,-172.805649 1479.245239,-174.306839"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel c/channel*"
                  points="1409.178101,-404.081848 1406.445068,-402.137665 1405.982910,-405.101837"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel g/on-state-changed"
                  points="1384.968872,-380.339783 1381.622925,-380.106476 1382.774780,-382.876556"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sympathetic-probe-channel g/link"
                  points="1143.904297,-263.460571 1145.627686,-266.338043 1147.240234,-263.808319"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="probe-channel- c/emitter-node"
                  points="1430.956055,-345.348328 1429.045410,-348.105072 1432.015137,-348.530853"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="probe-channel- c/channel*"
                  points="1422.352905,-395.020660 1424.448486,-392.401794 1421.515137,-391.772888"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="probe-channel- g/on-state-changed"
                  points="1406.105225,-375.441650 1409.191650,-376.754700 1409.007568,-373.760376"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="clojure-ns str/replace"
                  points="-1134.477417,2230.529053 -1131.140747,2230.187988 -1132.202271,2232.993652"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="zip-all l/lock"
                  points="195.722580,420.679749 193.691147,418.010803 196.638870,417.453247"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="zip-all l/with-exclusive-lock"
                  points="137.902496,291.421234 140.926010,292.873230 138.554977,294.711243"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="zip-all System/arraycopy"
                  points="201.642426,355.075226 198.318253,355.522369 199.290207,352.684174"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="receive-all g/edge"
                  points="1063.902100,-168.763977 1064.251831,-172.099808 1066.780640,-170.485672"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="receive-all g/link"
                  points="1126.187378,-250.494644 1124.847046,-247.419983 1122.923462,-249.722137"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="receive-all g/callback-propagator"
                  points="1089.837036,-240.151230 1093.190186,-240.072998 1091.786377,-237.421753"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="context clojure.core/deref"
                  points="621.625977,1004.777222 624.501648,1003.050903 624.732483,1006.041992"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release clojure.core/concat"
                  points="-1020.685730,-1607.119385 -1017.332886,-1607.211060 -1018.600708,-1604.492065"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release clojure.core/vector"
                  points="-1017.162964,-1083.019165 -1014.331055,-1084.816406 -1014.026001,-1081.832031"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release clojure.core/seq"
                  points="-657.584290,-1656.951904 -654.330750,-1656.136841 -656.284363,-1653.859985"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release clojure.core/list"
                  points="-847.928040,-1873.476685 -844.709167,-1872.533813 -846.751038,-1870.335815"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release l/release"
                  points="281.379852,-689.395752 278.353333,-690.841553 280.720581,-692.684448"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release clojure.core/apply"
                  points="-282.760193,-1369.956177 -279.602661,-1368.824829 -281.770752,-1366.751343"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release q/enqueue"
                  points="-37.087875,-1010.199646 -39.528370,-1012.500488 -36.711475,-1013.532593"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueue-and-release clojure.core/if-let"
                  points="291.171417,-1213.754761 288.325836,-1211.979248 288.043610,-1214.965820"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/fn"
                  points="-1251.351440,-612.008911 -1249.966797,-615.063904 -1248.076660,-612.734314"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/concat"
                  points="-1031.996216,-1600.850098 -1030.873291,-1597.689697 -1033.850830,-1598.055420"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/vector"
                  points="-1031.267212,-1071.364502 -1030.692627,-1068.060059 -1033.566162,-1068.922119"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/seq"
                  points="-670.808716,-1654.254883 -670.794067,-1650.900879 -673.483154,-1652.230713"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/list"
                  points="-858.582031,-1870.273926 -857.832092,-1867.004761 -860.747375,-1867.712524"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/apply"
                  points="-298.972900,-1371.059692 -300.387482,-1368.018555 -302.254608,-1370.366699"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* clojure.core/let"
                  points="-457.873383,-905.105591 -460.317505,-902.808594 -461.177429,-905.682739"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* user/result-channel"
                  points="-1369.306763,-251.441238 -1369.293091,-254.795319 -1366.615356,-253.442749"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* pr/probe-result"
                  points="-840.746521,-395.952911 -843.924255,-397.026154 -841.794617,-399.139069"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* user/capture-timings"
                  points="-804.119995,-444.839020 -807.418274,-445.448456 -805.611389,-447.843292"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="time* user/print-timing-result"
                  points="-974.880066,-379.617828 -977.599915,-381.580627 -974.941711,-382.971375"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="render-dot-string ImageIO/read"
                  points="-60.659386,2574.789307 -57.305443,2574.756836 -58.621178,2577.453125"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="render-dot-string io/input-stream"
                  points="-36.223465,2574.248291 -38.141899,2576.999512 -39.575562,2574.364258"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-quantiles t/minutes"
                  points="23.877131,1781.006104 20.599993,1780.291748 22.482370,1777.955811"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-quantiles t/task-queue"
                  points="-133.897156,1407.269531 -132.979355,1410.495605 -135.927353,1409.939453"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-quantiles sample/moving-sampler"
                  points="-210.141052,1614.756836 -206.919922,1613.821777 -207.460297,1616.772705"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-quantiles math/quantiles"
                  points="-173.380127,1601.722290 -172.019699,1604.788086 -175.016525,1604.650146"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator r/result-callback"
                  points="-153.357712,1022.681763 -153.591248,1019.335815 -150.821075,1020.487427"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator log/error"
                  points="841.064697,333.606354 838.469849,335.731689 837.807495,332.805725"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator clojure.core/deref"
                  points="602.475708,998.272339 599.241577,997.383301 601.246460,995.151611"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator l/with-lock"
                  points="-11.314203,489.768036 -8.013545,489.171661 -8.856717,492.050751"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator l/with-exclusive-lock"
                  points="127.864052,293.221100 128.395248,296.532867 125.533348,295.633087"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator n/closed-result"
                  points="42.836361,452.073334 45.103260,454.545410 42.218838,455.370117"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistributingPropagator r/subscribe"
                  points="-210.947388,987.242737 -210.771515,983.893250 -208.162262,985.373718"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router c/transform-stream"
                  points="1867.442383,1049.474609 1868.702148,1046.366089 1870.685059,1048.617310"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router c/*stream-generator*"
                  points="1973.838867,977.868408 1974.515991,974.583313 1976.873169,976.439026"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router time/with-task-queue"
                  points="1843.552856,1005.976074 1845.488770,1003.237061 1846.905518,1005.881470"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router cache/router"
                  points="1788.793579,753.066650 1792.131104,753.400024 1790.529297,755.936646"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router cache/inner-cache"
                  points="2002.664307,776.116577 2004.762695,778.733154 2001.830078,779.365356"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router q/parse-descriptor"
                  points="2012.225464,833.266357 2014.416992,835.805542 2011.509033,836.543091"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router cache/subscribe"
                  points="2060.172852,743.156433 2061.112061,746.376343 2058.160400,745.839722"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router time/period"
                  points="2066.129150,842.787109 2065.961670,846.137024 2063.348877,844.663025"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router time/with-period"
                  points="1966.938965,918.504395 1969.585938,916.444519 1970.175049,919.386169"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-router time/task-queue"
                  points="1795.515747,672.468567 1798.701782,673.516907 1796.588745,675.646423"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/concat"
                  points="-1020.251099,-1615.339600 -1017.900696,-1617.732422 -1016.926575,-1614.895020"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/vector"
                  points="-1020.128906,-1089.474609 -1018.986145,-1092.627930 -1016.920471,-1090.452393"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/seq"
                  points="-656.035828,-1668.916870 -653.991516,-1671.575928 -652.681946,-1668.876953"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/list"
                  points="-844.998535,-1881.467163 -842.070374,-1883.102905 -841.933044,-1880.106079"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/doseq"
                  points="477.249390,-1454.717529 473.941162,-1455.270508 475.706787,-1457.695801"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/apply"
                  points="-287.620850,-1388.558594 -288.325623,-1391.837769 -285.420349,-1391.089966"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split clojure.core/let"
                  points="-444.238922,-918.813965 -444.833923,-922.114868 -441.955200,-921.270508"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="split user/channel"
                  points="-216.441818,-2061.190674 -213.875824,-2059.030762 -216.630219,-2057.841797"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="split user/siphon"
                  points="72.377579,-1949.453369 69.654449,-1947.495239 69.177139,-1950.456909"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="probe-result r/async-result?"
                  points="449.236725,89.577972 445.974304,88.799072 447.902405,86.500702"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="probe-result r/result"
                  points="404.918427,54.828590 408.231873,55.349140 406.490051,57.791691"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/success-result"
                  points="1128.721069,765.078369 1125.733887,763.553040 1128.148926,761.773376"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/async-result?"
                  points="465.693390,104.166275 468.908478,105.121902 466.857941,107.311722"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/result-channel"
                  points="339.654846,842.122070 342.103088,839.829468 342.957886,842.705078"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/claim"
                  points="1204.155273,634.334778 1201.168945,635.861694 1201.141846,632.861816"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/error!"
                  points="1200.796021,708.752930 1197.446655,708.929871 1198.644897,706.179504"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue u/error"
                  points="503.477142,356.429016 506.830475,356.501221 505.431366,359.154968"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue l/with-exclusive-lock"
                  points="141.406631,286.736359 144.746964,286.432861 143.653641,289.226563"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/error-result"
                  points="1254.051758,697.363342 1250.759155,698.002441 1251.564819,695.112671"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EventQueue r/add-listener"
                  points="1025.628662,705.908020 1024.473633,702.759033 1027.454834,703.094604"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task clojure.core/hash-map"
                  points="490.553223,-1751.274170 488.002106,-1749.096680 487.280487,-1752.008545"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task clojure.core/concat"
                  points="-1019.658936,-1612.057495 -1016.699463,-1613.635986 -1016.620483,-1610.636963"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task clojure.core/vector"
                  points="-1018.353699,-1086.989014 -1016.387878,-1089.706665 -1015.000061,-1087.046997"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task clojure.core/seq"
                  points="-654.938782,-1663.739990 -651.889343,-1665.136841 -651.991638,-1662.138550"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task clojure.core/list"
                  points="-845.363281,-1878.110962 -842.076965,-1878.781738 -842.854919,-1875.884277"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task clojure.core/apply"
                  points="-281.730652,-1384.723633 -280.306061,-1387.760254 -278.446686,-1385.406006"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="task user/task"
                  points="186.316452,-1289.913940 183.783432,-1292.112549 186.555527,-1293.259521"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task user/default-executor"
                  points="47.491135,-1589.690552 45.645248,-1592.491089 48.623985,-1592.847534"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="task trace/instrumented-fn"
                  points="100.626099,-1502.146729 98.064560,-1504.312134 100.821411,-1505.495239"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="bridge log/error"
                  points="859.103516,322.958221 859.976379,319.719696 862.218079,321.713409"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge n/upstream-callback"
                  points="1079.350220,111.094391 1076.257935,112.393585 1076.455444,109.400101"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge g/terminal-propagator"
                  points="1030.641235,-51.955986 1032.476440,-49.148479 1029.496460,-48.803333"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge n/downstream-callback"
                  points="1017.478149,96.624413 1020.818787,96.324043 1019.722839,99.116692"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="bridge n/link"
                  points="1052.268555,140.893417 1050.495728,138.046143 1053.482788,137.766754"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge n/on-state-changed"
                  points="1047.925537,78.322037 1049.557495,81.252373 1046.560425,81.385765"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="bridge g/bridge"
                  points="1020.106323,129.354950 1021.716614,126.412697 1023.426331,128.877853"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock clojure.core/concat"
                  points="-1026.698242,-1601.504395 -1024.219482,-1599.244751 -1027.018555,-1598.165649"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock clojure.core/vector"
                  points="-1017.265076,-1080.036133 -1014.054321,-1081.005981 -1014.562744,-1078.049438"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock clojure.core/seq"
                  points="-668.458130,-1653.408936 -667.687073,-1650.144653 -670.606873,-1650.833374"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock clojure.core/list"
                  points="-855.409851,-1869.978638 -853.754517,-1867.061523 -856.750366,-1866.904053"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock clojure.core/apply"
                  points="-299.633789,-1371.985352 -301.354858,-1369.106567 -302.969543,-1371.634888"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock clojure.core/let"
                  points="-457.637207,-912.114014 -460.972626,-911.760620 -459.921173,-914.570313"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock user/acquire-exclusive"
                  points="-822.563965,-722.164673 -823.965454,-725.211914 -820.967041,-725.114258"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-exclusive-lock user/release-exclusive"
                  points="-741.905151,-695.173462 -743.966064,-697.819763 -741.024658,-698.409973"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="add-to-last-sub-timing context/timer"
                  points="-967.940063,1101.130615 -971.232056,1100.488159 -969.401245,1098.111450"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Channel g/error-value"
                  points="1566.485107,597.017212 1566.148926,593.679993 1568.953125,594.746033"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Channel q/messages"
                  points="1644.380371,391.173737 1644.728516,394.509735 1641.920410,393.453827"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Channel g/propagate"
                  points="1555.143188,-26.757864 1556.968872,-23.944210 1553.987671,-23.609074"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Channel g/queue"
                  points="1608.468384,438.627258 1610.221558,441.486694 1607.232788,441.745483"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Channel g/closed?"
                  points="1414.886963,862.590576 1414.918335,859.236633 1417.588989,860.603210"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Channel g/split"
                  points="1578.826660,482.486206 1581.579468,480.570038 1582.011353,483.538788"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue clojure.core/concat"
                  points="-1035.435181,-1601.860962 -1035.387817,-1598.507080 -1038.089722,-1599.810791"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue clojure.core/vector"
                  points="-1032.504395,-1091.982910 -1035.078857,-1094.132935 -1032.329102,-1095.332397"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue clojure.core/seq"
                  points="-675.276001,-1658.310059 -677.032715,-1655.452759 -678.615845,-1658.001099"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue clojure.core/list"
                  points="-861.426575,-1871.402588 -861.606262,-1868.053345 -864.213806,-1869.536743"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue clojure.core/apply"
                  points="-301.361328,-1377.714600 -304.334808,-1376.162598 -304.386993,-1379.162109"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue clojure.core/binding"
                  points="-1022.258545,-1196.240112 -1025.277832,-1197.701050 -1022.901428,-1199.532104"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-task-queue lamina.time.queue/*task-queue*"
                  points="-975.850464,-849.957947 -978.238159,-852.313599 -975.398560,-853.281494"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defn-instrumented clojure.core/concat"
                  points="-1039.687256,-1605.489380 -1041.294312,-1602.545410 -1043.006714,-1605.008789"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defn-instrumented clojure.core/seq"
                  points="-676.463135,-1660.936523 -678.901794,-1658.633667 -679.768616,-1661.505737"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defn-instrumented clojure.core/list"
                  points="-863.187683,-1872.647827 -864.017517,-1869.397949 -866.285461,-1871.361816"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defn-instrumented user/instrumented-fn"
                  points="-1102.441040,-1308.330322 -1104.893677,-1310.618042 -1102.082397,-1311.665161"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="defn-instrumented clojure.core/defn"
                  points="-1292.112915,-1263.260010 -1292.207397,-1266.612671 -1289.487427,-1265.347290"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="consumption r/claim"
                  points="1209.910767,624.566223 1207.161987,622.644165 1209.799194,621.213989"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task clojure.core/hash-map"
                  points="490.498810,-1751.504272 487.901489,-1749.382080 487.242615,-1752.308838"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task clojure.core/concat"
                  points="-1019.655640,-1611.869995 -1016.669678,-1613.397705 -1016.641846,-1610.397949"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task clojure.core/vector"
                  points="-1018.570313,-1087.384277 -1016.717468,-1090.180054 -1015.221863,-1087.579468"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task clojure.core/seq"
                  points="-654.963989,-1663.281494 -651.858948,-1664.549927 -652.086243,-1661.558472"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task clojure.core/list"
                  points="-845.575012,-1877.415283 -842.251526,-1877.867310 -843.219177,-1875.027710"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task clojure.core/apply"
                  points="-283.390808,-1386.414063 -282.649506,-1389.685181 -280.329132,-1387.783569"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task user/default-executor"
                  points="38.253735,-1581.900757 34.950806,-1581.317139 35.805038,-1584.192871"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bound-task trace/instrumented-fn"
                  points="95.755722,-1498.055298 92.423820,-1498.440552 94.064812,-1500.952026"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/concat"
                  points="-1036.731445,-1602.598633 -1037.138184,-1599.269287 -1039.638916,-1600.926514"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/vector"
                  points="-1037.377686,-1075.981567 -1039.099243,-1073.102905 -1040.713501,-1075.631470"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/seq"
                  points="-673.717041,-1656.343262 -674.780334,-1653.162231 -676.899841,-1655.285278"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/list"
                  points="-862.043335,-1871.780884 -862.442871,-1868.450684 -864.947266,-1870.102295"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/apply"
                  points="-300.166718,-1372.917114 -302.160187,-1370.219727 -303.520721,-1372.893555"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/let"
                  points="-458.156494,-906.285278 -460.838745,-904.271484 -461.376953,-907.222778"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/="
                  points="-1889.956055,-511.735931 -1888.395264,-514.704712 -1886.644531,-512.268555"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/when-let"
                  points="-1212.272461,-365.821411 -1215.569580,-366.436768 -1213.758545,-368.828369"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/str"
                  points="-1827.575317,-400.550537 -1827.214600,-403.885193 -1824.691162,-402.262695"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator clojure.core/*ns*"
                  points="-1611.390869,-647.811157 -1614.334473,-649.418884 -1611.870850,-651.130798"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-comparator user/comparators"
                  points="-1064.154663,-295.149475 -1067.477295,-295.608185 -1065.781250,-298.082794"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/concat"
                  points="-1026.022461,-1601.791138 -1023.398560,-1599.701904 -1026.119507,-1598.438477"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/vector"
                  points="-1021.502075,-1073.103394 -1018.501404,-1071.604736 -1020.900574,-1069.803711"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/seq"
                  points="-663.850220,-1653.313843 -661.809448,-1650.651978 -664.755249,-1650.084106"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/when-not"
                  points="-451.963928,-33.245731 -452.497772,-36.557079 -449.635162,-35.659611"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/list"
                  points="-852.994995,-1870.378174 -850.735596,-1867.899292 -853.622437,-1867.083374"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/apply"
                  points="-291.313446,-1366.947021 -290.078278,-1363.828613 -293.067047,-1364.087891"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="node* q/queue"
                  points="63.280121,-213.005173 60.221180,-211.629349 60.344097,-214.626816"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/let"
                  points="-446.402740,-897.298218 -444.653900,-894.436157 -447.643097,-894.181885"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/pr-str"
                  points="-320.174316,-128.247055 -323.094421,-129.897202 -320.606262,-131.573227"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/when-let"
                  points="-1192.636108,-357.476532 -1189.439941,-358.493683 -1189.904785,-355.529877"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/str"
                  points="-1822.591064,-390.088531 -1819.444336,-391.249573 -1819.774170,-388.267761"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* q/transactional-queue"
                  points="-18.409424,-254.390717 -21.311838,-252.709656 -21.495726,-255.704010"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* user/make-record"
                  points="-294.551788,-221.773895 -297.689728,-220.589218 -297.382294,-223.573410"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="node* user/NodeState"
                  points="168.435944,-605.547302 166.778397,-602.631409 165.108688,-605.123840"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* l/asymmetric-lock"
                  points="-439.921692,607.323303 -441.240021,604.239197 -438.245392,604.418152"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="node* clojure.core/ifn?"
                  points="-332.315735,-75.361053 -334.759216,-77.658752 -331.943665,-78.694458"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dosync-yielding clojure.core/concat"
                  points="-1019.692200,-1612.670532 -1016.825378,-1614.411621 -1016.579285,-1611.421631"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dosync-yielding clojure.core/seq"
                  points="-654.951355,-1663.468750 -651.868408,-1664.789917 -652.044678,-1661.795044"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dosync-yielding clojure.core/list"
                  points="-846.762024,-1874.971924 -843.429077,-1874.595703 -845.063110,-1872.079834"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dosync-yielding clojure.core/dosync"
                  points="28.496986,-1383.659546 25.142918,-1383.674561 26.496548,-1386.351807"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dosync-yielding java.lang.Thread/sleep"
                  points="-459.589355,-1563.923950 -462.320099,-1565.871460 -459.669769,-1567.276978"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage clojure.core/fn"
                  points="-1256.491577,-615.538940 -1256.990356,-618.855713 -1254.137329,-617.927979"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage clojure.core/concat"
                  points="-1032.468506,-1600.918579 -1031.483643,-1597.712280 -1034.442627,-1598.206909"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage clojure.core/vector"
                  points="-1036.463379,-1074.748413 -1037.767456,-1071.658203 -1039.718140,-1073.937500"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage clojure.core/seq"
                  points="-672.215698,-1655.086182 -672.698120,-1651.766968 -675.160522,-1653.480591"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage clojure.core/list"
                  points="-859.271240,-1870.465210 -858.735352,-1867.154175 -861.598511,-1868.049927"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage clojure.core/apply"
                  points="-300.362152,-1373.321411 -302.464020,-1370.707642 -303.714325,-1373.434692"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-stage r/timed-result"
                  points="-917.125488,-380.955353 -919.545288,-383.277985 -916.719238,-384.284760"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-seqs clojure.core/deref"
                  points="620.535645,1010.465393 623.889648,1010.439026 622.569214,1013.132751"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-seqs time/invoke-at"
                  points="1261.546875,1302.451782 1263.900024,1304.841797 1261.046753,1305.768311"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-seqs time/advance"
                  points="1453.966919,1245.334961 1451.856567,1247.941895 1450.615112,1245.210938"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-seqs Integer/MAX_VALUE"
                  points="1019.341064,1427.972900 1021.580200,1425.475586 1022.682373,1428.265869"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-seqs time/non-realtime-task-queue"
                  points="1380.899902,1289.059570 1378.584717,1291.486450 1377.569336,1288.663452"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="query-seqs time/now"
                  points="1233.882080,1314.016968 1237.227051,1313.768799 1236.087646,1316.543945"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/hash-map"
                  points="498.167328,-1743.355103 498.772644,-1740.056030 495.891296,-1740.891479"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/with-meta"
                  points="903.676331,-1403.497192 902.999207,-1400.212158 900.642029,-1402.067871"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/concat"
                  points="-1023.162903,-1603.714111 -1020.021301,-1602.539307 -1022.217834,-1600.495850"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/vector"
                  points="-1018.715698,-1076.171387 -1015.373474,-1075.889404 -1016.935974,-1073.328369"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/seq"
                  points="-660.233154,-1654.706543 -657.395813,-1652.917847 -659.961731,-1651.363403"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/list"
                  points="-850.023804,-1871.720093 -847.137024,-1870.012329 -849.657898,-1868.386108"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/apply"
                  points="-286.268250,-1367.696411 -283.759308,-1365.470337 -286.543732,-1364.353638"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/let"
                  points="-439.307098,-900.738464 -436.092224,-899.782227 -438.143188,-897.592773"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/identical?"
                  points="-24.003117,-381.232910 -21.111917,-382.933228 -20.908171,-379.940125"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue l/with-exclusive-lock"
                  points="130.749283,271.735260 129.137482,268.793823 132.135345,268.680969"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue user/NodeState"
                  points="174.186615,-601.204407 174.689651,-597.888245 171.835495,-598.812317"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/when"
                  points="-67.133514,-88.924515 -66.940086,-92.273041 -64.338646,-90.778885"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue user/ensure-queue"
                  points="178.058899,-291.040375 175.079193,-292.580322 177.503021,-294.348083"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/case"
                  points="382.563660,-379.345367 379.507813,-377.962677 379.624023,-380.960419"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue user/check-for-drained"
                  points="125.958168,-283.670380 123.926727,-286.339325 126.874451,-286.896881"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue user/SuccessResult"
                  points="79.876495,-89.962990 78.640572,-93.081078 81.629417,-92.822578"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-from-queue clojure.core/instance?"
                  points="28.812056,-99.744682 28.131458,-103.029007 31.031155,-102.259750"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="floor Calendar/getInstance"
                  points="-2529.275391,316.167633 -2526.153564,317.393982 -2528.383545,319.400940"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="floor TimeZone/getTimeZone"
                  points="-2530.424316,338.264679 -2529.199219,335.142303 -2527.191406,337.371307"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/fn"
                  points="-1248.960449,-603.864441 -1245.813232,-605.024231 -1246.144287,-602.042542"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/concat"
                  points="-1028.666748,-1600.949219 -1026.649170,-1598.269775 -1029.599854,-1597.727539"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/vector"
                  points="-1024.335693,-1071.566772 -1021.898315,-1069.262695 -1024.716553,-1068.234375"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/seq"
                  points="-667.613892,-1653.244263 -666.590088,-1650.050293 -669.554810,-1650.508789"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/list"
                  points="-855.829163,-1869.964600 -854.286316,-1866.986450 -857.285950,-1866.943481"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/deref"
                  points="603.185791,997.551575 600.047058,996.369141 602.248474,994.331055"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/apply"
                  points="-296.465698,-1368.754028 -296.882080,-1365.425903 -299.378052,-1367.090210"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation clojure.core/let"
                  points="-455.517242,-900.906738 -456.746216,-897.785889 -458.751282,-900.017456"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation user/result-channel"
                  points="-1364.788452,-247.206085 -1362.965088,-250.021240 -1361.442383,-247.436432"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation pr/probe-result"
                  points="-833.258545,-399.140961 -834.828796,-402.104767 -831.829651,-402.175507"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-instrumentation user/capture-timings"
                  points="-798.949341,-448.604553 -801.350952,-450.946014 -798.517212,-451.930695"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/concat"
                  points="-1037.027222,-1602.801636 -1037.542480,-1599.487427 -1039.987793,-1601.225220"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/vector"
                  points="-1038.122925,-1077.355225 -1040.235107,-1074.749634 -1041.474609,-1077.481567"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/seq"
                  points="-674.079712,-1656.724365 -675.293884,-1653.597778 -677.309509,-1655.819702"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/list"
                  points="-862.263916,-1871.930176 -862.743958,-1868.610596 -865.207581,-1870.322510"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/apply"
                  points="-300.490692,-1373.612915 -302.667389,-1371.060913 -303.838226,-1373.823120"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/let"
                  points="-458.307831,-907.486389 -461.195099,-905.779541 -461.405731,-908.772095"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/="
                  points="-1891.252319,-513.233948 -1890.249268,-516.434570 -1888.090088,-514.351929"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/when-let"
                  points="-1210.474976,-367.689117 -1213.536621,-369.058960 -1211.216064,-370.960327"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/str"
                  points="-1828.127686,-400.883209 -1827.963013,-404.233246 -1825.348755,-402.761444"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup clojure.core/*ns*"
                  points="-1604.102905,-649.731262 -1605.320801,-652.856445 -1602.333496,-652.580688"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="def-query-lookup user/lookups"
                  points="-1101.580322,-462.940155 -1104.879883,-463.542358 -1103.078369,-465.941162"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="periodically t/task-queue"
                  points="-121.142555,1393.973389 -118.559326,1391.833984 -117.881119,1394.756348"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="periodically clojure.core/deref"
                  points="601.556763,1011.800720 599.916809,1014.726563 598.232117,1012.244263"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="periodically t/invoke-repeatedly"
                  points="129.364639,1356.740967 126.820122,1354.555542 129.586151,1353.394165"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message log/warn"
                  points="286.143036,-139.722748 282.800201,-139.997894 284.357452,-142.562073"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/concat"
                  points="-1024.507568,-1602.646240 -1021.587036,-1600.996704 -1024.074829,-1599.320190"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/vector"
                  points="-1019.498352,-1075.051514 -1016.216858,-1074.357300 -1018.084778,-1072.009888"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/seq"
                  points="-662.410461,-1653.694092 -660.028931,-1651.332153 -662.870972,-1650.371704"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/list"
                  points="-851.719421,-1870.825073 -849.173035,-1868.641968 -851.938049,-1867.478149"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/apply"
                  points="-290.037201,-1366.910767 -288.449005,-1363.956421 -291.447662,-1363.867554"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/let"
                  points="-443.051727,-898.126831 -440.501953,-895.947754 -443.265198,-894.779541"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/if-not"
                  points="-225.815796,-362.595490 -228.202087,-364.952545 -225.361938,-365.918732"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message user/error"
                  points="-299.668549,-4.830895 -300.933716,-7.937231 -297.942566,-7.706840"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message clojure.core/and"
                  points="-67.214325,-192.964859 -70.163307,-194.562820 -67.705345,-196.282822"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-message user/try*"
                  points="-199.889389,-168.987854 -201.971573,-171.617401 -199.035049,-172.231323"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-descriptor p/parse-string-query"
                  points="-2270.734619,-1524.692871 -2272.254639,-1527.682739 -2269.254639,-1527.702759"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-descriptor s/parse-struct-query"
                  points="-2259.354248,-1546.049561 -2261.026367,-1543.141968 -2262.683594,-1545.642700"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-sampler t/task-queue"
                  points="-134.339294,1385.743774 -136.477402,1383.159424 -133.554733,1382.482666"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="moving-sampler t/now"
                  points="-159.730148,575.665100 -160.944733,578.791565 -162.960083,576.569275"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-sampler t/hours"
                  points="-299.641693,679.547241 -297.273041,681.921997 -300.120270,682.867065"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-sampler l/asymmetric-lock"
                  points="-430.889343,623.512390 -427.536743,623.611816 -428.957275,626.254150"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-new-probe c/receive-all"
                  points="-965.408936,2327.401367 -964.052673,2324.333740 -962.141052,2326.645752"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="closed-channel g/close"
                  points="-2179.998535,1269.197144 -2176.965332,1270.628662 -2179.323730,1272.482666"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! clojure.core/concat"
                  points="-1021.176575,-1606.186279 -1017.830322,-1605.956421 -1019.352661,-1603.371460"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! clojure.core/vector"
                  points="-1017.397400,-1084.415894 -1014.819946,-1086.562134 -1014.133911,-1083.641724"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! clojure.core/seq"
                  points="-659.956970,-1654.879517 -657.067932,-1653.175537 -659.586731,-1651.545898"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! clojure.core/list"
                  points="-849.537781,-1872.052368 -846.563721,-1870.501587 -848.994019,-1868.742798"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! clojure.core/apply"
                  points="-296.440948,-1368.737549 -296.848328,-1365.408203 -299.348816,-1367.065918"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! clojure.core/let"
                  points="-445.313843,-919.071411 -446.237091,-922.295959 -443.288177,-921.744690"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! user/assoc-record"
                  points="188.304153,-1100.064575 185.043945,-1099.276611 185.717560,-1102.199951"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="set-state! user/set-state"
                  points="119.251816,-817.336792 115.981186,-818.080383 117.884323,-820.399475"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams c/transform-stream"
                  points="1849.928101,1062.683105 1848.212402,1065.565186 1846.593018,1063.039795"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams c/*stream-generator*"
                  points="1957.804810,992.495422 1956.103516,995.386047 1954.471436,992.868835"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams time/with-task-queue"
                  points="1831.088867,1021.817078 1831.785645,1025.098022 1828.882080,1024.343140"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams time/advance"
                  points="1474.036865,1236.324707 1476.171631,1233.737549 1477.387451,1236.480225"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams time/with-period"
                  points="1948.982178,929.005676 1948.163818,932.258423 1945.888916,930.302734"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams time/non-realtime-task-queue"
                  points="1401.196777,1280.637939 1403.268555,1278.000244 1404.550049,1280.712891"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="query-streams c/*query*"
                  points="1712.798218,1041.048584 1716.147583,1040.870850 1714.950073,1043.621338"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock clojure.core/concat"
                  points="-1024.951416,-1602.362305 -1022.113281,-1600.574951 -1024.678467,-1599.019287"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock clojure.core/vector"
                  points="-1017.929504,-1086.076538 -1015.723511,-1088.603149 -1014.584595,-1085.827759"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock clojure.core/seq"
                  points="-668.336182,-1653.380859 -667.528015,-1650.125610 -670.455505,-1650.781128"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock clojure.core/list"
                  points="-854.679321,-1870.041504 -852.833313,-1867.241089 -855.812073,-1866.884399"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock clojure.core/apply"
                  points="-300.588898,-1373.852295 -302.825012,-1371.352417 -303.930542,-1374.141235"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock clojure.core/let"
                  points="-455.694794,-915.408020 -458.949646,-916.217896 -456.999817,-918.497803"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock user/release"
                  points="-746.848511,-1010.446289 -748.770508,-1013.195068 -745.802612,-1013.633179"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-lock user/acquire"
                  points="-777.216675,-863.219421 -778.676147,-866.239319 -775.676392,-866.198914"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timed-result t/task-queue"
                  points="-142.737076,1394.835083 -145.925751,1395.875488 -145.482544,1392.908447"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="timed-result t/invoke-in"
                  points="-247.660248,1376.328735 -244.427017,1375.436401 -245.006485,1378.380005"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer- System/currentTimeMillis"
                  points="-593.879211,1339.315063 -596.827881,1340.913574 -596.927246,1337.915283"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer- Long/MIN_VALUE"
                  points="-906.749023,1402.723633 -906.640076,1399.371338 -904.001770,1400.799561"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer- p/probe-enabled?"
                  points="-851.945068,1372.802734 -855.157349,1371.837891 -853.100464,1369.654053"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer- context/timer"
                  points="-955.692261,1118.260498 -953.308044,1120.619629 -956.148987,1121.583252"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer- ex/probe-enabled?"
                  points="-857.902893,1313.258545 -858.042297,1316.609741 -860.667542,1315.157837"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer- System/nanoTime"
                  points="-916.244995,1475.166504 -916.800598,1471.858643 -913.932190,1472.737305"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/concat"
                  points="-1021.762756,-1618.243042 -1020.220459,-1621.221558 -1018.454590,-1618.796265"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/vector"
                  points="-1022.475708,-1091.350464 -1022.228821,-1094.695313 -1019.651550,-1093.159912"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/seq"
                  points="-660.609436,-1673.741333 -660.470398,-1677.092529 -657.845032,-1675.640869"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/list"
                  points="-845.642517,-1884.703979 -843.331360,-1887.134888 -842.311218,-1884.313599"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/apply"
                  points="-293.300079,-1388.506470 -295.546661,-1390.997070 -292.655548,-1391.798096"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/let"
                  points="-447.544708,-919.256653 -449.101654,-922.227478 -446.102203,-922.284729"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; user/channel"
                  points="-231.581390,-2069.104492 -234.223511,-2067.038330 -234.819641,-2069.978271"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; clojure.core/-&gt;&gt;"
                  points="-372.994934,-2053.275146 -375.358490,-2050.895264 -376.316925,-2053.738037"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sink-&gt;&gt; user/receive-all"
                  points="-172.182510,-1216.135498 -174.626709,-1218.432373 -171.811493,-1219.468994"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-for-message clojure.core/deref"
                  points="612.592712,1016.452209 614.596863,1019.141724 611.643616,1019.669189"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="zip p/run-pipeline"
                  points="545.404541,749.442871 542.171814,748.548889 544.180115,746.320251"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="zip l/lock"
                  points="205.738220,439.068298 208.945862,440.048645 206.878540,442.222595"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="zip clojure.core/deref"
                  points="604.612732,996.434021 601.710815,994.752197 604.217041,993.103394"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="zip r/result-channel"
                  points="327.850922,834.328735 326.017181,831.520264 328.997467,831.176636"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="zip l/with-exclusive-lock"
                  points="137.312897,291.847809 140.233795,293.496582 137.746429,295.173767"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="zip System/arraycopy"
                  points="216.898544,368.512390 219.567474,370.543854 216.874756,371.866425"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="partition-every-op t/period"
                  points="14.907997,1659.428223 12.460091,1657.135132 15.273636,1656.094116"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample sample/sampler"
                  points="-2458.384521,-28.112991 -2458.652100,-31.456400 -2455.870361,-30.333128"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace clojure.core/concat"
                  points="-1020.054138,-1614.703857 -1017.563293,-1616.950073 -1016.762634,-1614.058960"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace clojure.core/seq"
                  points="-676.919861,-1663.590942 -679.845032,-1661.949707 -679.987976,-1664.946289"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace clojure.core/list"
                  points="-857.057739,-1870.015747 -855.856934,-1866.884033 -858.842651,-1867.176025"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="trace user/trace*"
                  points="-744.394409,-1337.805786 -746.944885,-1339.984009 -744.182068,-1341.153198"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipelined-client lock/lock"
                  points="343.514740,21.041189 346.408386,19.345026 346.607849,22.338385"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipelined-client r/result"
                  points="387.388702,41.550491 384.110687,40.840160 385.990143,38.501873"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pipelined-client lock/with-exclusive-lock"
                  points="357.366364,3.269539 359.390503,5.944016 356.441284,6.493545"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="cancel-callback g/cancel"
                  points="1233.411743,-449.954163 1230.188721,-449.025604 1230.735107,-451.975433"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dispatch-consumption r/success-result"
                  points="1146.146973,772.458130 1148.918701,770.569214 1149.321045,773.542114"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dispatch-consumption r/error!"
                  points="1213.290161,723.879395 1215.410889,726.477905 1212.483643,727.135132"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dispatch-consumption r/error-result"
                  points="1258.395264,709.368103 1257.924194,712.688965 1255.455933,710.983765"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dispatch-consumption r/success!"
                  points="1215.170410,780.650940 1214.788574,777.318665 1217.607178,778.346008"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="drop-while* p/run-pipeline"
                  points="558.723999,747.085693 558.802307,743.732544 561.453552,745.136475"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/hash-map"
                  points="496.057068,-1744.212402 495.969971,-1740.859375 493.322449,-1742.270264"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/with-meta"
                  points="901.101318,-1406.393311 899.326965,-1403.546875 897.759583,-1406.104980"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/concat"
                  points="-1021.617798,-1605.497070 -1018.297913,-1605.019165 -1020.008240,-1602.554321"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/vector"
                  points="-1017.311218,-1079.785522 -1014.078796,-1080.680786 -1014.655579,-1077.736694"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/seq"
                  points="-658.647095,-1655.873291 -655.536377,-1654.619019 -657.784058,-1652.632202"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/list"
                  points="-848.709229,-1872.715210 -845.599609,-1871.458130 -847.849121,-1869.473267"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/apply"
                  points="-284.429138,-1368.643677 -281.547791,-1366.926758 -284.073853,-1365.308350"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="ensure-queue q/queue"
                  points="73.575851,-223.532486 71.889297,-226.431717 74.883301,-226.621262"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue clojure.core/let"
                  points="-436.362701,-907.477905 -433.263794,-908.761169 -433.476746,-905.768738"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue q/transactional-queue"
                  points="-6.724068,-266.042297 -8.028419,-269.132385 -5.034604,-268.939819"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue user/NodeState"
                  points="172.250015,-621.294983 169.485260,-623.193970 172.110352,-624.646118"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="ensure-queue user/set-state!"
                  points="313.852234,-821.207397 310.626740,-820.287476 311.181000,-823.235840"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ExponentiallyDecayingSampler l/with-lock"
                  points="-29.711094,494.391937 -30.797234,497.565308 -32.901478,495.427063"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ExponentiallyDecayingSampler t/now"
                  points="-141.773148,563.296692 -139.776962,560.601318 -138.419113,563.276367"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ExponentiallyDecayingSampler l/with-exclusive-lock"
                  points="124.360588,291.371857 123.684120,294.657013 121.326561,292.801788"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ExponentiallyDecayingSampler Math/exp"
                  points="9.691702,1167.870239 7.901631,1165.033691 10.886847,1164.736328"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="render-propagation g/render-propagation"
                  points="1448.153320,-187.242950 1451.477783,-187.688034 1450.504150,-184.850449"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="render-propagation c/receiver-node"
                  points="1476.808105,-168.829285 1473.578613,-169.735336 1475.595215,-171.956436"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-&gt;lazy-seq g/edge"
                  points="1052.706909,-149.840118 1052.583984,-146.488281 1049.951660,-147.927368"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-&gt;lazy-seq g/terminal-propagator"
                  points="1029.985718,-73.866020 1028.654297,-76.944580 1031.649658,-76.778229"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-&gt;lazy-seq g/consume"
                  points="1010.957397,-108.358040 1013.643799,-110.366379 1014.175903,-107.413940"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router c/*stream-generator*"
                  points="1971.281006,976.364136 1971.055298,973.017639 1973.822876,974.175720"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router c/distributable-chain"
                  points="1942.067139,667.139526 1945.225830,668.268005 1943.059570,670.343445"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router c/non-distributable-chain"
                  points="1898.256104,617.008057 1901.399170,618.178955 1899.205322,620.225098"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router cache/inner-cache"
                  points="2010.804321,768.773926 2014.121582,768.277954 2013.191406,771.130127"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router q/parse-descriptor"
                  points="2017.547485,815.081909 2018.710693,811.935974 2020.762207,814.124939"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router cache/subscribe"
                  points="2060.051514,743.133667 2060.954346,746.363953 2058.009033,745.794128"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router time/period"
                  points="2067.670898,822.906921 2065.212891,820.624695 2068.021973,819.571228"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="aggregating-trace-router time/with-period"
                  points="1962.439087,911.637390 1962.922485,908.318359 1965.384399,910.032715"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EnqueuedTimer Long/MIN_VALUE"
                  points="-920.217773,1419.693237 -921.468079,1422.805542 -923.457825,1420.560425"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EnqueuedTimer ex/trace-error"
                  points="-975.149658,1438.330200 -973.763855,1441.384644 -976.761780,1441.271362"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EnqueuedTimer System/nanoTime"
                  points="-930.042053,1482.658325 -933.338928,1483.275269 -932.513733,1480.390991"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EnqueuedTimer p/error-probe-channel"
                  points="-959.297607,1521.420044 -961.656555,1519.035645 -958.805481,1518.102295"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;EnqueuedTimer ex/trace-return"
                  points="-995.866516,1454.545288 -992.570801,1455.168213 -994.387451,1457.555664"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-fn-bodies clojure.core/concat"
                  points="-1025.395752,-1621.429321 -1025.278809,-1624.781372 -1022.643982,-1623.347046"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-fn-bodies clojure.core/seq"
                  points="-675.723755,-1669.127808 -679.077759,-1669.159790 -677.710571,-1671.830200"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transform-fn-bodies clojure.core/list"
                  points="-863.283569,-1872.731812 -864.151001,-1869.491821 -866.395996,-1871.481812"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="enqueue u/enqueue"
                  points="467.236633,260.334503 464.642395,258.208496 467.380920,256.983521"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="error u/error"
                  points="483.777710,346.649170 480.424835,346.740479 481.692963,344.021667"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enable-unchecked-math clojure.core/concat"
                  points="-1021.327759,-1617.598999 -1019.579041,-1620.461182 -1017.988831,-1617.917236"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enable-unchecked-math clojure.core/seq"
                  points="-674.870850,-1670.526245 -678.182861,-1671.055908 -676.434326,-1673.493652"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enable-unchecked-math clojure.core/list"
                  points="-851.216125,-1871.052002 -848.563416,-1868.999390 -851.266541,-1867.698120"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enable-unchecked-math clojure.core/*unchecked-math*"
                  points="-642.093933,-1430.195435 -644.730835,-1432.268311 -642.017822,-1433.548828"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="result-channel l/lock"
                  points="205.729355,423.898590 206.865982,420.742950 208.935837,422.914520"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/hash-map"
                  points="492.893951,-1746.743286 491.599060,-1743.649292 489.641785,-1745.922729"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/with-meta"
                  points="900.011902,-1415.517090 896.696228,-1415.010376 897.617249,-1417.865601"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/concat"
                  points="-1019.655457,-1611.683228 -1016.644043,-1613.160156 -1016.667114,-1610.160156"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/vector"
                  points="-1017.837585,-1085.845215 -1015.575073,-1088.321411 -1014.499268,-1085.520874"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/seq"
                  points="-654.954407,-1663.418701 -651.865479,-1664.725708 -652.055420,-1661.731812"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/list"
                  points="-845.283447,-1878.426880 -842.018433,-1879.194702 -842.710205,-1876.275513"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/apply"
                  points="-280.025391,-1381.665405 -277.718719,-1384.100342 -276.693390,-1381.281006"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/let"
                  points="-439.152832,-915.610718 -437.923920,-918.731567 -435.918793,-916.500122"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context clojure.core/if-let"
                  points="302.743683,-1225.772095 301.415436,-1228.852051 304.410675,-1228.682617"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context user/stacks"
                  points="365.277069,-1020.926636 363.567963,-1023.812622 366.560394,-1024.025513"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-context user/LinkedList"
                  points="415.180725,-1098.804077 413.169128,-1101.488037 416.120911,-1102.023682"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="variance clojure.core/deref"
                  points="605.821167,1015.502869 605.849060,1018.856873 603.154724,1017.537537"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="variance var/create-variance"
                  points="455.809540,1321.708252 455.788910,1318.354248 458.480377,1319.679443"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="variance var/variance"
                  points="457.213745,1282.543457 460.498474,1283.222046 458.641663,1285.578491"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="node-data q/messages"
                  points="1637.987427,376.923401 1634.648682,377.244690 1635.727051,374.445251"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="idle-result r/result-callback"
                  points="-161.900116,1042.955322 -161.698807,1046.303345 -164.457779,1045.125122"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="idle-result System/currentTimeMillis"
                  points="-572.925293,1334.281616 -570.845642,1331.650024 -569.572327,1334.366333"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="idle-result t/task-queue"
                  points="-135.577759,1386.108276 -138.003937,1383.792358 -135.180695,1382.777710"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="idle-result r/result-channel"
                  points="319.638855,850.849426 317.818298,853.666382 316.292908,851.083130"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="idle-result r/subscribe"
                  points="-216.258636,1007.809326 -214.726761,1010.793152 -217.726578,1010.825134"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="merge-group-by t/minutes"
                  points="36.123692,1798.273926 38.541214,1800.598877 35.714211,1801.602783"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="merge-group-by t/period"
                  points="20.721432,1680.561890 22.740879,1683.239868 19.790676,1683.784302"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="merge-group-by q/transform-stream"
                  points="21.799534,1856.996582 23.223652,1853.959839 25.083408,1856.313843"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="merge-group-by q/periodic-chain?"
                  points="49.133427,1856.567993 47.652878,1853.558228 50.652817,1853.577759"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="analyze-timings stats/sum"
                  points="-2232.312012,930.732544 -2230.029785,933.190552 -2232.909180,934.033081"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="analyze-timings stats/moving-quantiles"
                  points="-2211.185547,944.076355 -2213.941406,945.988159 -2214.368652,943.018677"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="analyze-timings stats/rate"
                  points="-2229.512207,962.545105 -2230.669434,959.396973 -2227.687988,959.730469"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period clojure.core/concat"
                  points="-1030.294434,-1600.773926 -1028.696777,-1597.824829 -1031.695068,-1597.726440"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period clojure.core/vector"
                  points="-1027.876099,-1092.898071 -1029.312988,-1095.928833 -1026.313721,-1095.866089"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period clojure.core/seq"
                  points="-674.278564,-1656.949707 -675.577637,-1653.857422 -677.531860,-1656.133545"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period clojure.core/list"
                  points="-859.322083,-1870.481323 -858.802307,-1867.167603 -861.661072,-1868.077271"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period clojure.core/apply"
                  points="-301.359009,-1377.609009 -304.317413,-1376.028442 -304.398407,-1379.027466"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period clojure.core/binding"
                  points="-1015.981750,-1198.518188 -1017.599854,-1201.456177 -1014.602173,-1201.575317"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-period lamina.time/*period*"
                  points="-835.892517,-812.721069 -838.282227,-815.074646 -835.443481,-816.044983"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-&gt;lazy-seq- clojure.core/deref"
                  points="617.166321,1014.492065 620.150452,1016.023315 617.731750,1017.798096"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="topic-channel-cache clojure.core/deref"
                  points="608.102844,994.924622 605.946899,992.355225 608.864746,991.658203"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="format-duration str/trim"
                  points="2007.260620,-1533.666016 2007.092896,-1537.015991 2009.839966,-1535.810181"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* clojure.core/concat"
                  points="-1025.808838,-1601.893188 -1023.140625,-1599.860962 -1025.833740,-1598.539185"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* clojure.core/vector"
                  points="-1018.489990,-1076.558838 -1015.139099,-1076.413330 -1016.595886,-1073.790771"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* clojure.core/seq"
                  points="-666.047729,-1653.115601 -664.579285,-1650.099976 -667.579163,-1650.131470"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* clojure.core/list"
                  points="-854.010376,-1870.142578 -851.995667,-1867.460938 -854.946838,-1866.921875"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* clojure.core/apply"
                  points="-297.122528,-1369.227783 -297.782654,-1365.939331 -300.149414,-1367.782837"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* clojure.core/let"
                  points="-458.278778,-907.148315 -461.112061,-905.353210 -461.414856,-908.337830"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="trace* user/enqueue"
                  points="-957.400330,-31.181221 -957.879517,-34.500912 -955.032104,-33.556408"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* user/probe-channel"
                  points="-322.683502,-781.470642 -325.985474,-780.881714 -325.135803,-783.758911"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace* user/probe-enabled?"
                  points="-814.625854,-151.861115 -815.534485,-155.089798 -812.588074,-154.525253"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/concat"
                  points="-1020.683167,-1616.411255 -1018.596680,-1619.037476 -1017.330322,-1616.317749"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/vector"
                  points="-1021.503967,-1090.698975 -1020.903198,-1093.998901 -1018.503662,-1092.198364"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/seq"
                  points="-657.897400,-1671.627563 -656.730530,-1674.772217 -654.681580,-1672.580811"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/list"
                  points="-844.995361,-1881.391968 -842.056030,-1883.007813 -841.939209,-1880.010010"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/apply"
                  points="-292.938477,-1388.600098 -295.099182,-1391.165527 -292.182556,-1391.867920"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/let"
                  points="-446.983002,-919.253052 -448.386261,-922.299500 -445.387787,-922.203552"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; user/channel"
                  points="-229.022995,-2063.983154 -230.268997,-2060.869141 -232.261856,-2063.111328"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; clojure.core/-&gt;&gt;"
                  points="-366.061066,-2046.357544 -365.590271,-2043.036621 -368.435303,-2043.988281"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join-&gt;&gt; user/join"
                  points="-248.546371,-1212.537109 -250.714096,-1215.096558 -247.799423,-1215.807007"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="filter* g/downstream-node"
                  points="501.686768,-2662.275391 504.887207,-2661.271729 502.804138,-2659.113037"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Timer System/nanoTime"
                  points="-923.476318,1495.927246 -923.173157,1499.267578 -925.966736,1498.174072"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Timer p/error-probe-channel"
                  points="-946.684814,1525.829224 -945.002625,1522.927490 -943.354065,1525.433838"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="clojure-fn str/replace"
                  points="-1154.173584,2232.336426 -1155.962158,2235.174072 -1157.516602,2232.608154"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="view-image clojure.core/deref"
                  points="620.269287,1000.272461 622.160706,997.502563 623.620056,1000.123657"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="view-image java.awt.EventQueue/invokeLater"
                  points="715.874756,941.239319 715.082092,944.498413 712.791931,942.560669"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DistilledTiming clojure.core/deref"
                  points="620.430603,1010.674072 623.784424,1010.718872 622.406982,1013.384033"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-seq clojure.core/concat"
                  points="-1020.540527,-1616.091675 -1018.371582,-1618.650146 -1017.192383,-1615.891602"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-seq clojure.core/seq"
                  points="-676.662048,-1666.538574 -679.918823,-1665.736450 -679.257813,-1668.662720"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-seq clojure.core/list"
                  points="-854.098694,-1870.126831 -852.105957,-1867.428711 -855.061401,-1866.913818"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-seq user/channel-&gt;seq"
                  points="-728.071350,-1454.700806 -730.564697,-1456.944336 -727.772583,-1458.041504"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;sorted-double-array Arrays/sort"
                  points="2587.249756,-382.025604 2588.881104,-384.956085 2590.572998,-382.478607"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph r/success-result"
                  points="1142.906738,766.039490 1143.919312,762.841919 1146.072388,764.931030"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph q/messages"
                  points="1648.349976,369.878052 1646.876709,366.864838 1649.876709,366.891510"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph l/release-all"
                  points="1609.188599,230.904755 1612.505249,230.405212 1611.578247,233.258392"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph g/propagate"
                  points="1557.448120,-27.272078 1559.832397,-24.912973 1556.991333,-23.949217"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="sample-graph g/queue"
                  points="1609.968750,416.944427 1609.174316,413.685760 1612.099121,414.353729"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph l/acquire-all"
                  points="1666.977051,135.925247 1667.978027,139.126511 1665.016602,138.646774"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="sample-graph g/node?"
                  points="1476.929443,279.602386 1479.564331,277.526978 1480.170776,280.465088"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph g/read-node"
                  points="1600.382935,182.040802 1603.421631,183.460632 1601.070313,185.323700"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sample-graph r/success-value"
                  points="1429.343506,179.654343 1432.643799,179.056213 1431.802246,181.935730"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="invoke-repeatedly clojure.core/deref"
                  points="613.987854,995.139526 613.466248,991.826233 616.325500,992.734192"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel* clojure.core/concat"
                  points="-1020.622925,-1607.256470 -1017.271667,-1607.394043 -1018.502136,-1604.657959"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel* clojure.core/vector"
                  points="-1018.701416,-1087.606201 -1016.914612,-1090.444702 -1015.358459,-1087.879761"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel* clojure.core/seq"
                  points="-661.040466,-1654.262573 -658.362793,-1652.242676 -661.049805,-1650.908447"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel* clojure.core/list"
                  points="-849.909790,-1871.794678 -847.002014,-1870.122803 -849.502625,-1868.465332"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="channel* g/node*"
                  points="714.144592,-545.723267 710.819214,-546.161438 712.499878,-548.646423"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel* clojure.core/apply"
                  points="-301.357300,-1378.259888 -304.404022,-1376.857178 -304.307465,-1379.855713"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel* clojure.core/let"
                  points="-449.159576,-919.106262 -451.136383,-921.815918 -448.177948,-922.313477"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer clojure.core/concat"
                  points="-1024.845337,-1621.108643 -1024.534546,-1624.448242 -1021.987122,-1622.863770"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer clojure.core/seq"
                  points="-676.668091,-1666.511597 -679.922913,-1665.701294 -679.269226,-1668.629272"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer clojure.core/list"
                  points="-862.107483,-1871.823486 -862.530334,-1868.496216 -865.023010,-1870.165405"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="enqueued-timer user/enqueued-timer-"
                  points="-859.258179,-1421.463257 -861.600098,-1423.864380 -858.742432,-1424.777466"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="group-by-op t/minutes"
                  points="26.861038,1797.387085 26.631462,1800.733398 24.046303,1799.211182"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="group-by-op t/period"
                  points="17.892521,1680.712891 19.161041,1683.817993 16.169655,1683.590698"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="group-by-op q/transform-stream"
                  points="10.866325,1853.059204 8.771750,1850.439453 11.705329,1849.811768"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="group-by-op q/periodic-chain?"
                  points="40.597984,1860.542358 37.331543,1859.780518 39.247566,1857.472168"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="deftoken clojure.core/concat"
                  points="-1019.785950,-1610.076782 -1016.591003,-1611.097656 -1017.052307,-1608.133301"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="deftoken clojure.core/seq"
                  points="-676.489197,-1661.024170 -678.946899,-1658.741577 -679.789795,-1661.620728"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="deftoken clojure.core/list"
                  points="-857.986816,-1870.146851 -857.057251,-1866.924072 -860.007202,-1867.469482"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="deftoken user/token"
                  points="-875.719788,-1291.026001 -877.541809,-1293.842041 -874.560120,-1294.173340"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="receive g/receive"
                  points="908.990234,2441.614990 906.812683,2439.063721 909.724670,2438.342041"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sum-op lamina.stats/sum"
                  points="2505.881836,-759.147217 2502.824707,-757.767334 2502.943848,-760.765015"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="drained-result r/result-channel"
                  points="318.840057,849.194824 316.576019,851.669556 315.501862,848.868408"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="drained-result r/success"
                  points="151.599518,965.558777 152.234207,962.265259 154.615128,964.090454"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="drained-result g/drained-result"
                  points="198.254074,877.668213 201.227234,879.220703 198.795959,880.978271"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="ground g/ground"
                  points="2143.946777,-959.581726 2146.109131,-962.145630 2147.295166,-959.390137"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-idle System/currentTimeMillis"
                  points="-571.913147,1338.167480 -569.027588,1336.457642 -568.813965,1339.450073"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="check-idle t/invoke-in"
                  points="-266.835114,1367.080688 -270.092468,1366.280884 -268.149719,1363.994995"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="check-idle r/success"
                  points="136.070679,980.839722 134.554016,983.831360 132.767395,981.421326"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="closed? g/closed?"
                  points="1418.935059,866.143188 1420.554932,863.206116 1422.256592,865.676697"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="closed? q/closed?"
                  points="1443.886475,844.305420 1443.021362,847.546021 1440.775024,845.557617"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="thread-factory log/error"
                  points="841.243225,334.291840 838.790649,336.579803 837.941284,333.702545"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;SympatheticProbeChannel g/propagate"
                  points="1550.024902,-47.978451 1547.561035,-50.254288 1550.367188,-51.315033"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;SympatheticProbeChannel c/receiver-node"
                  points="1491.333618,-152.475372 1494.295776,-150.901993 1491.852173,-149.161606"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;SympatheticProbeChannel c/split-receiver"
                  points="1517.302002,-88.537361 1519.450928,-91.112671 1520.651611,-88.363434"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="closed-result r/result-channel"
                  points="319.372681,850.371887 317.414398,853.094971 316.019257,850.439087"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="closed-result r/success"
                  points="149.246674,964.180908 149.051788,960.832458 151.808502,962.015930"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="closed-result g/closed-result"
                  points="149.027237,921.885681 152.315277,922.548096 150.470123,924.913574"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="subscribe r/result-callback"
                  points="-157.427292,1021.840149 -158.885483,1018.819641 -155.885757,1018.861267"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="subscribe r/result-channel"
                  points="318.128418,844.634155 315.048370,845.962097 315.218048,842.966858"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="subscribe r/subscribe"
                  points="-212.786163,986.412170 -213.225037,983.086914 -210.389282,984.065918"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="subscribe context/with-context"
                  points="-390.725830,558.023926 -387.598083,559.235229 -389.818237,561.252930"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="subscribe context/context"
                  points="-152.344604,787.145996 -151.067719,790.247498 -154.059692,790.028381"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-realized r/result-callback"
                  points="-168.567703,1032.316895 -171.635529,1033.672729 -171.493103,1030.676147"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-realized r/subscribe"
                  points="-211.586655,1006.712646 -208.930145,1008.760315 -211.630890,1010.066467"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="message-str str/replace"
                  points="-1138.805420,2217.391113 -1138.440552,2214.056885 -1135.919067,2215.682373"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sum Double/longBitsToDouble"
                  points="1491.389404,-2108.503418 1494.728882,-2108.815430 1493.642700,-2106.019043"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="sum Double/doubleToRawLongBits"
                  points="1507.971313,-2090.336914 1505.709717,-2092.813965 1508.595947,-2093.632324"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="transactional? g/transactional?"
                  points="592.625000,2538.659668 590.643982,2535.952881 593.601624,2535.450928"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="reductions* p/run-pipeline"
                  points="557.291016,767.160461 559.716003,769.477600 556.892273,770.490784"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="reductions* clojure.core/deref"
                  points="608.640076,994.810364 606.615051,992.136597 609.564148,991.586060"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="rate-op lamina.stats/rate"
                  points="2446.863525,499.293823 2449.876221,500.768219 2447.491455,502.588593"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="drain-queue q/drain"
                  points="963.743164,-447.346649 961.155762,-445.212372 960.483276,-448.136017"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-redirect context/timer"
                  points="-957.180908,1097.035278 -958.097046,1093.808716 -955.149292,1094.366333"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-redirect t/mark-return"
                  points="-928.837708,963.314941 -928.163147,966.600525 -931.061462,965.825867"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="instrument clojure.core/unquote"
                  points="-992.507751,-2667.365723 -990.218079,-2669.816650 -989.173157,-2667.004639"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dependent-topic-channel-cache clojure.core/deref"
                  points="619.020020,998.476135 620.325745,995.386658 622.275085,997.667053"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/concat"
                  points="-1022.486267,-1604.401245 -1019.253784,-1603.506104 -1021.262939,-1601.278320"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/vector"
                  points="-1017.115723,-1082.364014 -1014.181641,-1083.989136 -1014.055176,-1080.991821"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/seq"
                  points="-662.279053,-1653.739380 -659.867859,-1651.407837 -662.697571,-1650.411499"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/list"
                  points="-851.077698,-1871.119751 -848.396484,-1869.104614 -851.081177,-1867.765747"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/apply"
                  points="-296.400208,-1368.710693 -296.792816,-1365.379639 -299.300629,-1367.026123"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/let"
                  points="-448.548828,-919.191467 -450.370728,-922.007629 -447.389038,-922.338684"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/identical?"
                  points="-40.630108,-389.922485 -43.458485,-391.725342 -40.884853,-393.266907"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="handle-request clojure.core/cond"
                  points="-213.667526,-687.954102 -216.513077,-689.729736 -213.954361,-691.295898"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-on-idle r/result-callback"
                  points="-162.182068,1042.830200 -162.074722,1046.182617 -164.799576,1044.927490"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-on-idle t/task-queue"
                  points="-133.722046,1385.619385 -135.708801,1382.916992 -132.752197,1382.408447"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-on-idle r/subscribe"
                  points="-212.838959,1007.225830 -210.453995,1009.584167 -213.294693,1010.548767"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-cache log/error"
                  points="847.878662,341.457611 848.212830,344.795013 845.409241,343.727386"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="channel-cache clojure.core/deref"
                  points="614.266113,995.231995 613.832947,991.905945 616.667053,992.889832"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="watch-channel clojure.core/deref"
                  points="619.521851,999.108826 621.050720,996.123474 622.827454,998.540710"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="join r/result-callback"
                  points="-147.121475,1036.247559 -143.804352,1035.750854 -144.733917,1038.603149"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="join u/error"
                  points="490.425934,361.785736 490.950317,365.098602 488.090271,364.192963"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="join r/subscribe"
                  points="-206.036301,1000.564026 -202.704498,1000.177979 -203.728333,1002.997803"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="join g/join"
                  points="856.291016,1171.356445 853.267517,1172.808350 853.315247,1169.808838"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="join ch/join"
                  points="226.161789,1138.251953 228.803391,1140.318848 226.093246,1141.605469"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="join r/siphon-result"
                  points="436.775299,1444.454468 433.820374,1442.867554 436.271912,1441.138306"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-average t/minutes"
                  points="37.069023,1777.928589 36.970005,1774.575928 39.691723,1775.837646"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-average t/period"
                  points="28.827196,1674.098267 32.175907,1673.908081 30.988506,1676.663208"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-average Math/exp"
                  points="12.159140,1189.729492 14.022819,1192.518188 11.046409,1192.893677"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-average avg/moving-average"
                  points="125.694069,1691.149170 122.796326,1692.838257 122.604141,1689.844360"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="reduce* r/success-result"
                  points="1124.286743,774.874451 1121.426025,776.625488 1121.169434,773.636475"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="reduce* p/run-pipeline"
                  points="562.855347,762.713928 566.191589,763.059570 564.580505,765.590332"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="reduce* clojure.core/deref"
                  points="612.694275,994.813599 611.775391,991.587830 614.723511,992.143005"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="reduce* r/result-channel"
                  points="340.063995,844.242554 342.912994,842.472534 343.189484,845.459717"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distribute-aggregate t/task-queue"
                  points="-120.883453,1397.211426 -117.788017,1395.919922 -117.992912,1398.912842"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distribute-aggregate p/run-pipeline"
                  points="548.000610,766.289124 547.773132,769.635437 545.187073,768.114929"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distribute-aggregate clojure.core/deref"
                  points="602.578308,1013.087463 601.392395,1016.224915 599.356750,1014.021179"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distribute-aggregate t/invoke-repeatedly"
                  points="139.542969,1376.154541 142.421677,1377.875854 139.893112,1379.490356"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distribute-aggregate t/period"
                  points="24.246666,1660.230469 24.455072,1656.882813 27.049807,1658.388672"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distribute-aggregate dist/facets"
                  points="186.573761,1401.939453 184.988312,1404.895264 183.257904,1402.444580"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="priority Math/exp"
                  points="10.402036,1167.822632 8.799198,1164.876343 11.797403,1164.772583"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expiring-result t/task-queue"
                  points="-142.786942,1395.213867 -145.937576,1396.364380 -145.597672,1393.383667"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="expiring-result t/invoke-in"
                  points="-248.038483,1377.744629 -244.715317,1377.290039 -245.680954,1380.130371"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-event r/result-callback"
                  points="-163.255753,1023.416443 -166.088562,1021.620544 -163.518738,1020.072693"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="on-event r/subscribe"
                  points="-205.406265,997.627136 -202.303116,996.354126 -202.525986,999.345825"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="dummy-timer p/error-probe-channel"
                  points="-958.175659,1542.630737 -957.336304,1545.878174 -960.269897,1545.250732"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="read-channel g/read-node"
                  points="1583.376099,169.240921 1580.031128,169.488983 1581.170532,166.713837"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="parse-lookup str/split"
                  points="-2631.759277,-705.712036 -2634.778320,-707.173340 -2632.401855,-709.004028"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Message u/enqueue"
                  points="475.351715,280.761780 477.756226,283.100220 474.923645,284.088440"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="-&gt;Message u/error"
                  points="491.247803,340.586548 489.105530,338.005737 492.027100,337.324219"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="parser str/trim"
                  points="1996.955444,-1514.299561 1996.618164,-1510.962524 1994.083496,-1512.567261"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="view-propagation core/view-image"
                  points="2346.023926,1103.481201 2344.560547,1106.499146 2342.731445,1104.121216"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="view-propagation g/node-frame"
                  points="2343.025146,1125.503296 2340.020996,1124.011597 2342.416016,1122.204956"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="release-named-channel cache/release"
                  points="-2455.095703,-753.405701 -2452.463379,-751.327026 -2455.179199,-750.052612"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="receive-in-order log/error"
                  points="842.033691,336.252289 840.064026,338.967133 838.679993,336.305450"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="receive-in-order p/run-pipeline"
                  points="558.800476,747.126587 558.905273,743.774170 561.545288,745.198975"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="receive-in-order p/complete"
                  points="751.271851,358.612183 753.429993,361.179749 750.512634,361.879211"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="drained? q/drained?"
                  points="710.263000,-937.787781 710.935547,-934.501770 708.037720,-935.278137"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="drained? g/drained?"
                  points="698.748230,-907.821838 698.877686,-911.173462 701.507202,-909.729248"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="error-result r/result-channel"
                  points="323.038757,836.084106 320.131989,834.410583 322.633514,832.754578"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="close-and-clear l/with-exclusive-lock"
                  points="126.793732,272.632507 124.225487,270.475159 126.978661,269.283508"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-accumulate t/task-queue"
                  points="-126.801605,1406.229248 -124.090508,1408.204102 -126.754799,1409.583008"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="bridge-accumulate t/period"
                  points="13.165627,1660.253052 10.355011,1658.422607 12.943592,1656.906250"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="add Calendar/getInstance"
                  points="-2544.807373,315.353790 -2546.032471,318.476135 -2548.040283,316.247131"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="add TimeZone/getTimeZone"
                  points="-2545.956299,337.450836 -2549.078125,336.224457 -2546.848145,334.217499"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="drop* p/run-pipeline"
                  points="547.267822,747.795288 544.318542,746.197876 546.776184,744.477417"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="partition- p/run-pipeline"
                  points="546.523560,765.248474 545.751221,768.512451 543.448975,766.588989"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="partition- clojure.core/deref"
                  points="605.080811,996.142639 602.266724,994.317566 604.852417,992.796326"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="partition- r/result-channel"
                  points="339.989868,843.629639 342.735046,841.702454 343.178711,844.669495"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-error r/result-callback"
                  points="-161.860458,1022.706055 -164.409592,1020.526184 -161.646042,1019.358826"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="on-error r/subscribe"
                  points="-210.962555,987.234131 -210.791977,983.884399 -208.180405,985.360718"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="on-error g/on-error"
                  points="-190.440857,934.211243 -189.104248,937.287537 -192.099915,937.126282"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="persistent-connection clojure.core/deref"
                  points="599.667114,1005.190308 596.610352,1006.570984 596.728516,1003.573303"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="num-cores Runtime/getRuntime"
                  points="-348.402313,2504.567139 -351.521484,2503.333740 -349.287231,2501.331787"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="trace-descriptor r/success-value"
                  points="1407.955688,174.639404 1404.739136,175.590073 1405.265259,172.636551"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="last* p/run-pipeline"
                  points="545.821655,764.608643 544.770752,767.793884 542.642944,765.679016"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="last* clojure.core/deref"
                  points="603.090027,997.641296 599.937378,996.496338 602.114380,994.432251"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="last* r/result-channel"
                  points="340.106689,845.557068 343.146606,844.139648 343.064575,847.138550"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="view-graph core/view-image"
                  points="2361.367432,1105.557129 2364.371582,1107.048828 2361.976563,1108.855469"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="view-graph g/node-frame"
                  points="2358.368896,1127.579346 2359.832275,1124.561401 2361.661377,1126.939575"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ResultChannel l/with-exclusive-lock"
                  points="128.140518,272.150909 125.873909,269.678558 128.758423,268.854218"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ResultChannel codes/error-code-&gt;exception"
                  points="102.941628,182.498169 105.152306,185.020645 102.250053,185.780197"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;SplicedChannel g/propagate"
                  points="1546.959717,-29.166489 1546.225098,-25.893806 1543.900879,-27.790520"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="split-node l/asymmetric-lock"
                  points="-451.482880,619.747009 -454.260132,621.627747 -454.653748,618.653625"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="with-timeout t/invoke-in"
                  points="-267.501984,1367.949585 -270.822754,1367.477783 -269.117004,1365.010010"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="print-timing-result t/format-timing"
                  points="-1224.449097,2507.510010 -1227.661987,2506.547119 -1225.606323,2504.362061"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="force-error u/error"
                  points="489.479858,361.437714 489.698730,364.784668 486.933594,363.620972"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="in-transaction? clojure.lang.LockingTransaction/isRunning"
                  points="-1841.232300,-2004.983276 -1842.199585,-2008.194824 -1839.243286,-2007.684082"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="distributing-propagator l/asymmetric-lock"
                  points="-442.095032,607.408813 -443.994446,604.644348 -441.023132,604.230652"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="escape-string str/replace"
                  points="-1151.781250,2218.164063 -1154.849854,2216.810303 -1152.539307,2214.896729"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DrainedQueue r/claim"
                  points="1224.277100,640.382568 1227.603271,640.815002 1225.926758,643.302917"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DrainedQueue r/error!"
                  points="1217.818970,704.610840 1218.547363,701.336792 1220.875244,703.229126"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;DrainedQueue r/error-result"
                  points="1261.778931,689.698364 1259.548462,687.193359 1262.444702,686.411011"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-closed g/on-closed"
                  points="887.459351,-2457.959717 890.790894,-2458.347656 889.768799,-2455.527344"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="close g/close"
                  points="-2197.448486,1257.804321 -2200.727783,1258.508301 -2199.979248,1255.603271"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="connect g/connect"
                  points="-2472.332275,-1192.192627 -2474.658691,-1194.608643 -2471.795410,-1195.503418"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="token Pattern/compile"
                  points="2053.386963,-1339.609741 2053.943848,-1336.302246 2051.075195,-1337.179688"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="queue l/lock"
                  points="186.997681,429.247101 183.755005,430.104462 184.366180,427.167389"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="mimic g/mimic"
                  points="-1775.041504,1710.690552 -1776.641235,1713.638672 -1778.359741,1711.179688"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="indent str/split-lines"
                  points="1993.861084,-1393.257568 1991.808960,-1390.604614 1990.507446,-1393.307495"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="on-drained g/on-drained"
                  points="221.363922,2579.243896 222.308594,2582.462402 219.356079,2581.930664"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ErrorQueue r/claim"
                  points="1216.812866,645.110107 1218.747925,647.849731 1215.782104,648.301880"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ErrorQueue r/error!"
                  points="1214.170776,702.650146 1213.636841,699.338867 1216.499390,700.236206"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ErrorQueue r/error-result"
                  points="1254.880005,695.258545 1251.526245,695.210693 1252.906128,692.546875"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor-channel clojure.core/deref"
                  points="609.038757,1016.503662 610.080627,1019.691833 607.113342,1019.250061"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="executor-channel trace/instrument"
                  points="585.924377,1155.736694 585.306396,1152.440063 588.190918,1153.264282"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="add-to-trace-counter context/timer"
                  points="-948.459778,1110.099854 -945.215881,1109.247070 -945.831238,1112.183350"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="moving-sample sample/moving-sampler"
                  points="-229.433350,1605.759766 -232.700653,1605.001587 -230.787262,1602.691040"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="pmap* trace/instrument"
                  points="576.705383,1175.401978 576.254822,1178.725586 573.776062,1177.035645"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="add-sub-timing context/timer"
                  points="-954.484192,1097.917969 -954.544434,1094.564453 -951.837524,1095.857666"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="siphon ch/siphon"
                  points="481.331543,1472.193115 479.358368,1474.905518 477.977814,1472.241943"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="siphon g/siphon"
                  points="468.041901,1495.995117 466.279114,1493.141479 469.267029,1492.872681"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="siphon r/siphon-result"
                  points="450.425781,1461.662964 453.540344,1462.907837 451.298645,1464.901489"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="lerp-array Array/getLength"
                  points="-2289.112061,-1140.261108 -2291.401611,-1142.712402 -2288.524658,-1143.563477"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="param clojure.core/deref"
                  points="604.978821,996.203369 602.145264,994.408752 604.714355,992.859680"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="edge-descriptor g/node?"
                  points="1455.261475,283.342194 1452.496948,285.241455 1452.083374,282.270081"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="gen-frame javax.swing.WindowConstants/HIDE_ON_CLOSE"
                  points="2584.766602,384.982147 2581.421387,384.738068 2582.954590,382.159515"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;ErrorResult codes/error-code-&gt;exception"
                  points="97.962807,161.077545 95.894630,158.436966 98.834358,157.838669"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;CallbackPropagator log/error"
                  points="859.895325,323.737549 861.090393,320.603577 863.119568,322.813232"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="map* g/downstream-node"
                  points="482.867828,-2668.455322 480.093109,-2666.570801 479.695465,-2669.544434"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="tracing? lamina.core.context/timer"
                  points="2515.589600,46.562893 2513.994629,43.612274 2516.993164,43.516563"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;NonRealTimeTaskQueue clojure.core/deref"
                  points="601.005615,1010.898071 599.092224,1013.652893 597.653748,1011.020325"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="getter q/query-lookup"
                  points="1181.561279,-2242.337891 1182.493896,-2239.116211 1179.543457,-2239.658691"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="named-channel cache/get-or-create"
                  points="-2423.354004,755.499878 -2425.139648,758.339172 -2426.696777,755.774963"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="cyclic-tree-seq clojure.core/deref"
                  points="601.125488,1000.135437 597.777100,999.938599 599.273926,997.338623"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="-&gt;Variance Math/sqrt"
                  points="1924.335693,1763.822266 1927.689941,1763.821045 1926.349121,1766.504883"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="resume-pipeline t/mark-return"
                  points="-922.077698,942.409973 -922.410278,939.072449 -919.607178,940.141418"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0" class="force-close g/close"
                  points="-2180.082275,1251.835815 -2179.439453,1248.543945 -2177.062988,1250.375000"
                  stroke="none"/>
        <polyline fill="#999999" fill-opacity="1.0"
                  class="wait-for-result clojure.core/deref"
                  points="605.516052,1015.347534 605.439575,1018.700745 602.787598,1017.298279"
                  stroke="none"/>
    </g>
    <g id="nodes">
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1455.5504"
                class="-&gt;ProbeChannel" cy="-123.20706" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1432.5173"
                class="c/emitter-node" cy="-334.4597" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-810.54456"
                class="timer" cy="-1629.0417" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-649.6018"
                class="user/timer-" cy="-1329.8481" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="255.08055"
                class="outliers" cy="1655.5756" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="32.442276"
                class="t/minutes" cy="1787.9082" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-502.77774"
                class="capture-timings" cy="518.48035" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-566.92194"
                class="context/assoc-context" cy="535.85065" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-528.8642"
                class="executor" cy="807.9539" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-157.58011"
                class="r/result-callback" cy="1032.8391" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1372.3864"
                class="compare-and-trigger" cy="-1206.2098" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="501.23026"
                class="clojure.core/hash-map" cy="-1753.92" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1019.1954"
                class="task-fn-body" cy="-139.8517" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-794.3127"
                class="potemkin/fast-bound-fn" cy="4.9128714" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1233.2875"
                class="fn-body" cy="521.4936" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1259.8933"
                class="clojure.core/fn" cy="-605.0781" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="0.019028647"
                class="read-node*" cy="-0.0073687085" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-31.292576"
                class="user/ResultChannel" cy="73.17168" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-713.54126"
                class="read-channel*" cy="-1531.175" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-667.5564"
                class="g/read-node*" cy="-1443.202" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="857.9798"
                class="bridge-in-order" cy="59.65091" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="295.54504"
                class="log/warn" cy="-134.01294" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="608.9069"
                class="check-for-drained" cy="-1143.945" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="910.4807"
                class="clojure.core/with-meta" cy="-1412.1401" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="958.73145"
                class="persistent-queue" cy="849.03894" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="982.08856"
                class="PersistentQueue/EMPTY" cy="852.4938" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1940.5677"
                class="-&gt;Node" cy="-369.23627" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-886.7449"
                class="lazy-channel-seq" cy="-1729.9327" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1030.6552"
                class="clojure.core/concat" cy="-1611.7681" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1749.6036"
                class="make-timing" cy="30.249317" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1028.106"
                class="clojure.core/vector" cy="-1081.9005" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-602.96875"
                class="now" cy="1309.8894" stroke="#000000" stroke-opacity="1.0"
                stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-582.88525"
                class="System/currentTimeMillis" cy="1338.9506" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1544.7731"
                class="error-value" cy="636.7407" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1562.5763"
                class="g/error-value" cy="607.2993" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="276.27933"
                class="assoc-context" cy="-1319.1656" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="390.24887"
                class="user/context" cy="-908.89825" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-553.3004"
                class="channel-&gt;seq" cy="1323.0889" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2349.8486"
                class="pipeline" cy="1662.3026" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1240.6674"
                class="clojure.core/neg?" cy="387.0484" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-892.2641"
                class="user/start-pipeline" cy="485.7514" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="837.6191"
                class="lazy-seq-&gt;channel" cy="304.59064" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="851.7932"
                class="log/error" cy="331.1777" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="67.758804"
                class="user/read-node" cy="15.955129" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="147.09938"
                class="aggregate" cy="767.8227" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-131.85777"
                class="t/task-queue" cy="1396.4602" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-862.28375"
                class="timer-" cy="1417.043" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-911.9855"
                class="Long/MIN_VALUE" cy="1412.3973" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1979.8302"
                class="format-timing" cy="-1534.511" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2002.8392"
                class="str/trim" cy="-1523.5938" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-954.75653"
                class="expand-multi-arities" cy="-1264.5543" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-763.87463"
                class="run-pipeline" cy="-1361.4948" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-665.9324"
                class="clojure.core/seq" cy="-1664.115" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-455.25464"
                class="clojure.core/when-not" cy="-22.749481" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1060.5612"
                class="-&gt;TransactionalEventQueue" cy="810.9709"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1135.2465"
                class="r/success-result" cy="773.93384" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1078.0643"
                class="update-state" cy="-1699.5344" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2054.806"
                class="parse-string-query" cy="-1419.2687" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2078.1382"
                class="Pattern/quote" cy="-1395.6503" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="960.04913"
                class="distributor" cy="1141.1696" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="933.4212"
                class="g/distributing-propagator" cy="1121.3623"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1054.5706"
                class="select-probes" cy="2364.5842" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1067.522"
                class="c/cancel-callback" cy="2328.2034" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-198.95499"
                class="defexecutor" cy="-1693.9261" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-855.987"
                class="clojure.core/list" cy="-1880.9635" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-308.70755"
                class="siphon-&gt;&gt;" cy="-2084.094" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1554.3334"
                class="defer-within-transaction" cy="-997.0705" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="195.42587"
                class="instrumented-fn" cy="-1908.3588" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="486.14258"
                class="clojure.core/doseq" cy="-1448.2437" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-935.96747"
                class="clojure.core/assoc" cy="-70.13672" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1367.7927"
                class="def-result-channel" cy="223.67496" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1315.8"
                class="clojure.core/boolean" cy="255.26176" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="795.9461"
                class="defer-onto-queue" cy="1401.4227" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="553.57605"
                class="p/run-pipeline" cy="756.80676" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="702.4269"
                class="q/cancel-receive" cy="-170.33232" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="673.4857"
                class="close-node!" cy="-1350.9595" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2139.3853"
                class="def-query-operator" cy="-342.414" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1471.891"
                class="user/pre-aggregate?" cy="-198.99232" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1350.0398"
                class="sympathetic-probe-channel" cy="-394.86237"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="723.25635"
                class="g/node*" cy="-539.56085" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1426.8237"
                class="probe-channel-" cy="-374.1677" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1296.6938"
                class="user/pre-aggregate" cy="-107.65864" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1120.5411"
                class="clojure-ns" cy="2235.802" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1144.7656"
                class="str/replace" cy="2226.6365" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="182.04395"
                class="zip-all" cy="348.36365" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="197.76698"
                class="l/lock" cy="431.4881" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1104.5099"
                class="receive-all" cy="-232.3818" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1057.9836"
                class="g/edge" cy="-159.49188" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="663.06476"
                class="context" cy="1001.5794" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="610.65857"
                class="clojure.core/deref" cy="1005.6236" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-98.184814"
                class="enqueue-and-release" cy="-1176.9595" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="288.13705"
                class="l/release" cy="-680.7159" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1142.6237"
                class="time*" cy="-700.2287" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-48.30256"
                class="render-dot-string" cy="2580.8196" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-70.545006"
                class="ImageIO/read" cy="2569.9648" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-290.363"
                class="clojure.core/apply" cy="-1377.9059" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-174.28261"
                class="moving-quantiles" cy="1621.3231" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-220.96114"
                class="sample/moving-sampler" cy="1612.7755" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="74.27088"
                class="q/queue" cy="-212.55446" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="59.547062"
                class="-&gt;DistributingPropagator" cy="510.52063"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-21.870804"
                class="l/with-lock" cy="486.6764" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-843.9375"
                class="p/probe-enabled?" cy="1380.3446" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2030.6093"
                class="trace-router" cy="905.7539" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1859.1879"
                class="c/transform-stream" cy="1056.7454" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1612.7515"
                class="user/_" cy="213.1692" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-152.56985"
                class="split" cy="-1913.2019" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-447.33496"
                class="clojure.core/let" cy="-908.25867" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="377.65344"
                class="user/task-fn-body" cy="-1189.3857" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="424.23068"
                class="probe-result" cy="68.6005" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="457.66406"
                class="r/async-result?" cy="96.64763" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1033.5114"
                class="-&gt;EventQueue" cy="635.87036" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="329.1108"
                class="r/result-channel" cy="845.25635" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="41.47128"
                class="task" cy="-1639.9868" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="190.522"
                class="user/task" cy="-1279.7496" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1309.159"
                class="user/distribute?" cy="-187.6556" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1049.2959"
                class="bridge" cy="109.111046" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1090.3263"
                class="n/upstream-callback" cy="111.818726" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-812.05237"
                class="with-exclusive-lock" cy="-1044.7445" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-980.8321"
                class="add-to-last-sub-timing" cy="1091.1992" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-959.2259"
                class="context/timer" cy="1107.8435" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="23.284842"
                class="r/listeners" cy="65.23739" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1611.8502"
                class="-&gt;Channel" cy="477.68298" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1648.2521"
                class="q/messages" cy="380.87762" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1150.709"
                class="with-task-queue" cy="-1362.9401" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1177.4468"
                class="defn-instrumented" cy="-1509.7256" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1202.6565"
                class="consumption" cy="611.1897" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1215.1548"
                class="r/claim" cy="634.2358" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-91.58885"
                class="bound-task" cy="-1620.4692" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="48.798374"
                class="user/default-executor" cy="-1578.7686" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1641.1017"
                class="def-query-comparator" cy="-690.5699" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1898.8888"
                class="clojure.core/=" cy="-505.31665" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-389.78232"
                class="node*" cy="-231.58426" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-314.0289"
                class="clojure.core/pr-str" cy="-119.1238" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-507.7879"
                class="dosync-yielding" cy="-1654.8077" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1598.7269"
                class="l/release-all" cy="227.50555" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1134.4246"
                class="wait-stage" cy="-990.91583" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1270.1353"
                class="query-seqs" cy="1328.9006" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1258.1497"
                class="time/invoke-at" cy="1291.9895" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="105.83187"
                class="read-from-queue" cy="-390.07117" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2518.8064"
                class="floor" cy="327.79916" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2536.6343"
                class="Calendar/getInstance" cy="307.99164" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-34.97772"
                class="clojure.core/identical?" cy="-380.48584" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-837.00757"
                class="with-instrumentation" cy="-558.13135" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="713.10956"
                class="q/drained?" cy="-948.4131" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1587.6461"
                class="def-query-lookup" cy="-828.0054" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-220.80075"
                class="user/channel" cy="-2071.2903" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="121.36581"
                class="periodically" cy="1337.6923" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="133.62346"
                class="t/invoke-repeatedly" cy="1366.883" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1029.3757"
                class="g/terminal-propagator" cy="-62.882942" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-263.56503"
                class="transform-message" cy="-473.55865" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2270.8264"
                class="parse-descriptor" cy="-1538.4467" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2270.6614"
                class="p/parse-string-query" cy="-1513.6931" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1203.5033"
                class="clojure.core/when-let" cy="-359.18057" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-293.7734"
                class="moving-sampler" cy="697.22736" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-151.58188"
                class="t/now" cy="568.2755" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-955.6461"
                class="on-new-probe" cy="2319.3293" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-973.8864"
                class="c/receive-all" cy="2334.411" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2171.7058"
                class="closed-channel" cy="1279.747" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2186.7964"
                class="g/close" cy="1260.5491" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-386.71622"
                class="set-state!" cy="-1232.5608" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="199.02327"
                class="user/assoc-record" cy="-1097.5947" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1814.5682"
                class="query-streams" cy="1085.3574" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-772.85626"
                class="with-lock" cy="-1186.6454" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-745.24225"
                class="user/release" cy="-999.5642" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="837.3086"
                class="q/receive" cy="-212.1742" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-625.9669"
                class="user/success" cy="221.69295" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1082.1746"
                class="t/enqueued-timer" cy="219.01129" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-187.99478"
                class="timed-result" cy="1388.0748" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-258.4531"
                class="t/invoke-in" cy="1374.204" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-960.40894"
                class="potemkin/fast-bound-fn*" cy="470.0682" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1833.5244"
                class="clojure.core/str" cy="-391.29803" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="759.7919"
                class="q/error-queue" cy="-311.89447" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="601.70935"
                class="q/transactional-copy" cy="-161.66034" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-877.51587"
                class="enqueued-timer-" cy="1348.7192" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-852.579"
                class="ex/probe-enabled?" cy="1303.6328" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-468.558"
                class="sink-&gt;&gt;" cy="-2021.0568" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-362.57138"
                class="clojure.core/-&gt;&gt;" cy="-2056.7893" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="618.00775"
                class="wait-for-message" cy="1046.7687" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-33.303715"
                class="q/enqueue" cy="-999.87103" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="291.7055"
                class="zip" cy="520.81824" stroke="#000000" stroke-opacity="1.0"
                stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="9.305731"
                class="partition-every-op" cy="1644.2887" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="18.72549"
                class="t/period" cy="1669.7445" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2454.008"
                class="sample" cy="-38.951225" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2462.5032"
                class="sample/sampler" cy="-17.913158" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1113.9785"
                class="clojure.tools.logging/error" cy="-541.21246"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="144.90727"
                class="r/success" cy="974.2888" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="452.92645"
                class="clojure.core/ref" cy="-493.35208" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-878.18616"
                class="trace" cy="-1653.9921" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-820.4572"
                class="user/channel-&gt;lazy-seq" cy="-1548.1484"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="104.9642"
                class="trace/instrumented-fn" cy="-1492.0383" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="360.46722"
                class="pipelined-client" cy="19.911442" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="332.5391"
                class="lock/lock" cy="21.772629" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1220.9423"
                class="cancel-callback" cy="-452.26376" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1244.2278"
                class="g/cancel" cy="-447.9508" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="853.1205"
                class="user/error-to-listeners" cy="-657.26587" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1221.8944"
                class="dispatch-consumption" cy="762.2037" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1210.8805"
                class="r/error!" cy="713.14655" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="568.2368"
                class="drop-while*" cy="729.1222" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="32.38643"
                class="ensure-queue" cy="-874.12195" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-7.430107"
                class="q/transactional-queue" cy="-255.06497" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-222.27304"
                class="clojure.core/if-not" cy="-352.1816" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-54.942974"
                class="-&gt;ExponentiallyDecayingSampler" cy="519.2224"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1461.6146"
                class="render-propagation" cy="-182.62375" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1437.7489"
                class="g/render-propagation" cy="-190.81323" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1032.1129"
                class="channel-&gt;lazy-seq" cy="-112.17089" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2052.4636"
                class="aggregating-trace-router" cy="782.359" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1967.0348"
                class="c/*stream-generator*" cy="986.51154" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-707.854"
                class="r/expiring-result" cy="689.46265" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-976.3233"
                class="-&gt;EnqueuedTimer" cy="1469.4166" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-974.7346"
                class="ex/trace-error" cy="1427.338" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-928.8761"
                class="transform-fn-bodies" cy="-1798.7328" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="462.03607"
                class="enqueue" cy="248.70825" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="471.72818"
                class="u/enqueue" cy="270.37573" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="468.63492"
                class="error" cy="339.58618" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="493.74664"
                class="u/error" cy="351.29895" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-796.7846"
                class="enable-unchecked-math" cy="-1757.9702" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-637.3992"
                class="clojure.core/*unchecked-math*" cy="-1420.2477"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-978.5471"
                class="ex/execute" cy="202.22102" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="131.16315"
                class="l/with-exclusive-lock" cy="282.72748" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1553.9143"
                class="g/propagate" cy="-37.68901" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1365.9812"
                class="user/periodic?" cy="-431.20334" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="626.6385"
                class="q/dispatch-message" cy="-248.68336" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="734.6823"
                class="user/enqueue-to-listeners" cy="-733.00476"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="766.02954"
                class="l/release-exclusive" cy="-136.70837" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1484.9521"
                class="c/receiver-node" cy="-161.4351" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="216.38005"
                class="result-channel" cy="413.74664" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1833.8568"
                class="time/with-task-queue" cy="1011.171" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1264.6476"
                class="r/error-result" cy="700.31775" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="323.981"
                class="with-context" cy="-1601.3252" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1028.2607"
                class="c/on-closed" cy="2391.8887" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="470.09457"
                class="variance" cy="1292.6937" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="450.95074"
                class="var/create-variance" cy="1331.577" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1625.4991"
                class="node-data" cy="372.1126" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-214.56958"
                class="idle-result" cy="1166.2921" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="654.2688"
                class="clojure.core/aset" cy="-503.60904" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="10.782398"
                class="Math/exp" cy="1178.816" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="39.812508"
                class="n/closed-result" cy="441.49713" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1607.5194"
                class="g/queue" cy="427.66827" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-894.2381"
                class="java.lang.System/currentTimeMillis" cy="164.96877"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="49.27114"
                class="merge-group-by" cy="1835.2928" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1374.2661"
                class="user/result-channel" cy="-241.62265" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-283.6097"
                class="user/make-record" cy="-220.64667" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="127.75504"
                class="user/set-state" cy="-810.3586" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="719.04474"
                class="q/error" cy="-244.37999" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="302.12262"
                class="clojure.core/if-let" cy="-1214.7897" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="177.57474"
                class="user/NodeState" cy="-611.6696" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2227.7122"
                class="analyze-timings" cy="946.45325" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2235.4011"
                class="stats/sum" cy="920.1752" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1022.3322"
                class="with-period" cy="-1358.1411" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="645.23883"
                class="channel-&gt;lazy-seq-" cy="1052.7482" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-832.9992"
                class="pr/probe-result" cy="-388.144" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-72.61208"
                class="clojure.core/when" cy="-79.385895" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-644.1339"
                class="clojure.core/list*" cy="-718.5334" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="184.54079"
                class="user/ensure-queue" cy="-282.153" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-860.5007"
                class="clojure.core/comp" cy="635.95734" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="304.0103"
                class="user/Context" cy="-874.0757" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="602.02466"
                class="topic-channel-cache" cy="969.4795" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2012.9431"
                class="format-duration" cy="-1546.6116" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-674.10223"
                class="trace*" cy="-885.25134" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1934.457"
                class="c/distributable-chain" cy="659.1969" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-415.6468"
                class="join-&gt;&gt;" cy="-1898.1294" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="510.73807"
                class="filter*" cy="-2653.5422" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="493.77075"
                class="g/downstream-node" cy="-2669.9133" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1668.7361"
                class="l/acquire-all" cy="125.06681" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-931.1932"
                class="-&gt;Timer" cy="1515.6396" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-919.46643"
                class="System/nanoTime" cy="1485.6842" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-216.37587"
                class="r/subscribe" cy="996.80994" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1166.8755"
                class="clojure-fn" cy="2240.0322" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1418.0502"
                class="clojure.core/namespace" cy="-364.5093" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="706.59406"
                class="view-image" cy="952.208" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="722.9799"
                class="java.awt.EventQueue/invokeLater" cy="932.8419"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1890.7538"
                class="c/non-distributable-chain" cy="608.96356"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1088.6951"
                class="lamina.core.result/success" cy="-669.37683"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-602.4128"
                class="clojure.core/or" cy="-5.7074127" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1191.3268"
                class="clojure.core/doall" cy="129.5191" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-398.12393"
                class="context/with-context" cy="549.8834" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-558.372"
                class="t/timer" cy="455.84995" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1779.4926"
                class="cache/router" cy="747.1938" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="648.15515"
                class="-&gt;DistilledTiming" cy="1025.0028" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-824.4397"
                class="channel-seq" cy="-1699.9178" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-521.6658"
                class="user/pipeline" cy="-701.9989" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2596.9023"
                class="-&gt;sorted-double-array" cy="-388.61697"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2578.1655"
                class="Arrays/sort" cy="-375.82248" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1649.4702"
                class="sample-graph" cy="243.99309" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="626.22754"
                class="invoke-repeatedly" cy="956.5965" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1420.0469"
                class="c/channel*" cy="-405.77625" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="774.88586"
                class="t/invoke-at" cy="1366.8048" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-527.61584"
                class="channel*" cy="-1385.5448" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1461.16"
                class="user/getName" cy="-101.102516" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-957.5961"
                class="enqueued-timer" cy="-1729.2257" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="38.31358"
                class="clojure.core/dosync" cy="-1378.6963" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="6.3919387"
                class="group-by-op" cy="1832.1509" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="13.168208"
                class="q/transform-stream" cy="1863.8157" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-909.2494"
                class="deftoken" cy="-1592.8766" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-168.38173"
                class="user/receive-all" cy="-1205.813" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="906.17914"
                class="receive" cy="2430.2698" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="911.6358"
                class="g/receive" cy="2452.292" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2494.2026"
                class="sum-op" cy="-759.6108" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2516.8733"
                class="lamina.stats/sum" cy="-758.71094" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="208.31023"
                class="drained-result" cy="891.5794" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="191.80981"
                class="g/drained-result" cy="868.75354" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-795.33887"
                class="user/capture-timings" cy="-438.21396" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="393.55542"
                class="clojure.core/case" cy="-378.91934" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1605.114"
                class="clojure.core/*ns*" cy="-638.77783" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="745.8126"
                class="clojure.core/unchecked-inc" cy="-606.9467"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2154.6833"
                class="ground" cy="-964.2035" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2133.843"
                class="g/ground" cy="-955.2324" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-321.8574"
                class="check-idle" cy="1320.3207" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="448.57388"
                class="var/variance" cy="1275.7352" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1433.3392"
                class="closed?" cy="856.2217" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1409.8761"
                class="g/closed?" cy="872.38293" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-855.91016"
                class="user/enqueued-timer-" cy="-1410.9851" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1007.23846"
                class="n/downstream-callback" cy="92.60591" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="49.062225"
                class="q/periodic-chain?" cy="1867.5677" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-487.06638"
                class="t/mark-error" cy="465.52963" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1466.1565"
                class="g/node?" cy="281.82574" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1000.13184"
                class="g/consume" cy="-106.40695" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1463.9808"
                class="time/advance" cy="1240.7828" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-866.8465"
                class="user/timing" cy="19.543766" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="568.5999"
                class="clojure.core/object-array" cy="-505.29663"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="823.66986"
                class="thread-factory" cy="339.47916" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-300.5133"
                class="user/error" cy="6.136619" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2000.3463"
                class="cache/inner-cache" cy="765.3636" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-623.9122"
                class="user/IPipeline" cy="301.30212" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2538.5974"
                class="TimeZone/getTimeZone" cy="345.6269" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="128.00262"
                class="user/check-for-drained" cy="-272.86203" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2009.5214"
                class="q/parse-descriptor" cy="822.60394" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-822.92224"
                class="user/acquire-exclusive" cy="-711.17053" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-615.8838"
                class="user/run" cy="382.58197" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="366.05777"
                class="user/stacks" cy="-1009.95435" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="786.2926"
                class="p/restart" cy="38.17675" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1532.2294"
                class="-&gt;SympatheticProbeChannel" cy="-95.05666"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="162.79411"
                class="closed-result" cy="932.62445" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-724.048"
                class="user/channel-&gt;seq" cy="-1444.463" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-154.59317"
                class="subscribe" cy="817.8528" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-199.92453"
                class="on-realized" cy="1030.8265" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2062.1406"
                class="cache/subscribe" cy="732.33386" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1397.7552"
                class="clojure.core/long" cy="417.50745" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1130.4303"
                class="message-str" cy="2204.4001" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-925.99744"
                class="t/mark-return" cy="952.6879" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="594.6594"
                class="user/result-seq" cy="-422.309" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1395.126"
                class="g/on-state-changed" cy="-376.11676" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1504.2346"
                class="sum" cy="-2103.5137" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1481.1359"
                class="Double/longBitsToDouble" cy="-2112.4866" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="590.6685"
                class="transactional?" cy="2527.136" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="594.4662"
                class="g/transactional?" cy="2549.5044" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="867.2896"
                class="g/join" cy="1171.5316" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="575.74695"
                class="reductions*" cy="818.5981" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-839.25305"
                class="user/gen-timer" cy="536.5244" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="417.14496"
                class="user/LinkedList" cy="-1087.9808" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2453.9568"
                class="rate-op" cy="508.5857" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2440.1887"
                class="lamina.stats/rate" cy="490.55035" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="154.0776"
                class="clojure.core/loop" cy="-39.234547" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="951.46533"
                class="drain-queue" cy="-444.5227" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="974.46326"
                class="q/drain" cy="-449.8123" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-26.56083"
                class="io/input-stream" cy="2568.9915" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2071.5337"
                class="time/period" cy="833.20636" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="395.9624"
                class="r/result" cy="48.441902" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-939.255"
                class="handle-redirect" cy="1002.292" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1009.1104"
                class="Integer/MAX_VALUE" cy="1432.0144" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1201.607"
                class="user/getNamespace" cy="-131.91335" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-981.54944"
                class="instrument" cy="-2671.4375" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1002.8189"
                class="clojure.core/unquote" cy="-2663.5342" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="658.6996"
                class="dependent-topic-channel-cache" cy="964.55774"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-274.51892"
                class="user/run-pipeline" cy="157.59547" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-788.84467"
                class="clojure.core/identity" cy="444.89792" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1956.1531"
                class="time/with-period" cy="920.66437" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1567.9412"
                class="g/split" cy="484.0695" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-469.23163"
                class="handle-request" cy="-1105.4723" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2200.2976"
                class="stats/moving-quantiles" cy="942.5104" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-184.38225"
                class="close-on-idle" cy="1091.028" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1053.293"
                class="n/link" cy="151.84561" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1036.3807"
                class="lamina.core.utils/in-transaction?" cy="-650.3615"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1089.9153"
                class="c/channel" cy="2375.1956" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="78.92868"
                class="user/SuccessResult" cy="-79.0039" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2003.7721"
                class="str/split-lines" cy="-1398.0297" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="978.599"
                class="g/node" cy="1113.1809" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="772.6277"
                class="channel-cache" cy="539.07135" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="640.4278"
                class="watch-channel" cy="983.7424" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-303.10687"
                class="t/hours" cy="669.1073" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="324.66284"
                class="user/set-state!" cy="-819.17505" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="237.19458"
                class="join" cy="1161.4933" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1045.3217"
                class="clojure.core/-" cy="-36.97346" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="75.81722"
                class="moving-average" cy="1694.3508" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="136.67148"
                class="avg/moving-average" cy="1690.4445" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="468.56873"
                class="user/in-transaction?" cy="-613.08856" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-536.227"
                class="g/drain" cy="1304.6056" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="646.3885"
                class="reduce*" cy="815.89087" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="640.67126"
                class="l/acquire" cy="-90.23445" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="165.5045"
                class="distribute-aggregate" cy="1416.8167" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-384.8755"
                class="t/mark-waiting" cy="315.37863" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1098.6019"
                class="user/instrumented-fn" cy="-1298.022" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="9.94095"
                class="priority" cy="1154.4961" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-223.8406"
                class="expiring-result" cy="1385.9711" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-960.8635"
                class="user/enqueue" cy="-20.740612" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-60.90764"
                class="clojure.core/and" cy="-183.95233" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="547.0667"
                class="clojure.core/dec" cy="-607.8111" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="450.6021"
                class="q/close" cy="-770.88556" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="208.73938"
                class="clojure.core/int" cy="-135.91997" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1451.1771"
                class="q/closed?" cy="836.0685" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="25.991465"
                class="clojure.core/instance?" cy="-89.11246" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-177.53917"
                class="on-event" cy="999.7031" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-207.9248"
                class="clojure.core/cond" cy="-678.57214" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-960.9692"
                class="dummy-timer" cy="1555.6919" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-955.875"
                class="p/error-probe-channel" cy="1531.874" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1510.9723"
                class="Double/doubleToRawLongBits" cy="-2079.7542"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1571.6842"
                class="read-channel" cy="164.44011" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1593.5516"
                class="g/read-node" cy="173.41913" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-777.365"
                class="user/acquire" cy="-852.2204" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2638.8926"
                class="parse-lookup" cy="-714.9722" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2625.0466"
                class="str/split" cy="-696.99774" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1024.3984"
                class="r/add-listener" cy="716.839" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-312.1339"
                class="user/probe-channel" cy="-778.35516" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-657.0039"
                class="user/result-callback" cy="158.47116" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="481.20895"
                class="-&gt;Message" cy="297.55026" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-913.43396"
                class="r/timed-result" cy="-370.59326" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1211.6414"
                class="user/aggregate" cy="-201.1906" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-608.5419"
                class="q/now" cy="1285.2471" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="855.3916"
                class="l/try-acquire-exclusive" cy="-344.25513" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1989.35"
                class="parser" cy="-1502.2859" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1015.5445"
                class="clojure.core/binding" cy="-1187.5269" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2333.6135"
                class="view-propagation" cy="1113.026" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2354.7434"
                class="core/view-image" cy="1096.7751" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-874.5054"
                class="user/token" cy="-1280.0933" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2450.1301"
                class="release-named-channel" cy="-742.8233" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2459.7686"
                class="cache/release" cy="-763.3639" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-54.248432"
                class="clojure.core/merge" cy="-1449.3601" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1391.2507"
                class="time/non-realtime-task-queue" cy="1285.3365"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="756.5659"
                class="receive-in-order" cy="380.69235" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="748.70715"
                class="p/complete" cy="347.91534" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="705.5554"
                class="drained?" cy="-920.216" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="311.0155"
                class="error-result" cy="817.9221" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="871.50214"
                class="r/defer-within-transaction" cy="-28.543806"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-740.1078"
                class="user/trace*" cy="-1327.6754" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1047.4364"
                class="n/on-state-changed" cy="67.33292" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1211.4034"
                class="r/success!" cy="790.98584" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="119.18572"
                class="close-and-clear" cy="255.05522" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="83.237465"
                class="user/siphon" cy="-1951.2035" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="794.8041"
                class="user/defer-within-transaction" cy="-498.8746"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-739.74097"
                class="user/release-exclusive" cy="-684.3885" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="212.04912"
                class="System/arraycopy" cy="358.63904" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2056.6038"
                class="Pattern/compile" cy="-1350.1289" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-59.771503"
                class="bridge-accumulate" cy="1535.7391" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1136.9326"
                class="trace-context/context" cy="53.34388" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2556.4253"
                class="add" cy="325.81906" stroke="#000000" stroke-opacity="1.0"
                stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-816.69586"
                class="user/probe-enabled?" cy="-141.05765" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="535.5667"
                class="drop*" cy="731.08" stroke="#000000" stroke-opacity="1.0"
                stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="501.17627"
                class="partition-" cy="819.5281" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-736.14636"
                class="user/result" cy="230.86147" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-191.43541"
                class="on-error" cy="952.69196" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="572.6322"
                class="persistent-connection" cy="1004.1246" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-692.41266"
                class="user/run-finally" cy="384.76846" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-356.20288"
                class="num-cores" cy="2495.8618" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-341.06146"
                class="Runtime/getRuntime" cy="2512.7593" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1516.5178"
                class="r/error-value" cy="633.60925" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1395.4746"
                class="trace-descriptor" cy="172.41624" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1418.7853"
                class="r/success-value" cy="176.56837" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="462.05145"
                class="last*" cy="848.89233" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1616.0138"
                class="clojure.core/reify" cy="96.981964" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1134.6285"
                class="g/link" cy="-257.54776" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-286.16043"
                class="Thread/interrupted" cy="519.0927" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2370.7793"
                class="view-graph" cy="1118.035" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1080.9382"
                class="clojure.core/map" cy="125.54477" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="107.53494"
                class="-&gt;ResultChannel" cy="200.0493" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="100.15661"
                class="codes/error-code-&gt;exception" cy="171.85657"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="513.409"
                class="clojure.core/ref-set" cy="-702.8838" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1537.6235"
                class="-&gt;SplicedChannel" cy="-17.72549" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-465.6126"
                class="split-node" cy="621.6172" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-440.57797"
                class="l/asymmetric-lock" cy="618.3037" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-3.3878636"
                class="user/executor" cy="-1420.2944" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-280.3064"
                class="with-timeout" cy="1359.0995" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1232.9645"
                class="print-timing-result" cy="2499.4995" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1216.437"
                class="t/format-timing" cy="2515.047" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="832.00385"
                class="clojure.core/keyword?" cy="-575.9791" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="483.0832"
                class="force-error" cy="376.63745" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-197.63832"
                class="user/try*" cy="-158.22064" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="518.52673"
                class="l/try-acquire" cy="-171.36954" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2349.6492"
                class="g/node-frame" cy="1134.2852" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-391.282"
                class="user/async-result?" cy="180.22112" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-245.08797"
                class="pr/probe-channel" cy="441.42883" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1839.2418"
                class="in-transaction?" cy="-2016.5026" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1843.1052"
                class="clojure.lang.LockingTransaction/isRunning"
                cy="-1994.1439" stroke="#000000" stroke-opacity="1.0"
                stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-444.04822"
                class="distributing-propagator" cy="593.3819" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2230.735"
                class="stats/rate" cy="973.4769" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1787.7076"
                class="time/task-queue" cy="664.72046" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="267.0347"
                class="var/std-dev" cy="1608.0042" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1349.8639"
                class="clojure.core/agent" cy="-676.1742" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-731.66736"
                class="user/implicit?" cy="531.7246" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="652.1937"
                class="user/update-state" cy="-643.64734" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1507.2214"
                class="c/split-receiver" cy="-84.13483" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1161.5782"
                class="escape-string" cy="2206.3328" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1092.7848"
                class="user/lookups" cy="-456.33417" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1253.8375"
                class="-&gt;DrainedQueue" cy="660.3008" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="398.56128"
                class="clojure.core/inc" cy="-542.41534" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-805.7244"
                class="user/isRealized" cy="220.60365" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1223.7063"
                class="time/now" cy="1309.8394" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-172.87419"
                class="math/quantiles" cy="1590.7339" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="898.4494"
                class="on-closed" cy="-2453.977" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="877.1175"
                class="g/on-closed" cy="-2461.7075" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2210.395"
                class="close" cy="1254.4684" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="296.87036"
                class="t/seconds" cy="1640.5847" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="693.4529"
                class="g/drained?" cy="-898.1803" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-454.4356"
                class="java.lang.Thread/sleep" cy="-1554.2059" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-532.5418"
                class="user/deftype+" cy="176.1989" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2475.8186"
                class="connect" cy="-1203.3501" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2469.0515"
                class="g/connect" cy="-1181.6932" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-959.14294"
                class="user/invoke" cy="583.66144" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="257.42975"
                class="user/fn-body" cy="-1126.7404" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1316.087"
                class="user/transform" cy="-288.4632" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-667.1474"
                class="user/emitter-node" cy="-1485.0747" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-969.78064"
                class="user/print-timing-result" cy="-369.87125"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-189.84975"
                class="g/on-error" cy="923.2271" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2049.678"
                class="token" cy="-1327.4817" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1025.7034"
                class="c/siphon" cy="2340.4246" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-328.5182"
                class="clojure.core/ifn?" cy="-65.03737" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1107.7972"
                class="user/subscribe" cy="430.71515" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1083.447"
                class="user/ResultState" cy="-917.9762" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="172.54495"
                class="queue" cy="426.23962" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1784.6221"
                class="mimic" cy="1717.3866" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1766.0254"
                class="g/mimic" cy="1704.389" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="221.44455"
                class="ch/join" cy="1128.3148" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="561.8282"
                class="user/ResultCallback" cy="-350.46326" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1982.4095"
                class="indent" cy="-1387.7437" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1011.0674"
                class="g/bridge" cy="135.62373" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-70.853165"
                class="r/enqueue-to-listeners" cy="44.053852" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="865.0817"
                class="q/drained-queue" cy="-854.45654" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="219.29272"
                class="on-drained" cy="2590.7476" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="223.31311"
                class="g/on-drained" cy="2568.418" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1702.7126"
                class="c/*query*" cy="1036.6575" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1221.8507"
                class="-&gt;ErrorQueue" cy="678.1506" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-767.8141"
                class="user/on-success" cy="353.84283" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-440.48697"
                class="Thread/currentThread" cy="700.77655" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="590.9039"
                class="executor-channel" cy="1138.3114" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-245.94157"
                class="user/join" cy="-1201.85" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2072.5925"
                class="c/comparators" cy="-1446.4246" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-932.5498"
                class="add-to-trace-counter" cy="1113.4342" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-239.22638"
                class="moving-sample" cy="1597.6501" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-972.30145"
                class="lamina.time.queue/*task-queue*" cy="-839.5462"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="569.54694"
                class="pmap*" cy="1185.9014" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="582.902"
                class="trace/instrument" cy="1166.3134" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2250.185"
                class="s/parse-struct-query" cy="-1552.1262" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-947.29987"
                class="add-sub-timing" cy="1082.8794" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="385.49084"
                class="clojure.core/nil?" cy="-716.93" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="466.588"
                class="siphon" cy="1479.8352" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="491.0976"
                class="ch/siphon" cy="1467.1311" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2292.4282"
                class="lerp-array" cy="-1151.4701" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2285.9912"
                class="Array/getLength" cy="-1129.7131" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="580.07684"
                class="param" cy="954.90173" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1442.7037"
                class="edge-descriptor" cy="285.09006" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="896.0144"
                class="l/acquire-exclusive" cy="-281.37302" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-151.54126"
                class="context/context" cy="776.17535" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1004.6203"
                class="ex/trace-return" cy="1447.8842" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="140.3539"
                class="g/closed-result" cy="915.1201" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1033.0286"
                class="clojure.core/send" cy="-533.1919" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2574.7197"
                class="gen-frame" cy="379.00763" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2594.2212"
                class="javax.swing.WindowConstants/HIDE_ON_CLOSE" cy="390.60446"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="195.55945"
                class="dist/facets" cy="1395.5946" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="95.42128"
                class="-&gt;ErrorResult" cy="148.59004" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1055.0812"
                class="user/comparators" cy="-288.93082" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1425.9623"
                class="user/intra-aggregate" cy="-282.64145" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="873.6396"
                class="-&gt;CallbackPropagator" cy="311.11615" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1504.4658"
                class="user/operators" cy="-325.09015" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1296.7529"
                class="clojure.core/defn" cy="-1253.2865" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="470.3959"
                class="map*" cy="-2666.7874" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-992.38464"
                class="java.lang.Long/MIN_VALUE" cy="108.67657" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="827.40497"
                class="t/advance-until" cy="1376.376" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-334.27472"
                class="pr/probe-enabled?" cy="610.3097" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2515.2166"
                class="tracing?" cy="34.879528" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="2515.9404"
                class="lamina.core.context/timer" cy="57.557293"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-905.26355"
                class="lamina.core.utils/retry-exception?" cy="348.79642"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-832.33453"
                class="lamina.time/*period*" cy="-802.3124" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1080.1157"
                class="g/callback-propagator" cy="-245.29874" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="565.80457"
                class="-&gt;NonRealTimeTaskQueue" cy="1030.1323"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="469.02756"
                class="g/siphon" cy="1506.9508" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="355.3514"
                class="lock/with-exclusive-lock" cy="-7.5443416"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-535.8818"
                class="t/mark-enter" cy="726.67883" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1536.0917"
                class="ch/error-value" cy="663.50635" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-1337.333"
                class="lamina.core.utils/error" cy="-748.2821" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="443.11548"
                class="r/siphon-result" cy="1453.4435" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1179.4471"
                class="getter" cy="-2230.8418" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1183.5508"
                class="q/query-lookup" cy="-2253.1565" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2433.3452"
                class="named-channel" cy="761.5674" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2413.952"
                class="cache/get-or-create" cy="749.79016" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="564.47217"
                class="cyclic-tree-seq" cy="979.0342" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-387.24365"
                class="TimeUnit/MILLISECONDS" cy="609.8899" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="592.5693"
                class="clojure.core/ensure" cy="-748.9564" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="757.37036"
                class="lamina.core.channel/channel" cy="1416.1791"
                stroke="#000000" stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1934.7922"
                class="-&gt;Variance" cy="1769.046" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="1914.4954"
                class="Math/sqrt" cy="1758.9062" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-916.73566"
                class="resume-pipeline" cy="928.40247" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="-2171.862"
                class="force-close" cy="1241.1678" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
        <circle fill-opacity="1.0" fill="#999999" r="10.0" cx="590.4602"
                class="wait-for-result" cy="1043.8165" stroke="#000000"
                stroke-opacity="1.0" stroke-width="1.0"/>
    </g>
    <g id="node-labels">
        <text font-size="24" x="1455.5504" y="-118.56253" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;ProbeChannel">
            -&gt;ProbeChannel
        </text>
        <text font-size="24" x="1432.5173" y="-329.34445" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/emitter-node">
            c/emitter-node
        </text>
        <text font-size="24" x="-810.54456" y="-1624.3972" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="timer">
            timer
        </text>
        <text font-size="24" x="-649.6018" y="-1324.7329" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/timer-">
            user/timer-
        </text>
        <text font-size="24" x="255.08055" y="1660.2201" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="outliers">
            outliers
        </text>
        <text font-size="24" x="32.442276" y="1793.0234" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/minutes">
            t/minutes
        </text>
        <text font-size="24" x="-502.77774" y="524.287" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="capture-timings">
            capture-timings
        </text>
        <text font-size="24" x="-566.92194" y="540.7823" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="context/assoc-context">
            context/assoc-context
        </text>
        <text font-size="24" x="-528.8642" y="812.25275" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="executor">
            executor
        </text>
        <text font-size="24" x="-157.58011" y="1037.9543" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/result-callback">
            r/result-callback
        </text>
        <text font-size="24" x="1372.3864" y="-1200.4032" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="compare-and-trigger">
            compare-and-trigger
        </text>
        <text font-size="24" x="501.23026" y="-1748.1134" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/hash-map">
            clojure.core/hash-map
        </text>
        <text font-size="24" x="-1019.1954" y="-134.04506" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="task-fn-body">
            task-fn-body
        </text>
        <text font-size="24" x="-794.3127" y="10.719512" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="potemkin/fast-bound-fn">
            potemkin/fast-bound-fn
        </text>
        <text font-size="24" x="-1233.2875" y="527.30023" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="fn-body">
            fn-body
        </text>
        <text font-size="24" x="-1259.8933" y="-599.2715" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/fn">
            clojure.core/fn
        </text>
        <text font-size="24" x="0.019028647" y="4.6371627" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="read-node*">
            read-node*
        </text>
        <text font-size="24" x="-31.292576" y="78.28691" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/ResultChannel">
            user/ResultChannel
        </text>
        <text font-size="24" x="-713.54126" y="-1526.5305" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="read-channel*">
            read-channel*
        </text>
        <text font-size="24" x="-667.5564" y="-1437.3954" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/read-node*">
            g/read-node*
        </text>
        <text font-size="24" x="857.9798" y="65.45755" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="bridge-in-order">
            bridge-in-order
        </text>
        <text font-size="24" x="295.54504" y="-128.2063" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="log/warn">
            log/warn
        </text>
        <text font-size="24" x="608.9069" y="-1139.3004" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="check-for-drained">
            check-for-drained
        </text>
        <text font-size="24" x="910.4807" y="-1406.3335" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/with-meta">
            clojure.core/with-meta
        </text>
        <text font-size="24" x="958.73145" y="854.8456" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="persistent-queue">
            persistent-queue
        </text>
        <text font-size="24" x="982.08856" y="857.8258" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="PersistentQueue/EMPTY">
            PersistentQueue/EMPTY
        </text>
        <text font-size="24" x="1940.5677" y="-364.59174" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;Node">
            -&gt;Node
        </text>
        <text font-size="24" x="-886.7449" y="-1724.1261" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lazy-channel-seq">
            lazy-channel-seq
        </text>
        <text font-size="24" x="-1030.6552" y="-1605.9614" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/concat">
            clojure.core/concat
        </text>
        <text font-size="24" x="-1749.6036" y="36.055958" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="make-timing">
            make-timing
        </text>
        <text font-size="24" x="-1028.106" y="-1076.0939" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/vector">
            clojure.core/vector
        </text>
        <text font-size="24" x="-602.96875" y="1313.3367" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="now">
            now
        </text>
        <text font-size="24" x="-582.88525" y="1344.7572" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="System/currentTimeMillis">
            System/currentTimeMillis
        </text>
        <text font-size="24" x="1544.7731" y="641.38525" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="error-value">
            error-value
        </text>
        <text font-size="24" x="1562.5763" y="613.10596" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/error-value">
            g/error-value
        </text>
        <text font-size="24" x="276.27933" y="-1314.8668" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="assoc-context">
            assoc-context
        </text>
        <text font-size="24" x="390.24887" y="-903.9666" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/context">
            user/context
        </text>
        <text font-size="24" x="-553.3004" y="1328.8955" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="channel-&gt;seq">
            channel-&gt;seq
        </text>
        <text font-size="24" x="-2349.8486" y="1668.1093" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="pipeline">
            pipeline
        </text>
        <text font-size="24" x="-1240.6674" y="392.85504" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/neg?">
            clojure.core/neg?
        </text>
        <text font-size="24" x="-892.2641" y="491.55804" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/start-pipeline">
            user/start-pipeline
        </text>
        <text font-size="24" x="837.6191" y="310.39728" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lazy-seq-&gt;channel">
            lazy-seq-&gt;channel
        </text>
        <text font-size="24" x="851.7932" y="336.98434" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="log/error">
            log/error
        </text>
        <text font-size="24" x="67.758804" y="21.070362" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/read-node">
            user/read-node
        </text>
        <text font-size="24" x="147.09938" y="773.2836" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="aggregate">
            aggregate
        </text>
        <text font-size="24" x="-131.85777" y="1402.2668" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/task-queue">
            t/task-queue
        </text>
        <text font-size="24" x="-862.28375" y="1421.6875" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="timer-">
            timer-
        </text>
        <text font-size="24" x="-911.9855" y="1418.1884" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Long/MIN_VALUE">
            Long/MIN_VALUE
        </text>
        <text font-size="24" x="1979.8302" y="-1528.7043" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="format-timing">
            format-timing
        </text>
        <text font-size="24" x="2002.8392" y="-1518.4785" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="str/trim">
            str/trim
        </text>
        <text font-size="24" x="-954.75653" y="-1258.7477" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="expand-multi-arities">
            expand-multi-arities
        </text>
        <text font-size="24" x="-763.87463" y="-1355.6881" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="run-pipeline">
            run-pipeline
        </text>
        <text font-size="24" x="-665.9324" y="-1658.3083" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/seq">
            clojure.core/seq
        </text>
        <text font-size="24" x="-455.25464" y="-16.94284" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/when-not">
            clojure.core/when-not
        </text>
        <text font-size="24" x="1060.5612" y="816.3029" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;TransactionalEventQueue">
            -&gt;TransactionalEventQueue
        </text>
        <text font-size="24" x="1135.2465" y="779.0491" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/success-result">
            r/success-result
        </text>
        <text font-size="24" x="1078.0643" y="-1693.7278" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="update-state">
            update-state
        </text>
        <text font-size="24" x="2054.806" y="-1413.462" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="parse-string-query">
            parse-string-query
        </text>
        <text font-size="24" x="2078.1382" y="-1390.0272" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Pattern/quote">
            Pattern/quote
        </text>
        <text font-size="24" x="960.04913" y="1145.8141" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="distributor">
            distributor
        </text>
        <text font-size="24" x="933.4212" y="1127.169" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/distributing-propagator">
            g/distributing-propagator
        </text>
        <text font-size="24" x="-1054.5706" y="2370.3909" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="select-probes">
            select-probes
        </text>
        <text font-size="24" x="-1067.522" y="2333.3186" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/cancel-callback">
            c/cancel-callback
        </text>
        <text font-size="24" x="-198.95499" y="-1689.2816" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="defexecutor">
            defexecutor
        </text>
        <text font-size="24" x="-855.987" y="-1875.1569" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/list">
            clojure.core/list
        </text>
        <text font-size="24" x="-308.70755" y="-2078.2874" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="siphon-&gt;&gt;">
            siphon-&gt;&gt;
        </text>
        <text font-size="24" x="-1554.3334" y="-992.42596" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="defer-within-transaction">
            defer-within-transaction
        </text>
        <text font-size="24" x="195.42587" y="-1903.7142" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="instrumented-fn">
            instrumented-fn
        </text>
        <text font-size="24" x="486.14258" y="-1442.437" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/doseq">
            clojure.core/doseq
        </text>
        <text font-size="24" x="-935.96747" y="-64.33008" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/assoc">
            clojure.core/assoc
        </text>
        <text font-size="24" x="-1367.7927" y="228.31949" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="def-result-channel">
            def-result-channel
        </text>
        <text font-size="24" x="-1315.8" y="261.06842" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/boolean">
            clojure.core/boolean
        </text>
        <text font-size="24" x="795.9461" y="1407.2294" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="defer-onto-queue">
            defer-onto-queue
        </text>
        <text font-size="24" x="553.57605" y="762.6134" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="p/run-pipeline">
            p/run-pipeline
        </text>
        <text font-size="24" x="702.4269" y="-164.52568" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/cancel-receive">
            q/cancel-receive
        </text>
        <text font-size="24" x="673.4857" y="-1346.315" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="close-node!">
            close-node!
        </text>
        <text font-size="24" x="-2139.3853" y="-336.60736" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="def-query-operator">
            def-query-operator
        </text>
        <text font-size="24" x="-1471.891" y="-193.29115" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/pre-aggregate?">
            user/pre-aggregate?
        </text>
        <text font-size="24" x="1350.0398" y="-389.05573" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sympathetic-probe-channel">
            sympathetic-probe-channel
        </text>
        <text font-size="24" x="723.25635" y="-533.7542" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/node*">
            g/node*
        </text>
        <text font-size="24" x="1426.8237" y="-368.36105" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="probe-channel-">
            probe-channel-
        </text>
        <text font-size="24" x="-1296.6938" y="-102.03559" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/pre-aggregate">
            user/pre-aggregate
        </text>
        <text font-size="24" x="-1120.5411" y="2241.6086" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure-ns">
            clojure-ns
        </text>
        <text font-size="24" x="-1144.7656" y="2232.443" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="str/replace">
            str/replace
        </text>
        <text font-size="24" x="182.04395" y="354.1703" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="zip-all">
            zip-all
        </text>
        <text font-size="24" x="197.76698" y="436.60333" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/lock">
            l/lock
        </text>
        <text font-size="24" x="1104.5099" y="-227.73727" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="receive-all">
            receive-all
        </text>
        <text font-size="24" x="1057.9836" y="-153.68524" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/edge">
            g/edge
        </text>
        <text font-size="24" x="663.06476" y="1005.87823" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="context">
            context
        </text>
        <text font-size="24" x="610.65857" y="1011.43024" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/deref">
            clojure.core/deref
        </text>
        <text font-size="24" x="-98.184814" y="-1171.1528" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="enqueue-and-release">
            enqueue-and-release
        </text>
        <text font-size="24" x="288.13705" y="-675.60065" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/release">
            l/release
        </text>
        <text font-size="24" x="-1142.6237" y="-695.58417" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time*">
            time*
        </text>
        <text font-size="24" x="-48.30256" y="2586.6262" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="render-dot-string">
            render-dot-string
        </text>
        <text font-size="24" x="-70.545006" y="2575.7715" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ImageIO/read">
            ImageIO/read
        </text>
        <text font-size="24" x="-290.363" y="-1372.0992" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/apply">
            clojure.core/apply
        </text>
        <text font-size="24" x="-174.28261" y="1627.1298" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="moving-quantiles">
            moving-quantiles
        </text>
        <text font-size="24" x="-220.96114" y="1618.5822" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sample/moving-sampler">
            sample/moving-sampler
        </text>
        <text font-size="24" x="74.27088" y="-206.93141" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/queue">
            q/queue
        </text>
        <text font-size="24" x="59.547062" y="516.3273" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;DistributingPropagator">
            -&gt;DistributingPropagator
        </text>
        <text font-size="24" x="-21.870804" y="491.79163" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/with-lock">
            l/with-lock
        </text>
        <text font-size="24" x="-843.9375" y="1386.1512" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="p/probe-enabled?">
            p/probe-enabled?
        </text>
        <text font-size="24" x="2030.6093" y="910.05273" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace-router">
            trace-router
        </text>
        <text font-size="24" x="1859.1879" y="1061.8606" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/transform-stream">
            c/transform-stream
        </text>
        <text font-size="24" x="-1612.7515" y="218.96022" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/_">
            user/_
        </text>
        <text font-size="24" x="-152.56985" y="-1907.3953" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="split">
            split
        </text>
        <text font-size="24" x="-447.33496" y="-902.452" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/let">
            clojure.core/let
        </text>
        <text font-size="24" x="377.65344" y="-1183.5791" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/task-fn-body">
            user/task-fn-body
        </text>
        <text font-size="24" x="424.23068" y="74.40714" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="probe-result">
            probe-result
        </text>
        <text font-size="24" x="457.66406" y="102.45427" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/async-result?">
            r/async-result?
        </text>
        <text font-size="24" x="1033.5114" y="641.0969" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;EventQueue">
            -&gt;EventQueue
        </text>
        <text font-size="24" x="329.1108" y="850.3716" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/result-channel">
            r/result-channel
        </text>
        <text font-size="24" x="41.47128" y="-1635.3423" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="task">
            task
        </text>
        <text font-size="24" x="190.522" y="-1274.6344" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/task">
            user/task
        </text>
        <text font-size="24" x="-1309.159" y="-182.54036" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/distribute?">
            user/distribute?
        </text>
        <text font-size="24" x="1049.2959" y="114.91769" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="bridge">
            bridge
        </text>
        <text font-size="24" x="1090.3263" y="117.62537" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="n/upstream-callback">
            n/upstream-callback
        </text>
        <text font-size="24" x="-812.05237" y="-1040.1" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-exclusive-lock">
            with-exclusive-lock
        </text>
        <text font-size="24" x="-980.8321" y="1097.0059" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="add-to-last-sub-timing">
            add-to-last-sub-timing
        </text>
        <text font-size="24" x="-959.2259" y="1112.9587" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="context/timer">
            context/timer
        </text>
        <text font-size="24" x="23.284842" y="70.35262" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/listeners">
            r/listeners
        </text>
        <text font-size="24" x="1611.8502" y="482.3275" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;Channel">
            -&gt;Channel
        </text>
        <text font-size="24" x="1648.2521" y="386.50067" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/messages">
            q/messages
        </text>
        <text font-size="24" x="-1150.709" y="-1357.1334" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-task-queue">
            with-task-queue
        </text>
        <text font-size="24" x="-1177.4468" y="-1505.081" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="defn-instrumented">
            defn-instrumented
        </text>
        <text font-size="24" x="1202.6565" y="616.99634" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="consumption">
            consumption
        </text>
        <text font-size="24" x="1215.1548" y="639.351" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/claim">
            r/claim
        </text>
        <text font-size="24" x="-91.58885" y="-1615.8247" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="bound-task">
            bound-task
        </text>
        <text font-size="24" x="48.798374" y="-1573.6533" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/default-executor">
            user/default-executor
        </text>
        <text font-size="24" x="-1641.1017" y="-684.76324" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="def-query-comparator">
            def-query-comparator
        </text>
        <text font-size="24" x="-1898.8888" y="-499.51" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/=">
            clojure.core/=
        </text>
        <text font-size="24" x="-389.78232" y="-226.93973" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="node*">
            node*
        </text>
        <text font-size="24" x="-314.0289" y="-113.31716" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/pr-str">
            clojure.core/pr-str
        </text>
        <text font-size="24" x="-507.7879" y="-1649.0011" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="dosync-yielding">
            dosync-yielding
        </text>
        <text font-size="24" x="1598.7269" y="232.62079" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/release-all">
            l/release-all
        </text>
        <text font-size="24" x="-1134.4246" y="-985.1092" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="wait-stage">
            wait-stage
        </text>
        <text font-size="24" x="1270.1353" y="1333.51" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="query-seqs">
            query-seqs
        </text>
        <text font-size="24" x="1258.1497" y="1297.1047" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/invoke-at">
            time/invoke-at
        </text>
        <text font-size="24" x="105.83187" y="-384.26453" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="read-from-queue">
            read-from-queue
        </text>
        <text font-size="24" x="-2518.8064" y="332.4437" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="floor">
            floor
        </text>
        <text font-size="24" x="-2536.6343" y="313.79828" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Calendar/getInstance">
            Calendar/getInstance
        </text>
        <text font-size="24" x="-34.97772" y="-374.6792" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/identical?">
            clojure.core/identical?
        </text>
        <text font-size="24" x="-837.00757" y="-553.4868" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-instrumentation">
            with-instrumentation
        </text>
        <text font-size="24" x="713.10956" y="-942.60645" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/drained?">
            q/drained?
        </text>
        <text font-size="24" x="-1587.6461" y="-822.1987" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="def-query-lookup">
            def-query-lookup
        </text>
        <text font-size="24" x="-220.80075" y="-2066.175" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/channel">
            user/channel
        </text>
        <text font-size="24" x="121.36581" y="1343.4989" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="periodically">
            periodically
        </text>
        <text font-size="24" x="133.62346" y="1372.6897" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/invoke-repeatedly">
            t/invoke-repeatedly
        </text>
        <text font-size="24" x="1029.3757" y="-57.0763" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/terminal-propagator">
            g/terminal-propagator
        </text>
        <text font-size="24" x="-263.56503" y="-467.752" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="transform-message">
            transform-message
        </text>
        <text font-size="24" x="-2270.8264" y="-1532.64" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="parse-descriptor">
            parse-descriptor
        </text>
        <text font-size="24" x="-2270.6614" y="-1507.8865" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="p/parse-string-query">
            p/parse-string-query
        </text>
        <text font-size="24" x="-1203.5033" y="-353.37393" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/when-let">
            clojure.core/when-let
        </text>
        <text font-size="24" x="-293.7734" y="703.034" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="moving-sampler">
            moving-sampler
        </text>
        <text font-size="24" x="-151.58188" y="573.20715" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/now">
            t/now
        </text>
        <text font-size="24" x="-955.6461" y="2325.136" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="on-new-probe">
            on-new-probe
        </text>
        <text font-size="24" x="-973.8864" y="2339.5261" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/receive-all">
            c/receive-all
        </text>
        <text font-size="24" x="-2171.7058" y="1284.3915" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="closed-channel">
            closed-channel
        </text>
        <text font-size="24" x="-2186.7964" y="1266.3557" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/close">
            g/close
        </text>
        <text font-size="24" x="-386.71622" y="-1228.0999" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="set-state!">
            set-state!
        </text>
        <text font-size="24" x="199.02327" y="-1092.4795" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/assoc-record">
            user/assoc-record
        </text>
        <text font-size="24" x="1814.5682" y="1090.8184" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="query-streams">
            query-streams
        </text>
        <text font-size="24" x="-772.85626" y="-1182.0009" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-lock">
            with-lock
        </text>
        <text font-size="24" x="-745.24225" y="-994.449" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/release">
            user/release
        </text>
        <text font-size="24" x="837.3086" y="-206.36755" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/receive">
            q/receive
        </text>
        <text font-size="24" x="-625.9669" y="226.62459" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/success">
            user/success
        </text>
        <text font-size="24" x="-1082.1746" y="224.81793" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/enqueued-timer">
            t/enqueued-timer
        </text>
        <text font-size="24" x="-187.99478" y="1392.7194" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="timed-result">
            timed-result
        </text>
        <text font-size="24" x="-258.4531" y="1379.3192" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/invoke-in">
            t/invoke-in
        </text>
        <text font-size="24" x="-960.40894" y="475.87485" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="potemkin/fast-bound-fn*">
            potemkin/fast-bound-fn*
        </text>
        <text font-size="24" x="-1833.5244" y="-385.4914" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/str">
            clojure.core/str
        </text>
        <text font-size="24" x="759.7919" y="-306.27142" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/error-queue">
            q/error-queue
        </text>
        <text font-size="24" x="601.70935" y="-155.8537" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/transactional-copy">
            q/transactional-copy
        </text>
        <text font-size="24" x="-877.51587" y="1354.5259" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="enqueued-timer-">
            enqueued-timer-
        </text>
        <text font-size="24" x="-852.579" y="1309.4395" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ex/probe-enabled?">
            ex/probe-enabled?
        </text>
        <text font-size="24" x="-468.558" y="-2016.4122" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sink-&gt;&gt;">
            sink-&gt;&gt;
        </text>
        <text font-size="24" x="-362.57138" y="-2050.9827" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/-&gt;&gt;">
            clojure.core/-&gt;&gt;
        </text>
        <text font-size="24" x="618.00775" y="1052.5753" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="wait-for-message">
            wait-for-message
        </text>
        <text font-size="24" x="-33.303715" y="-994.248" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/enqueue">
            q/enqueue
        </text>
        <text font-size="24" x="291.7055" y="526.6249" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="zip">
            zip
        </text>
        <text font-size="24" x="9.305731" y="1650.0953" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="partition-every-op">
            partition-every-op
        </text>
        <text font-size="24" x="18.72549" y="1675.5511" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/period">
            t/period
        </text>
        <text font-size="24" x="-2454.008" y="-33.144585" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sample">
            sample
        </text>
        <text font-size="24" x="-2462.5032" y="-12.106518" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sample/sampler">
            sample/sampler
        </text>
        <text font-size="24" x="-1113.9785" y="-535.4058" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.tools.logging/error">
            clojure.tools.logging/error
        </text>
        <text font-size="24" x="144.90727" y="979.22046" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/success">
            r/success
        </text>
        <text font-size="24" x="452.92645" y="-487.54544" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/ref">
            clojure.core/ref
        </text>
        <text font-size="24" x="-878.18616" y="-1649.6932" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace">
            trace
        </text>
        <text font-size="24" x="-820.4572" y="-1542.3418" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/channel-&gt;lazy-seq">
            user/channel-&gt;lazy-seq
        </text>
        <text font-size="24" x="104.9642" y="-1486.9231" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace/instrumented-fn">
            trace/instrumented-fn
        </text>
        <text font-size="24" x="360.46722" y="25.718082" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="pipelined-client">
            pipelined-client
        </text>
        <text font-size="24" x="332.5391" y="26.887863" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lock/lock">
            lock/lock
        </text>
        <text font-size="24" x="1220.9423" y="-447.61923" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cancel-callback">
            cancel-callback
        </text>
        <text font-size="24" x="1244.2278" y="-442.14417" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/cancel">
            g/cancel
        </text>
        <text font-size="24" x="853.1205" y="-652.15063" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/error-to-listeners">
            user/error-to-listeners
        </text>
        <text font-size="24" x="1221.8944" y="768.0103" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="dispatch-consumption">
            dispatch-consumption
        </text>
        <text font-size="24" x="1210.8805" y="718.0782" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/error!">
            r/error!
        </text>
        <text font-size="24" x="568.2368" y="734.92883" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="drop-while*">
            drop-while*
        </text>
        <text font-size="24" x="32.38643" y="-869.5126" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ensure-queue">
            ensure-queue
        </text>
        <text font-size="24" x="-7.430107" y="-249.25833" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/transactional-queue">
            q/transactional-queue
        </text>
        <text font-size="24" x="-222.27304" y="-346.37497" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/if-not">
            clojure.core/if-not
        </text>
        <text font-size="24" x="-54.942974" y="525.02905" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;ExponentiallyDecayingSampler">
            -&gt;ExponentiallyDecayingSampler
        </text>
        <text font-size="24" x="1461.6146" y="-176.81711" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="render-propagation">
            render-propagation
        </text>
        <text font-size="24" x="1437.7489" y="-185.00659" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/render-propagation">
            g/render-propagation
        </text>
        <text font-size="24" x="1032.1129" y="-106.36425" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="channel-&gt;lazy-seq">
            channel-&gt;lazy-seq
        </text>
        <text font-size="24" x="2052.4636" y="788.16565" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="aggregating-trace-router">
            aggregating-trace-router
        </text>
        <text font-size="24" x="1967.0348" y="992.2127" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/*stream-generator*">
            c/*stream-generator*
        </text>
        <text font-size="24" x="-707.854" y="695.2693" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/expiring-result">
            r/expiring-result
        </text>
        <text font-size="24" x="-976.3233" y="1475.2233" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;EnqueuedTimer">
            -&gt;EnqueuedTimer
        </text>
        <text font-size="24" x="-974.7346" y="1432.2697" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ex/trace-error">
            ex/trace-error
        </text>
        <text font-size="24" x="-928.8761" y="-1794.0883" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="transform-fn-bodies">
            transform-fn-bodies
        </text>
        <text font-size="24" x="462.03607" y="253.31763" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="enqueue">
            enqueue
        </text>
        <text font-size="24" x="471.72818" y="275.99878" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="u/enqueue">
            u/enqueue
        </text>
        <text font-size="24" x="468.63492" y="343.03345" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="error">
            error
        </text>
        <text font-size="24" x="493.74664" y="356.2306" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="u/error">
            u/error
        </text>
        <text font-size="24" x="-796.7846" y="-1753.3257" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="enable-unchecked-math">
            enable-unchecked-math
        </text>
        <text font-size="24" x="-637.3992" y="-1414.441" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/*unchecked-math*">
            clojure.core/*unchecked-math*
        </text>
        <text font-size="24" x="-978.5471" y="207.15266" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ex/execute">
            ex/execute
        </text>
        <text font-size="24" x="131.16315" y="287.8427" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/with-exclusive-lock">
            l/with-exclusive-lock
        </text>
        <text font-size="24" x="1553.9143" y="-32.065964" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/propagate">
            g/propagate
        </text>
        <text font-size="24" x="-1365.9812" y="-425.3967" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/periodic?">
            user/periodic?
        </text>
        <text font-size="24" x="626.6385" y="-242.87672" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/dispatch-message">
            q/dispatch-message
        </text>
        <text font-size="24" x="734.6823" y="-727.1981" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/enqueue-to-listeners">
            user/enqueue-to-listeners
        </text>
        <text font-size="24" x="766.02954" y="-131.59314" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/release-exclusive">
            l/release-exclusive
        </text>
        <text font-size="24" x="1484.9521" y="-156.31987" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/receiver-node">
            c/receiver-node
        </text>
        <text font-size="24" x="216.38005" y="418.39117" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="result-channel">
            result-channel
        </text>
        <text font-size="24" x="1833.8568" y="1016.97766" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/with-task-queue">
            time/with-task-queue
        </text>
        <text font-size="24" x="1264.6476" y="705.433" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/error-result">
            r/error-result
        </text>
        <text font-size="24" x="323.981" y="-1596.6807" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-context">
            with-context
        </text>
        <text font-size="24" x="-1028.2607" y="2397.004" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/on-closed">
            c/on-closed
        </text>
        <text font-size="24" x="470.09457" y="1297.3383" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="variance">
            variance
        </text>
        <text font-size="24" x="450.95074" y="1336.6923" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="var/create-variance">
            var/create-variance
        </text>
        <text font-size="24" x="1625.4991" y="376.75714" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="node-data">
            node-data
        </text>
        <text font-size="24" x="-214.56958" y="1170.9366" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="idle-result">
            idle-result
        </text>
        <text font-size="24" x="654.2688" y="-497.8024" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/aset">
            clojure.core/aset
        </text>
        <text font-size="24" x="10.782398" y="1184.6227" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Math/exp">
            Math/exp
        </text>
        <text font-size="24" x="39.812508" y="446.61237" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="n/closed-result">
            n/closed-result
        </text>
        <text font-size="24" x="1607.5194" y="433.29132" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/queue">
            g/queue
        </text>
        <text font-size="24" x="-894.2381" y="170.7754" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="java.lang.System/currentTimeMillis">
            java.lang.System/currentTimeMillis
        </text>
        <text font-size="24" x="49.27114" y="1841.0995" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="merge-group-by">
            merge-group-by
        </text>
        <text font-size="24" x="-1374.2661" y="-236.50742" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/result-channel">
            user/result-channel
        </text>
        <text font-size="24" x="-283.6097" y="-215.53143" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/make-record">
            user/make-record
        </text>
        <text font-size="24" x="127.75504" y="-805.42694" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/set-state">
            user/set-state
        </text>
        <text font-size="24" x="719.04474" y="-238.75694" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/error">
            q/error
        </text>
        <text font-size="24" x="302.12262" y="-1208.983" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/if-let">
            clojure.core/if-let
        </text>
        <text font-size="24" x="177.57474" y="-606.5544" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/NodeState">
            user/NodeState
        </text>
        <text font-size="24" x="-2227.7122" y="952.2599" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="analyze-timings">
            analyze-timings
        </text>
        <text font-size="24" x="-2235.4011" y="925.1068" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="stats/sum">
            stats/sum
        </text>
        <text font-size="24" x="-1022.3322" y="-1352.3345" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-period">
            with-period
        </text>
        <text font-size="24" x="645.23883" y="1058.5548" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="channel-&gt;lazy-seq-">
            channel-&gt;lazy-seq-
        </text>
        <text font-size="24" x="-832.9992" y="-382.33737" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="pr/probe-result">
            pr/probe-result
        </text>
        <text font-size="24" x="-72.61208" y="-73.579254" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/when">
            clojure.core/when
        </text>
        <text font-size="24" x="-644.1339" y="-712.72675" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/list*">
            clojure.core/list*
        </text>
        <text font-size="24" x="184.54079" y="-276.52997" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/ensure-queue">
            user/ensure-queue
        </text>
        <text font-size="24" x="-860.5007" y="641.764" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/comp">
            clojure.core/comp
        </text>
        <text font-size="24" x="304.0103" y="-869.0659" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/Context">
            user/Context
        </text>
        <text font-size="24" x="602.02466" y="975.28613" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="topic-channel-cache">
            topic-channel-cache
        </text>
        <text font-size="24" x="2012.9431" y="-1541.967" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="format-duration">
            format-duration
        </text>
        <text font-size="24" x="-674.10223" y="-880.7123" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace*">
            trace*
        </text>
        <text font-size="24" x="1934.457" y="664.31213" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/distributable-chain">
            c/distributable-chain
        </text>
        <text font-size="24" x="-415.6468" y="-1892.3228" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="join-&gt;&gt;">
            join-&gt;&gt;
        </text>
        <text font-size="24" x="510.73807" y="-2648.8977" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="filter*">
            filter*
        </text>
        <text font-size="24" x="493.77075" y="-2664.1067" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/downstream-node">
            g/downstream-node
        </text>
        <text font-size="24" x="1668.7361" y="130.87344" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/acquire-all">
            l/acquire-all
        </text>
        <text font-size="24" x="-931.1932" y="1520.2842" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;Timer">
            -&gt;Timer
        </text>
        <text font-size="24" x="-919.46643" y="1491.4908" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="System/nanoTime">
            System/nanoTime
        </text>
        <text font-size="24" x="-216.37587" y="1001.9252" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/subscribe">
            r/subscribe
        </text>
        <text font-size="24" x="-1166.8755" y="2245.8389" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure-fn">
            clojure-fn
        </text>
        <text font-size="24" x="-1418.0502" y="-358.70267" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/namespace">
            clojure.core/namespace
        </text>
        <text font-size="24" x="706.59406" y="958.01465" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="view-image">
            view-image
        </text>
        <text font-size="24" x="722.9799" y="938.64856" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="java.awt.EventQueue/invokeLater">
            java.awt.EventQueue/invokeLater
        </text>
        <text font-size="24" x="1890.7538" y="614.0788" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/non-distributable-chain">
            c/non-distributable-chain
        </text>
        <text font-size="24" x="-1088.6951" y="-664.2616" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.core.result/success">
            lamina.core.result/success
        </text>
        <text font-size="24" x="-602.4128" y="0.099227905" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/or">
            clojure.core/or
        </text>
        <text font-size="24" x="-1191.3268" y="135.32574" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/doall">
            clojure.core/doall
        </text>
        <text font-size="24" x="-398.12393" y="554.99866" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="context/with-context">
            context/with-context
        </text>
        <text font-size="24" x="-558.372" y="460.96518" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/timer">
            t/timer
        </text>
        <text font-size="24" x="1779.4926" y="752.309" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cache/router">
            cache/router
        </text>
        <text font-size="24" x="648.15515" y="1030.8094" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;DistilledTiming">
            -&gt;DistilledTiming
        </text>
        <text font-size="24" x="-824.4397" y="-1694.1112" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="channel-seq">
            channel-seq
        </text>
        <text font-size="24" x="-521.6658" y="-696.19226" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/pipeline">
            user/pipeline
        </text>
        <text font-size="24" x="2596.9023" y="-382.81033" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;sorted-double-array">
            -&gt;sorted-double-array
        </text>
        <text font-size="24" x="2578.1655" y="-370.19943" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Arrays/sort">
            Arrays/sort
        </text>
        <text font-size="24" x="1649.4702" y="249.79973" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sample-graph">
            sample-graph
        </text>
        <text font-size="24" x="626.22754" y="962.40314" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="invoke-repeatedly">
            invoke-repeatedly
        </text>
        <text font-size="24" x="1420.0469" y="-400.661" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/channel*">
            c/channel*
        </text>
        <text font-size="24" x="774.88586" y="1371.92" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/invoke-at">
            t/invoke-at
        </text>
        <text font-size="24" x="-527.61584" y="-1380.9003" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="channel*">
            channel*
        </text>
        <text font-size="24" x="-1461.16" y="-95.47947" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/getName">
            user/getName
        </text>
        <text font-size="24" x="-957.5961" y="-1723.4191" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="enqueued-timer">
            enqueued-timer
        </text>
        <text font-size="24" x="38.31358" y="-1372.8896" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/dosync">
            clojure.core/dosync
        </text>
        <text font-size="24" x="6.3919387" y="1837.9575" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="group-by-op">
            group-by-op
        </text>
        <text font-size="24" x="13.168208" y="1869.6223" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/transform-stream">
            q/transform-stream
        </text>
        <text font-size="24" x="-909.2494" y="-1588.232" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="deftoken">
            deftoken
        </text>
        <text font-size="24" x="-168.38173" y="-1200.6978" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/receive-all">
            user/receive-all
        </text>
        <text font-size="24" x="906.17914" y="2434.9143" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="receive">
            receive
        </text>
        <text font-size="24" x="911.6358" y="2458.0986" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/receive">
            g/receive
        </text>
        <text font-size="24" x="2494.2026" y="-755.0014" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sum-op">
            sum-op
        </text>
        <text font-size="24" x="2516.8733" y="-753.5957" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.stats/sum">
            lamina.stats/sum
        </text>
        <text font-size="24" x="208.31023" y="896.22394" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="drained-result">
            drained-result
        </text>
        <text font-size="24" x="191.80981" y="874.5602" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/drained-result">
            g/drained-result
        </text>
        <text font-size="24" x="-795.33887" y="-432.40732" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/capture-timings">
            user/capture-timings
        </text>
        <text font-size="24" x="393.55542" y="-373.1127" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/case">
            clojure.core/case
        </text>
        <text font-size="24" x="-1605.114" y="-632.9712" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/*ns*">
            clojure.core/*ns*
        </text>
        <text font-size="24" x="745.8126" y="-601.1401" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/unchecked-inc">
            clojure.core/unchecked-inc
        </text>
        <text font-size="24" x="2154.6833" y="-958.39685" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ground">
            ground
        </text>
        <text font-size="24" x="2133.843" y="-949.4258" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/ground">
            g/ground
        </text>
        <text font-size="24" x="-321.8574" y="1324.9652" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="check-idle">
            check-idle
        </text>
        <text font-size="24" x="448.57388" y="1280.8505" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="var/variance">
            var/variance
        </text>
        <text font-size="24" x="1433.3392" y="860.8662" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="closed?">
            closed?
        </text>
        <text font-size="24" x="1409.8761" y="878.1896" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/closed?">
            g/closed?
        </text>
        <text font-size="24" x="-855.91016" y="-1405.1785" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/enqueued-timer-">
            user/enqueued-timer-
        </text>
        <text font-size="24" x="1007.23846" y="97.721146" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="n/downstream-callback">
            n/downstream-callback
        </text>
        <text font-size="24" x="49.062225" y="1873.3744" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/periodic-chain?">
            q/periodic-chain?
        </text>
        <text font-size="24" x="-487.06638" y="470.64487" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/mark-error">
            t/mark-error
        </text>
        <text font-size="24" x="1466.1565" y="287.6324" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/node?">
            g/node?
        </text>
        <text font-size="24" x="1000.13184" y="-100.783905" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/consume">
            g/consume
        </text>
        <text font-size="24" x="1463.9808" y="1245.8981" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/advance">
            time/advance
        </text>
        <text font-size="24" x="-866.8465" y="25.350407" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/timing">
            user/timing
        </text>
        <text font-size="24" x="568.5999" y="-499.49" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/object-array">
            clojure.core/object-array
        </text>
        <text font-size="24" x="823.66986" y="345.2858" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="thread-factory">
            thread-factory
        </text>
        <text font-size="24" x="-300.5133" y="11.06826" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/error">
            user/error
        </text>
        <text font-size="24" x="2000.3463" y="770.4788" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cache/inner-cache">
            cache/inner-cache
        </text>
        <text font-size="24" x="-623.9122" y="307.10876" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/IPipeline">
            user/IPipeline
        </text>
        <text font-size="24" x="-2538.5974" y="351.43353" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="TimeZone/getTimeZone">
            TimeZone/getTimeZone
        </text>
        <text font-size="24" x="128.00262" y="-267.7468" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/check-for-drained">
            user/check-for-drained
        </text>
        <text font-size="24" x="2009.5214" y="828.4106" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/parse-descriptor">
            q/parse-descriptor
        </text>
        <text font-size="24" x="-822.92224" y="-705.3639" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/acquire-exclusive">
            user/acquire-exclusive
        </text>
        <text font-size="24" x="-615.8838" y="387.5136" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/run">
            user/run
        </text>
        <text font-size="24" x="366.05777" y="-1004.8391" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/stacks">
            user/stacks
        </text>
        <text font-size="24" x="786.2926" y="43.799797" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="p/restart">
            p/restart
        </text>
        <text font-size="24" x="1532.2294" y="-89.25002" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;SympatheticProbeChannel">
            -&gt;SympatheticProbeChannel
        </text>
        <text font-size="24" x="162.79411" y="937.269" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="closed-result">
            closed-result
        </text>
        <text font-size="24" x="-724.048" y="-1438.6564" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/channel-&gt;seq">
            user/channel-&gt;seq
        </text>
        <text font-size="24" x="-154.59317" y="822.4973" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="subscribe">
            subscribe
        </text>
        <text font-size="24" x="-199.92453" y="1035.4711" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="on-realized">
            on-realized
        </text>
        <text font-size="24" x="2062.1406" y="737.4491" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cache/subscribe">
            cache/subscribe
        </text>
        <text font-size="24" x="-1397.7552" y="423.3141" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/long">
            clojure.core/long
        </text>
        <text font-size="24" x="-1130.4303" y="2209.861" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="message-str">
            message-str
        </text>
        <text font-size="24" x="-925.99744" y="957.80316" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/mark-return">
            t/mark-return
        </text>
        <text font-size="24" x="594.6594" y="-416.50235" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/result-seq">
            user/result-seq
        </text>
        <text font-size="24" x="1395.126" y="-370.31012" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/on-state-changed">
            g/on-state-changed
        </text>
        <text font-size="24" x="1504.2346" y="-2100.0664" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="sum">
            sum
        </text>
        <text font-size="24" x="1481.1359" y="-2106.68" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Double/longBitsToDouble">
            Double/longBitsToDouble
        </text>
        <text font-size="24" x="590.6685" y="2531.7805" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="transactional?">
            transactional?
        </text>
        <text font-size="24" x="594.4662" y="2555.311" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/transactional?">
            g/transactional?
        </text>
        <text font-size="24" x="867.2896" y="1177.3383" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/join">
            g/join
        </text>
        <text font-size="24" x="575.74695" y="823.2426" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="reductions*">
            reductions*
        </text>
        <text font-size="24" x="-839.25305" y="542.33105" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/gen-timer">
            user/gen-timer
        </text>
        <text font-size="24" x="417.14496" y="-1082.8656" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/LinkedList">
            user/LinkedList
        </text>
        <text font-size="24" x="2453.9568" y="514.04663" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="rate-op">
            rate-op
        </text>
        <text font-size="24" x="2440.1887" y="495.6656" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.stats/rate">
            lamina.stats/rate
        </text>
        <text font-size="24" x="154.0776" y="-33.427906" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/loop">
            clojure.core/loop
        </text>
        <text font-size="24" x="951.46533" y="-438.71606" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="drain-queue">
            drain-queue
        </text>
        <text font-size="24" x="974.46326" y="-444.00565" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/drain">
            q/drain
        </text>
        <text font-size="24" x="-26.56083" y="2574.798" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="io/input-stream">
            io/input-stream
        </text>
        <text font-size="24" x="2071.5337" y="839.013" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/period">
            time/period
        </text>
        <text font-size="24" x="395.9624" y="53.557137" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/result">
            r/result
        </text>
        <text font-size="24" x="-939.255" y="1006.9365" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="handle-redirect">
            handle-redirect
        </text>
        <text font-size="24" x="1009.1104" y="1437.8054" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Integer/MAX_VALUE">
            Integer/MAX_VALUE
        </text>
        <text font-size="24" x="-1201.607" y="-126.2903" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/getNamespace">
            user/getNamespace
        </text>
        <text font-size="24" x="-981.54944" y="-2666.793" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="instrument">
            instrument
        </text>
        <text font-size="24" x="-1002.8189" y="-2657.7275" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/unquote">
            clojure.core/unquote
        </text>
        <text font-size="24" x="658.6996" y="970.3644" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="dependent-topic-channel-cache">
            dependent-topic-channel-cache
        </text>
        <text font-size="24" x="-274.51892" y="163.40211" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/run-pipeline">
            user/run-pipeline
        </text>
        <text font-size="24" x="-788.84467" y="450.70456" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/identity">
            clojure.core/identity
        </text>
        <text font-size="24" x="1956.1531" y="926.471" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/with-period">
            time/with-period
        </text>
        <text font-size="24" x="1567.9412" y="489.87613" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/split">
            g/split
        </text>
        <text font-size="24" x="-469.23163" y="-1099.6656" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="handle-request">
            handle-request
        </text>
        <text font-size="24" x="-2200.2976" y="948.317" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="stats/moving-quantiles">
            stats/moving-quantiles
        </text>
        <text font-size="24" x="-184.38225" y="1095.6725" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="close-on-idle">
            close-on-idle
        </text>
        <text font-size="24" x="1053.293" y="156.96085" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="n/link">
            n/link
        </text>
        <text font-size="24" x="-1036.3807" y="-645.2463" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.core.utils/in-transaction?">
            lamina.core.utils/in-transaction?
        </text>
        <text font-size="24" x="-1089.9153" y="2380.3108" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/channel">
            c/channel
        </text>
        <text font-size="24" x="78.92868" y="-73.888664" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/SuccessResult">
            user/SuccessResult
        </text>
        <text font-size="24" x="2003.7721" y="-1392.223" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="str/split-lines">
            str/split-lines
        </text>
        <text font-size="24" x="978.599" y="1118.9875" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/node">
            g/node
        </text>
        <text font-size="24" x="772.6277" y="543.7159" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="channel-cache">
            channel-cache
        </text>
        <text font-size="24" x="640.4278" y="988.3869" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="watch-channel">
            watch-channel
        </text>
        <text font-size="24" x="-303.10687" y="674.22253" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/hours">
            t/hours
        </text>
        <text font-size="24" x="324.66284" y="-814.2434" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/set-state!">
            user/set-state!
        </text>
        <text font-size="24" x="237.19458" y="1167.2999" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="join">
            join
        </text>
        <text font-size="24" x="-1045.3217" y="-31.16682" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/-">
            clojure.core/-
        </text>
        <text font-size="24" x="75.81722" y="1700.1575" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="moving-average">
            moving-average
        </text>
        <text font-size="24" x="136.67148" y="1696.2511" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="avg/moving-average">
            avg/moving-average
        </text>
        <text font-size="24" x="468.56873" y="-607.9733" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/in-transaction?">
            user/in-transaction?
        </text>
        <text font-size="24" x="-536.227" y="1310.4122" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/drain">
            g/drain
        </text>
        <text font-size="24" x="646.3885" y="820.5354" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="reduce*">
            reduce*
        </text>
        <text font-size="24" x="640.67126" y="-84.42781" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/acquire">
            l/acquire
        </text>
        <text font-size="24" x="165.5045" y="1422.6233" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="distribute-aggregate">
            distribute-aggregate
        </text>
        <text font-size="24" x="-384.8755" y="321.18527" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/mark-waiting">
            t/mark-waiting
        </text>
        <text font-size="24" x="-1098.6019" y="-1292.9067" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/instrumented-fn">
            user/instrumented-fn
        </text>
        <text font-size="24" x="9.94095" y="1160.3027" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="priority">
            priority
        </text>
        <text font-size="24" x="-223.8406" y="1391.7777" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="expiring-result">
            expiring-result
        </text>
        <text font-size="24" x="-960.8635" y="-15.117565" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/enqueue">
            user/enqueue
        </text>
        <text font-size="24" x="-60.90764" y="-178.14569" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/and">
            clojure.core/and
        </text>
        <text font-size="24" x="547.0667" y="-602.00446" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/dec">
            clojure.core/dec
        </text>
        <text font-size="24" x="450.6021" y="-765.0789" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/close">
            q/close
        </text>
        <text font-size="24" x="208.73938" y="-130.11333" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/int">
            clojure.core/int
        </text>
        <text font-size="24" x="1451.1771" y="841.8751" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/closed?">
            q/closed?
        </text>
        <text font-size="24" x="25.991465" y="-83.30582" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/instance?">
            clojure.core/instance?
        </text>
        <text font-size="24" x="-177.53917" y="1004.00195" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="on-event">
            on-event
        </text>
        <text font-size="24" x="-207.9248" y="-672.7655" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/cond">
            clojure.core/cond
        </text>
        <text font-size="24" x="-960.9692" y="1561.4985" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="dummy-timer">
            dummy-timer
        </text>
        <text font-size="24" x="-955.875" y="1537.6807" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="p/error-probe-channel">
            p/error-probe-channel
        </text>
        <text font-size="24" x="1510.9723" y="-2073.9475" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Double/doubleToRawLongBits">
            Double/doubleToRawLongBits
        </text>
        <text font-size="24" x="1571.6842" y="169.08464" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="read-channel">
            read-channel
        </text>
        <text font-size="24" x="1593.5516" y="179.22577" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/read-node">
            g/read-node
        </text>
        <text font-size="24" x="-777.365" y="-846.41376" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/acquire">
            user/acquire
        </text>
        <text font-size="24" x="-2638.8926" y="-709.1656" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="parse-lookup">
            parse-lookup
        </text>
        <text font-size="24" x="-2625.0466" y="-691.1911" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="str/split">
            str/split
        </text>
        <text font-size="24" x="1024.3984" y="721.9542" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/add-listener">
            r/add-listener
        </text>
        <text font-size="24" x="-312.1339" y="-772.5485" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/probe-channel">
            user/probe-channel
        </text>
        <text font-size="24" x="-657.0039" y="163.5864" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/result-callback">
            user/result-callback
        </text>
        <text font-size="24" x="481.20895" y="303.1733" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;Message">
            -&gt;Message
        </text>
        <text font-size="24" x="-913.43396" y="-365.47803" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/timed-result">
            r/timed-result
        </text>
        <text font-size="24" x="-1211.6414" y="-195.56755" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/aggregate">
            user/aggregate
        </text>
        <text font-size="24" x="-608.5419" y="1290.8701" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/now">
            q/now
        </text>
        <text font-size="24" x="855.3916" y="-338.4485" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/try-acquire-exclusive">
            l/try-acquire-exclusive
        </text>
        <text font-size="24" x="1989.35" y="-1497.6765" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="parser">
            parser
        </text>
        <text font-size="24" x="-1015.5445" y="-1181.7202" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/binding">
            clojure.core/binding
        </text>
        <text font-size="24" x="2333.6135" y="1118.8326" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="view-propagation">
            view-propagation
        </text>
        <text font-size="24" x="2354.7434" y="1102.5818" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="core/view-image">
            core/view-image
        </text>
        <text font-size="24" x="-874.5054" y="-1274.978" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/token">
            user/token
        </text>
        <text font-size="24" x="-2450.1301" y="-738.1788" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="release-named-channel">
            release-named-channel
        </text>
        <text font-size="24" x="-2459.7686" y="-758.24866" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cache/release">
            cache/release
        </text>
        <text font-size="24" x="-54.248432" y="-1443.5535" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/merge">
            clojure.core/merge
        </text>
        <text font-size="24" x="1391.2507" y="1291.1432" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/non-realtime-task-queue">
            time/non-realtime-task-queue
        </text>
        <text font-size="24" x="756.5659" y="385.33688" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="receive-in-order">
            receive-in-order
        </text>
        <text font-size="24" x="748.70715" y="353.722" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="p/complete">
            p/complete
        </text>
        <text font-size="24" x="705.5554" y="-915.5715" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="drained?">
            drained?
        </text>
        <text font-size="24" x="311.0155" y="822.56665" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="error-result">
            error-result
        </text>
        <text font-size="24" x="871.50214" y="-23.428572" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/defer-within-transaction">
            r/defer-within-transaction
        </text>
        <text font-size="24" x="-740.1078" y="-1322.6656" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/trace*">
            user/trace*
        </text>
        <text font-size="24" x="1047.4364" y="73.13956" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="n/on-state-changed">
            n/on-state-changed
        </text>
        <text font-size="24" x="1211.4034" y="795.9175" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/success!">
            r/success!
        </text>
        <text font-size="24" x="119.18572" y="259.69977" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="close-and-clear">
            close-and-clear
        </text>
        <text font-size="24" x="83.237465" y="-1945.3969" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/siphon">
            user/siphon
        </text>
        <text font-size="24" x="794.8041" y="-493.75937" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/defer-within-transaction">
            user/defer-within-transaction
        </text>
        <text font-size="24" x="-739.74097" y="-679.27325" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/release-exclusive">
            user/release-exclusive
        </text>
        <text font-size="24" x="212.04912" y="364.3402" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="System/arraycopy">
            System/arraycopy
        </text>
        <text font-size="24" x="2056.6038" y="-1344.3223" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Pattern/compile">
            Pattern/compile
        </text>
        <text font-size="24" x="-59.771503" y="1541.5458" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="bridge-accumulate">
            bridge-accumulate
        </text>
        <text font-size="24" x="-1136.9326" y="58.27552" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace-context/context">
            trace-context/context
        </text>
        <text font-size="24" x="-2556.4253" y="330.4636" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="add">
            add
        </text>
        <text font-size="24" x="-816.69586" y="-135.251" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/probe-enabled?">
            user/probe-enabled?
        </text>
        <text font-size="24" x="535.5667" y="736.88666" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="drop*">
            drop*
        </text>
        <text font-size="24" x="501.17627" y="825.3347" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="partition-">
            partition-
        </text>
        <text font-size="24" x="-736.14636" y="235.9767" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/result">
            user/result
        </text>
        <text font-size="24" x="-191.43541" y="956.1392" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="on-error">
            on-error
        </text>
        <text font-size="24" x="572.6322" y="1009.9312" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="persistent-connection">
            persistent-connection
        </text>
        <text font-size="24" x="-692.41266" y="390.5751" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/run-finally">
            user/run-finally
        </text>
        <text font-size="24" x="-356.20288" y="2499.309" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="num-cores">
            num-cores
        </text>
        <text font-size="24" x="-341.06146" y="2518.566" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Runtime/getRuntime">
            Runtime/getRuntime
        </text>
        <text font-size="24" x="1516.5178" y="638.7245" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/error-value">
            r/error-value
        </text>
        <text font-size="24" x="1395.4746" y="178.22289" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace-descriptor">
            trace-descriptor
        </text>
        <text font-size="24" x="1418.7853" y="181.68361" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/success-value">
            r/success-value
        </text>
        <text font-size="24" x="462.05145" y="853.53687" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="last*">
            last*
        </text>
        <text font-size="24" x="-1616.0138" y="102.788605" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/reify">
            clojure.core/reify
        </text>
        <text font-size="24" x="1134.6285" y="-251.74112" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/link">
            g/link
        </text>
        <text font-size="24" x="-286.16043" y="524.89935" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Thread/interrupted">
            Thread/interrupted
        </text>
        <text font-size="24" x="2370.7793" y="1123.8417" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="view-graph">
            view-graph
        </text>
        <text font-size="24" x="-1080.9382" y="131.35141" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/map">
            clojure.core/map
        </text>
        <text font-size="24" x="107.53494" y="204.69383" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;ResultChannel">
            -&gt;ResultChannel
        </text>
        <text font-size="24" x="100.15661" y="177.66321" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="codes/error-code-&gt;exception">
            codes/error-code-&gt;exception
        </text>
        <text font-size="24" x="513.409" y="-697.07715" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/ref-set">
            clojure.core/ref-set
        </text>
        <text font-size="24" x="1537.6235" y="-11.91885" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;SplicedChannel">
            -&gt;SplicedChannel
        </text>
        <text font-size="24" x="-465.6126" y="627.4238" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="split-node">
            split-node
        </text>
        <text font-size="24" x="-440.57797" y="624.11035" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/asymmetric-lock">
            l/asymmetric-lock
        </text>
        <text font-size="24" x="-3.3878636" y="-1415.3628" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/executor">
            user/executor
        </text>
        <text font-size="24" x="-280.3064" y="1363.744" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="with-timeout">
            with-timeout
        </text>
        <text font-size="24" x="-1232.9645" y="2505.3062" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="print-timing-result">
            print-timing-result
        </text>
        <text font-size="24" x="-1216.437" y="2520.8538" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/format-timing">
            t/format-timing
        </text>
        <text font-size="24" x="832.00385" y="-570.1725" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/keyword?">
            clojure.core/keyword?
        </text>
        <text font-size="24" x="483.0832" y="381.28198" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="force-error">
            force-error
        </text>
        <text font-size="24" x="-197.63832" y="-152.51947" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/try*">
            user/try*
        </text>
        <text font-size="24" x="518.52673" y="-165.5629" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/try-acquire">
            l/try-acquire
        </text>
        <text font-size="24" x="2349.6492" y="1140.0918" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/node-frame">
            g/node-frame
        </text>
        <text font-size="24" x="-391.282" y="186.02776" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/async-result?">
            user/async-result?
        </text>
        <text font-size="24" x="-245.08797" y="447.23547" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="pr/probe-channel">
            pr/probe-channel
        </text>
        <text font-size="24" x="-1839.2418" y="-2011.858" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="in-transaction?">
            in-transaction?
        </text>
        <text font-size="24" x="-1843.1052" y="-1988.3373" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog"
              class="clojure.lang.LockingTransaction/isRunning">
            clojure.lang.LockingTransaction/isRunning
        </text>
        <text font-size="24" x="-444.04822" y="599.18854" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="distributing-propagator">
            distributing-propagator
        </text>
        <text font-size="24" x="-2230.735" y="978.40857" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="stats/rate">
            stats/rate
        </text>
        <text font-size="24" x="1787.7076" y="670.5271" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/task-queue">
            time/task-queue
        </text>
        <text font-size="24" x="267.0347" y="1613.1194" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="var/std-dev">
            var/std-dev
        </text>
        <text font-size="24" x="-1349.8639" y="-670.36755" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/agent">
            clojure.core/agent
        </text>
        <text font-size="24" x="-731.66736" y="537.53125" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/implicit?">
            user/implicit?
        </text>
        <text font-size="24" x="652.1937" y="-637.8407" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/update-state">
            user/update-state
        </text>
        <text font-size="24" x="1507.2214" y="-78.328186" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/split-receiver">
            c/split-receiver
        </text>
        <text font-size="24" x="-1161.5782" y="2212.1394" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="escape-string">
            escape-string
        </text>
        <text font-size="24" x="-1092.7848" y="-450.52753" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/lookups">
            user/lookups
        </text>
        <text font-size="24" x="1253.8375" y="665.6328" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;DrainedQueue">
            -&gt;DrainedQueue
        </text>
        <text font-size="24" x="398.56128" y="-536.6087" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/inc">
            clojure.core/inc
        </text>
        <text font-size="24" x="-805.7244" y="225.71889" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/isRealized">
            user/isRealized
        </text>
        <text font-size="24" x="1223.7063" y="1314.9546" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="time/now">
            time/now
        </text>
        <text font-size="24" x="-172.87419" y="1596.5405" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="math/quantiles">
            math/quantiles
        </text>
        <text font-size="24" x="898.4494" y="-2449.3325" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="on-closed">
            on-closed
        </text>
        <text font-size="24" x="877.1175" y="-2455.901" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/on-closed">
            g/on-closed
        </text>
        <text font-size="24" x="-2210.395" y="1259.1129" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="close">
            close
        </text>
        <text font-size="24" x="296.87036" y="1645.7" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/seconds">
            t/seconds
        </text>
        <text font-size="24" x="693.4529" y="-892.37366" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/drained?">
            g/drained?
        </text>
        <text font-size="24" x="-454.4356" y="-1548.3993" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="java.lang.Thread/sleep">
            java.lang.Thread/sleep
        </text>
        <text font-size="24" x="-532.5418" y="182.00554" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/deftype+">
            user/deftype+
        </text>
        <text font-size="24" x="-2475.8186" y="-1199.0513" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="connect">
            connect
        </text>
        <text font-size="24" x="-2469.0515" y="-1176.0702" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/connect">
            g/connect
        </text>
        <text font-size="24" x="-959.14294" y="588.7767" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/invoke">
            user/invoke
        </text>
        <text font-size="24" x="257.42975" y="-1120.9337" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/fn-body">
            user/fn-body
        </text>
        <text font-size="24" x="-1316.087" y="-283.34796" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/transform">
            user/transform
        </text>
        <text font-size="24" x="-667.1474" y="-1479.9595" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/emitter-node">
            user/emitter-node
        </text>
        <text font-size="24" x="-969.78064" y="-364.0646" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/print-timing-result">
            user/print-timing-result
        </text>
        <text font-size="24" x="-189.84975" y="928.85016" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/on-error">
            g/on-error
        </text>
        <text font-size="24" x="2049.678" y="-1322.8372" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="token">
            token
        </text>
        <text font-size="24" x="-1025.7034" y="2346.2312" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/siphon">
            c/siphon
        </text>
        <text font-size="24" x="-328.5182" y="-59.23073" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/ifn?">
            clojure.core/ifn?
        </text>
        <text font-size="24" x="-1107.7972" y="435.83038" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/subscribe">
            user/subscribe
        </text>
        <text font-size="24" x="1083.447" y="-912.86096" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/ResultState">
            user/ResultState
        </text>
        <text font-size="24" x="172.54495" y="430.849" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="queue">
            queue
        </text>
        <text font-size="24" x="-1784.6221" y="1722.0311" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="mimic">
            mimic
        </text>
        <text font-size="24" x="-1766.0254" y="1710.1957" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/mimic">
            g/mimic
        </text>
        <text font-size="24" x="221.44455" y="1134.1215" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ch/join">
            ch/join
        </text>
        <text font-size="24" x="561.8282" y="-345.34802" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/ResultCallback">
            user/ResultCallback
        </text>
        <text font-size="24" x="1982.4095" y="-1383.0991" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="indent">
            indent
        </text>
        <text font-size="24" x="1011.0674" y="141.43037" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/bridge">
            g/bridge
        </text>
        <text font-size="24" x="-70.853165" y="49.860493" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/enqueue-to-listeners">
            r/enqueue-to-listeners
        </text>
        <text font-size="24" x="865.0817" y="-848.6499" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/drained-queue">
            q/drained-queue
        </text>
        <text font-size="24" x="219.29272" y="2595.392" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="on-drained">
            on-drained
        </text>
        <text font-size="24" x="223.31311" y="2574.2246" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/on-drained">
            g/on-drained
        </text>
        <text font-size="24" x="1702.7126" y="1042.3586" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/*query*">
            c/*query*
        </text>
        <text font-size="24" x="1221.8507" y="683.37714" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;ErrorQueue">
            -&gt;ErrorQueue
        </text>
        <text font-size="24" x="-767.8141" y="358.77448" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/on-success">
            user/on-success
        </text>
        <text font-size="24" x="-440.48697" y="705.8918" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Thread/currentThread">
            Thread/currentThread
        </text>
        <text font-size="24" x="590.9039" y="1142.9559" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="executor-channel">
            executor-channel
        </text>
        <text font-size="24" x="-245.94157" y="-1196.0433" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/join">
            user/join
        </text>
        <text font-size="24" x="2072.5925" y="-1440.8015" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="c/comparators">
            c/comparators
        </text>
        <text font-size="24" x="-932.5498" y="1118.0787" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="add-to-trace-counter">
            add-to-trace-counter
        </text>
        <text font-size="24" x="-239.22638" y="1603.4568" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="moving-sample">
            moving-sample
        </text>
        <text font-size="24" x="-972.30145" y="-833.73956" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.time.queue/*task-queue*">
            lamina.time.queue/*task-queue*
        </text>
        <text font-size="24" x="569.54694" y="1191.6025" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="pmap*">
            pmap*
        </text>
        <text font-size="24" x="582.902" y="1171.4286" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="trace/instrument">
            trace/instrument
        </text>
        <text font-size="24" x="-2250.185" y="-1546.5032" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="s/parse-struct-query">
            s/parse-struct-query
        </text>
        <text font-size="24" x="-947.29987" y="1088.686" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="add-sub-timing">
            add-sub-timing
        </text>
        <text font-size="24" x="385.49084" y="-711.12335" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/nil?">
            clojure.core/nil?
        </text>
        <text font-size="24" x="466.588" y="1485.6418" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="siphon">
            siphon
        </text>
        <text font-size="24" x="491.0976" y="1472.9377" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ch/siphon">
            ch/siphon
        </text>
        <text font-size="24" x="-2292.4282" y="-1145.6635" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lerp-array">
            lerp-array
        </text>
        <text font-size="24" x="-2285.9912" y="-1123.9065" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Array/getLength">
            Array/getLength
        </text>
        <text font-size="24" x="580.07684" y="959.5111" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="param">
            param
        </text>
        <text font-size="24" x="1442.7037" y="290.8967" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="edge-descriptor">
            edge-descriptor
        </text>
        <text font-size="24" x="896.0144" y="-275.56638" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="l/acquire-exclusive">
            l/acquire-exclusive
        </text>
        <text font-size="24" x="-151.54126" y="781.107" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="context/context">
            context/context
        </text>
        <text font-size="24" x="-1004.6203" y="1452.8158" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ex/trace-return">
            ex/trace-return
        </text>
        <text font-size="24" x="140.3539" y="920.92676" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/closed-result">
            g/closed-result
        </text>
        <text font-size="24" x="-1033.0286" y="-527.38525" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/send">
            clojure.core/send
        </text>
        <text font-size="24" x="2574.7197" y="384.81427" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="gen-frame">
            gen-frame
        </text>
        <text font-size="24" x="2594.2212" y="396.57907" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog"
              class="javax.swing.WindowConstants/HIDE_ON_CLOSE">
            javax.swing.WindowConstants/HIDE_ON_CLOSE
        </text>
        <text font-size="24" x="195.55945" y="1400.7098" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="dist/facets">
            dist/facets
        </text>
        <text font-size="24" x="95.42128" y="153.23457" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;ErrorResult">
            -&gt;ErrorResult
        </text>
        <text font-size="24" x="-1055.0812" y="-283.30777" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/comparators">
            user/comparators
        </text>
        <text font-size="24" x="-1425.9623" y="-276.8348" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/intra-aggregate">
            user/intra-aggregate
        </text>
        <text font-size="24" x="873.6396" y="316.9228" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;CallbackPropagator">
            -&gt;CallbackPropagator
        </text>
        <text font-size="24" x="-1504.4658" y="-319.4671" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="user/operators">
            user/operators
        </text>
        <text font-size="24" x="-1296.7529" y="-1247.4799" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/defn">
            clojure.core/defn
        </text>
        <text font-size="24" x="470.3959" y="-2661.0862" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="map*">
            map*
        </text>
        <text font-size="24" x="-992.38464" y="114.65118" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="java.lang.Long/MIN_VALUE">
            java.lang.Long/MIN_VALUE
        </text>
        <text font-size="24" x="827.40497" y="1381.4912" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/advance-until">
            t/advance-until
        </text>
        <text font-size="24" x="-334.27472" y="616.11633" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="pr/probe-enabled?">
            pr/probe-enabled?
        </text>
        <text font-size="24" x="2515.2166" y="40.68617" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="tracing?">
            tracing?
        </text>
        <text font-size="24" x="2515.9404" y="62.672527" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.core.context/timer">
            lamina.core.context/timer
        </text>
        <text font-size="24" x="-905.26355" y="354.60306" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.core.utils/retry-exception?">
            lamina.core.utils/retry-exception?
        </text>
        <text font-size="24" x="-832.33453" y="-796.50574" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.time/*period*">
            lamina.time/*period*
        </text>
        <text font-size="24" x="1080.1157" y="-239.4921" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/callback-propagator">
            g/callback-propagator
        </text>
        <text font-size="24" x="565.80457" y="1035.4644" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;NonRealTimeTaskQueue">
            -&gt;NonRealTimeTaskQueue
        </text>
        <text font-size="24" x="469.02756" y="1512.7574" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="g/siphon">
            g/siphon
        </text>
        <text font-size="24" x="355.3514" y="-2.4291072" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lock/with-exclusive-lock">
            lock/with-exclusive-lock
        </text>
        <text font-size="24" x="-535.8818" y="731.79407" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="t/mark-enter">
            t/mark-enter
        </text>
        <text font-size="24" x="1536.0917" y="668.6216" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="ch/error-value">
            ch/error-value
        </text>
        <text font-size="24" x="-1337.333" y="-743.1669" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.core.utils/error">
            lamina.core.utils/error
        </text>
        <text font-size="24" x="443.11548" y="1459.2501" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="r/siphon-result">
            r/siphon-result
        </text>
        <text font-size="24" x="1179.4471" y="-2225.3809" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="getter">
            getter
        </text>
        <text font-size="24" x="1183.5508" y="-2247.3499" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="q/query-lookup">
            q/query-lookup
        </text>
        <text font-size="24" x="-2433.3452" y="766.2119" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="named-channel">
            named-channel
        </text>
        <text font-size="24" x="-2413.952" y="755.5968" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cache/get-or-create">
            cache/get-or-create
        </text>
        <text font-size="24" x="564.47217" y="984.8408" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="cyclic-tree-seq">
            cyclic-tree-seq
        </text>
        <text font-size="24" x="-387.24365" y="615.0051" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="TimeUnit/MILLISECONDS">
            TimeUnit/MILLISECONDS
        </text>
        <text font-size="24" x="592.5693" y="-743.1498" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="clojure.core/ensure">
            clojure.core/ensure
        </text>
        <text font-size="24" x="757.37036" y="1421.2943" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="lamina.core.channel/channel">
            lamina.core.channel/channel
        </text>
        <text font-size="24" x="1934.7922" y="1773.6906" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="-&gt;Variance">
            -&gt;Variance
        </text>
        <text font-size="24" x="1914.4954" y="1764.7129" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="Math/sqrt">
            Math/sqrt
        </text>
        <text font-size="24" x="-916.73566" y="934.2091" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="resume-pipeline">
            resume-pipeline
        </text>
        <text font-size="24" x="-2171.862" y="1245.8124" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="force-close">
            force-close
        </text>
        <text font-size="24" x="590.4602" y="1048.461" fill="#000000"
              style="text-anchor: middle; dominant-baseline: central;"
              font-family="Dialog" class="wait-for-result">
            wait-for-result
        </text>
    </g>
</svg>